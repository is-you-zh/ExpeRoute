[
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Health",
        "api_description": "Get the API's health",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "checks": "empty list"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Latest",
        "api_description": "L'état courant (ie. le dernier état du colis).",
        "required_parameters": [
          {
            "name": "colisId",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": {
            "code": "str",
            "iso": "str",
            "name": "str"
          },
          "date": "str",
          "informations": "str",
          "itemId": "str",
          "localisation": "str",
          "localization": {
            "longName": "str",
            "name": "str",
            "url": "str"
          },
          "pays": "str",
          "rawDateHeure": "str",
          "status": "str",
          "typeEvenement": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Count",
        "api_description": "Compte le nombre d'étapes de l'historique, pratique pour limiter la consommation réseau ou les ressources sur un IoT. Permet par exemple de poller un état de manière optimale.",
        "required_parameters": [
          {
            "name": "colisId",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "nbSteps": "int"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "All",
        "api_description": "Tout l'historique du colis depuis son envoi jusqu'au dernier état en cours.",
        "required_parameters": [
          {
            "name": "colisid",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": {
            "code": "str",
            "iso": "str",
            "name": "str"
          },
          "date": "str",
          "informations": "str",
          "itemId": "str",
          "localisation": "str",
          "localization": {
            "longName": "str",
            "name": "str",
            "url": "str"
          },
          "pays": "str",
          "rawDateHeure": "str",
          "status": "str",
          "typeEvenement": "str"
        }
      }
    ],
    "query": "I am currently tracking a package with the ID CA107308006SI. Can you provide me with the latest information and localization details of the package? Additionally, I would like to know the country and the type of event associated with the package.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Latest"
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "All"
      }
    ],
    "query_id": 28
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/info",
        "api_description": "List all supported units",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "format": "str",
          "units": {
            "angle": [
              "list of str with length 4"
            ],
            "area": [
              "list of str with length 25"
            ],
            "data": [
              "list of str with length 42"
            ],
            "force": [
              "list of str with length 6"
            ],
            "length": [
              "list of str with length 20"
            ],
            "mass": [
              "list of str with length 22"
            ],
            "pressure": [
              "list of str with length 33"
            ],
            "temperature": [
              "list of str with length 18"
            ],
            "time": [
              "list of str with length 30"
            ],
            "volume": [
              "list of str with length 57"
            ]
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/volume/:from/:to/:number",
        "api_description": "Volume unit conversions",
        "required_parameters": [
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "cubic kilometer"
          },
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "60"
          },
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "cubic meter"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str",
          "supported": [
            "list of str with length 57"
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/time/:from/:to/:number",
        "api_description": "Temperature unit conversions",
        "required_parameters": [
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "minute"
          },
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "50"
          },
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "second"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "from": "str",
          "to": "str",
          "from_symbol": "str",
          "to_symbol": "str",
          "input": "int",
          "rounded": "int",
          "result": "int",
          "roundedResult": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/temperature/:from/:to/:number",
        "api_description": "Temperature unit conversions",
        "required_parameters": [
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "celsius"
          },
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "90"
          },
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "fahrenheit"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/pressure/:from/:to/:number",
        "api_description": "Pressure unit conversions",
        "required_parameters": [
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "pascal"
          },
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "100"
          },
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "decibar"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "from": "str",
          "to": "str",
          "from_symbol": "str",
          "to_symbol": "str",
          "input": "int",
          "rounded": "int",
          "result": "float",
          "roundedResult": "float"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/mass/:from/:to/:number",
        "api_description": "Mass unit conversions",
        "required_parameters": [
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "100"
          },
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "gram"
          },
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "pound"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "from": "str",
          "to": "str",
          "from_symbol": "str",
          "to_symbol": "str",
          "input": "int",
          "rounded": "int",
          "result": "float",
          "roundedResult": "float"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/force/:from/:to/:number",
        "api_description": "Force unit conversions",
        "required_parameters": [
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "newton"
          },
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "dyne"
          },
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "1000"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/data/:from/:to/:number",
        "api_description": "Data unit conversions",
        "required_parameters": [
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "1024"
          },
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "byte"
          },
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "bit"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "from": "str",
          "to": "str",
          "from_symbol": "str",
          "to_symbol": "str",
          "input": "int",
          "rounded": "int",
          "result": "int",
          "roundedResult": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/area/:from/:to/:number",
        "api_description": "Area unit conversions",
        "required_parameters": [
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "square feet"
          },
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "acre"
          },
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/angle/:from/:to/:number",
        "api_description": "Angle unit conversions",
        "required_parameters": [
          {
            "name": "number",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "from",
            "type": "string",
            "description": "",
            "default": "radian"
          },
          {
            "name": "to",
            "type": "string",
            "description": "",
            "default": "turn"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "from": "str",
          "to": "str",
          "from_symbol": "str",
          "to_symbol": "str",
          "input": "int",
          "rounded": "int",
          "result": "float",
          "roundedResult": "float"
        }
      }
    ],
    "query": "I'm planning a trip and need to convert 90 degrees to turns. Additionally, I would like to convert 100 grams to pounds and find out the temperature in Celsius for a given Fahrenheit value of 90.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/angle/:from/:to/:number"
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/mass/:from/:to/:number"
      },
      {
        "category_name": "Tools",
        "tool_name": "UnitConversion",
        "api_name": "/temperature/:from/:to/:number"
      }
    ],
    "query_id": 4117
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "GetUser",
        "api_description": "Gets and returns the current user data from the associated userId.",
        "required_parameters": [
          {
            "name": "userId",
            "type": "STRING",
            "description": "The Id of the user",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "RemoveEndpointData",
        "api_description": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "endpointId",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "userId",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "GetEndpointData",
        "api_description": "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId.",
        "required_parameters": [
          {
            "name": "UserId",
            "type": "STRING",
            "description": "The Id of the user",
            "default": ""
          },
          {
            "name": "EndpointId",
            "type": "STRING",
            "description": "The Id of the endpoint requested",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to remove an endpoint from my user account. Please delete the endpoint with the ID '33333'. Also, I would like to retrieve the endpoint data for the user with the ID '44444' and the endpoint ID '55555'. It should include the API URL, nickname, most recent result, active status, and last updated date.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "RemoveEndpointData"
      },
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "GetEndpointData"
      }
    ],
    "query_id": 4144
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Email Validator",
        "api_name": "/email-validator/validate",
        "api_description": "Validate email address. Key features:\n1. Checks that an email address has the correct syntax\n1. Gives friendly error messages when validation fails.\n1. Checks deliverability of an email address.\n1. Supports internationalized domain names and \n1. Normalizes email addresses",
        "required_parameters": [
          {
            "name": "email",
            "type": "STRING",
            "description": "",
            "default": "me@google.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "originalEmail": "str",
          "normalizedEmail": "str",
          "domain": "str",
          "localPart": "str",
          "isDisposable": "bool",
          "isValid": "bool",
          "isDeliverable": "bool",
          "isSmtpUtf8": "bool",
          "mx": [
            {
              "host": "str",
              "priority": "int",
              "_list_length": 1
            }
          ],
          "message": "str",
          "asciiEmail": "str",
          "asciiLocalPart": "str",
          "asciiDomain": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Email Validator",
        "api_name": "/email-validator/health",
        "api_description": "Return the health status of the API. Returns current UTC time.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "time": "str"
        }
      }
    ],
    "query": "I need to validate an email address for my company's new website. Can you check if the email 'info@mycompany.com' is valid and deliverable? It would be great if you could also provide the normalized email, domain, and the MX server details.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Email Validator",
        "api_name": "/email-validator/validate"
      },
      {
        "category_name": "Tools",
        "tool_name": "Email Validator",
        "api_name": "/email-validator/health"
      }
    ],
    "query_id": 4415
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hsl to rgb",
        "api_description": "Converts  hsl color code to rgb color code",
        "required_parameters": [
          {
            "name": "s",
            "type": "NUMBER",
            "description": "",
            "default": "78"
          },
          {
            "name": "h",
            "type": "NUMBER",
            "description": "",
            "default": "250"
          },
          {
            "name": "l",
            "type": "NUMBER",
            "description": "",
            "default": "45"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "red": "int",
          "green": "int",
          "blue": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "convert hsl",
        "api_description": "Endpoint to converts HSL color code to other color code like Hex , RGB, CMYK",
        "required_parameters": [
          {
            "name": "s",
            "type": "NUMBER",
            "description": "",
            "default": "78"
          },
          {
            "name": "h",
            "type": "NUMBER",
            "description": "",
            "default": "250"
          },
          {
            "name": "l",
            "type": "NUMBER",
            "description": "",
            "default": "45"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "hex": "str",
          "rgb": {
            "red": "int",
            "green": "int",
            "blue": "int"
          },
          "hsl": {
            "hue": "float",
            "saturation": "float",
            "lightness": "float"
          },
          "hsv": {
            "hue": "int",
            "saturation": "int",
            "value": "int"
          },
          "cmyk": {
            "cyan": "int",
            "magenta": "int",
            "yellow": "int",
            "key": "int"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "rgb to cmyk",
        "api_description": "Converts  rgb color code to cmyk color code",
        "required_parameters": [
          {
            "name": "r",
            "type": "NUMBER",
            "description": "",
            "default": "127"
          },
          {
            "name": "g",
            "type": "NUMBER",
            "description": "",
            "default": "255"
          },
          {
            "name": "b",
            "type": "NUMBER",
            "description": "",
            "default": "212"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "cyan": "int",
          "magenta": "int",
          "yellow": "int",
          "key": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "rgb to hsl",
        "api_description": "Converts  rgb color code to hsl color code",
        "required_parameters": [
          {
            "name": "r",
            "type": "NUMBER",
            "description": "",
            "default": "127"
          },
          {
            "name": "g",
            "type": "NUMBER",
            "description": "",
            "default": "255"
          },
          {
            "name": "b",
            "type": "NUMBER",
            "description": "",
            "default": "212"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "hue": "float",
          "saturation": "float",
          "lightness": "float"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "rgb to hex",
        "api_description": "Converts  rgb color code to hex color code",
        "required_parameters": [
          {
            "name": "b",
            "type": "NUMBER",
            "description": "",
            "default": "212"
          },
          {
            "name": "g",
            "type": "NUMBER",
            "description": "",
            "default": "255"
          },
          {
            "name": "r",
            "type": "NUMBER",
            "description": "",
            "default": "127"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "hex": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "convert rgb",
        "api_description": "Endpoint to converts RGB color code to other color code like Hex , HSL, CMYK",
        "required_parameters": [
          {
            "name": "r",
            "type": "NUMBER",
            "description": "",
            "default": "127"
          },
          {
            "name": "g",
            "type": "NUMBER",
            "description": "",
            "default": "255"
          },
          {
            "name": "b",
            "type": "NUMBER",
            "description": "",
            "default": "212"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "hex": "str",
          "rgb": {
            "red": "int",
            "green": "int",
            "blue": "int"
          },
          "hsl": {
            "hue": "float",
            "saturation": "float",
            "lightness": "float"
          },
          "hsv": {
            "hue": "int",
            "saturation": "int",
            "value": "int"
          },
          "cmyk": {
            "cyan": "int",
            "magenta": "int",
            "yellow": "int",
            "key": "int"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "convert hex",
        "api_description": "Endpoint to converts hex color code to other color code like RGB , HSL, CMYK",
        "required_parameters": [
          {
            "name": "hex",
            "type": "STRING",
            "description": "",
            "default": "ffffff"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "hex": "str",
          "rgb": {
            "red": "int",
            "green": "int",
            "blue": "int"
          },
          "hsl": {
            "hue": "int",
            "saturation": "int",
            "lightness": "float"
          },
          "hsv": {
            "hue": "int",
            "saturation": "int",
            "value": "int"
          },
          "cmyk": {
            "cyan": "int",
            "magenta": "int",
            "yellow": "int",
            "key": "int"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hex to  rgb",
        "api_description": "Converts hex color code to rgb color code.",
        "required_parameters": [
          {
            "name": "hex",
            "type": "STRING",
            "description": "",
            "default": "ffffff"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "red": "int",
          "green": "int",
          "blue": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hex to cmyk",
        "api_description": "Converts hex color code to  cmyk color code",
        "required_parameters": [
          {
            "name": "hex",
            "type": "STRING",
            "description": "",
            "default": "ffffff"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "cyan": "int",
          "magenta": "int",
          "yellow": "int",
          "key": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hex to hsl",
        "api_description": "Converts  hex color code to  hsl color code",
        "required_parameters": [
          {
            "name": "hex",
            "type": "STRING",
            "description": "",
            "default": "ffffff"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "hue": "int",
          "saturation": "int",
          "lightness": "float"
        }
      }
    ],
    "query": "Convert the hex color code 'ffffff' to HSL. After obtaining the HSL value, I would like to know the corresponding RGB color code as well as the CMYK code.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hex to hsl"
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hex to cmyk"
      }
    ],
    "query_id": 4471
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      }
    ],
    "query": "I'm curious to know the details of a particular movie. Can you provide me with the basic information, such as the genre, runtime, IMDb rating, language, and synopsis, for the movie 'Inception'? Additionally, please include the streaming platforms available in the US for this movie.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers"
      }
    ],
    "query_id": 9604
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Pagepeeker",
        "api_name": "2. Thumbnail ready",
        "api_description": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
        "required_parameters": [
          {
            "name": "size",
            "type": "STRING",
            "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
            "default": "m"
          },
          {
            "name": "url",
            "type": "STRING",
            "description": "The URL to generate the thumbnail from",
            "default": "http://www.mashape.com/"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Pagepeeker",
        "api_name": "1. Shoot thumbnail",
        "api_description": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
        "required_parameters": [
          {
            "name": "size",
            "type": "STRING",
            "description": "t = Tiny, 90 x 68 pixels;  s= Small, 120 x 90 pixels;  m = Medium, 200 x 150 pixels; l = Large, 400 x 300 pixels;  x = Extra large, 480 x 360 pixels",
            "default": "m"
          },
          {
            "name": "url",
            "type": "STRING",
            "description": "The URL to generate the thumbnail from",
            "default": "http://www.mashape.com/"
          }
        ],
        "optional_parameters": [
          {
            "name": "refresh",
            "type": "STRING",
            "description": "This parameter forces the currently generate d thumbnail to be regenerated.  It is optional and will be ignored unless it contains the value 1",
            "default": "1"
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I need to automatically generate website screenshots for my company's marketing materials. Can you assist me in finding APIs that allow me to generate thumbnails of different sizes? The URL to generate the thumbnails from is 'https://www.companywebsite.com'.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Pagepeeker",
        "api_name": "2. Thumbnail ready"
      },
      {
        "category_name": "Tools",
        "tool_name": "Pagepeeker",
        "api_name": "1. Shoot thumbnail"
      }
    ],
    "query_id": 12688
  },
  {
    "api_list": [
      {
        "category_name": "Video_Images",
        "tool_name": "Bing Video Search",
        "api_name": "Trending",
        "api_description": "Get currently trending videos.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_type": "str",
          "instrumentation": {
            "_type": "str"
          },
          "errors": [
            {
              "code": "str",
              "subCode": "str",
              "message": "str",
              "moreDetails": "str",
              "parameter": "str",
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "Bing Video Search",
        "api_name": "Video Details",
        "api_description": "Get insights about a video, such as related videos.",
        "required_parameters": [
          {
            "name": "modules",
            "type": "STRING",
            "description": "",
            "default": "A comma-delimited list of one or more insights to request."
          },
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "An ID that uniquely identifies a video. The Video object's videoId field contains the ID that you set this parameter to."
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_type": "str",
          "instrumentation": {
            "_type": "str"
          },
          "errors": [
            {
              "code": "str",
              "subCode": "str",
              "message": "str",
              "moreDetails": "str",
              "parameter": "str",
              "value": "str",
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "Bing Video Search",
        "api_name": "Video Search",
        "api_description": "Get videos relevant for a given query.",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "The user's search query string",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "safeSearch",
            "type": "STRING",
            "description": "A filter used to filter results for adult content.",
            "default": ""
          },
          {
            "name": "mkt",
            "type": "STRING",
            "description": "The market where the results come from. Typically, this is the country where the user is making the request from; however, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form -. For example, en-US.\n\nFull list of supported markets:\nes-AR, en-AU, de-AT, nl-BE, fr-BE, pt-BR, en-CA, fr-CA, es-CL, da-DK, fi-FI, fr-FR, de-DE, zh-HK, en-IN, en-ID, en-IE, it-IT, ja-JP, ko-KR, en-MY, es-MX, nl-NL, en-NZ, no-NO, zh-CN, pl-PL, pt-PT, en-PH, ru-RU, ar-SA, en-ZA, es-ES, sv-SE, fr-CH, de-CH, zh-TW, tr-TR, en-GB, en-US, es-US",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "The number of video results to return in the response. The actual number delivered may be less than requested.",
            "default": ""
          },
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "The zero-based offset that indicates the number of video results to skip before returning results.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "_type": "str",
          "errors": [
            {
              "code": "str",
              "subCode": "str",
              "message": "str",
              "moreDetails": "str",
              "parameter": "str",
              "value": "str",
              "_list_length": 3
            }
          ]
        }
      }
    ],
    "query": "I am working on a project and need to gather insights about a specific video. The video ID is '12345'. Can you provide me with the video details and related videos for this video?",
    "relevant APIs": [
      {
        "category_name": "Video_Images",
        "tool_name": "Bing Video Search",
        "api_name": "Video Details"
      },
      {
        "category_name": "Video_Images",
        "tool_name": "Bing Video Search",
        "api_name": "Video Search"
      }
    ],
    "query_id": 18286
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Email Checkup",
        "api_name": "/email/exist",
        "api_description": "help you to check if email really exist.",
        "required_parameters": [
          {
            "name": "email",
            "type": "STRING",
            "description": "",
            "default": "test@email.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "msg": "str",
          "info": {
            "reason": "str",
            "domain": "str",
            "provider": "str",
            "free_email": "bool"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Email Checkup",
        "api_name": "/email/format",
        "api_description": "Help you to validate email format.",
        "required_parameters": [
          {
            "name": "email",
            "type": "STRING",
            "description": "",
            "default": "test@yahoo.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "msg": "str"
        }
      }
    ],
    "query": "I want to ensure that my company's email addresses are correctly formatted and exist. Please validate the format and existence of 'info@company.com' and 'support@company.com'.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Email Checkup",
        "api_name": "/email/format"
      },
      {
        "category_name": "Tools",
        "tool_name": "Email Checkup",
        "api_name": "/email/exist"
      }
    ],
    "query_id": 21313
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/list",
        "api_description": "List all supported carriers",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/track (Deprecated)",
        "api_description": "Get tracking information of specific package",
        "required_parameters": [
          {
            "name": "carrierCode",
            "type": "STRING",
            "description": "Carrier code gotten from .../carriers/list or carriers/detect endpoint",
            "default": "yunexpress"
          },
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "Tracking number of package",
            "default": "YT2003521266065328"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "One of the following : en|cn|es|it|ru",
            "default": "en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/v2/track",
        "api_description": "Get tracking information of specific package",
        "required_parameters": [
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "Tracking number of package",
            "default": "NY323068698GB"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/detect",
        "api_description": "Detect carrier by providing tracking number",
        "required_parameters": [
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "The tracking number of parcel",
            "default": "YT2003521266065328"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm curious about the supported carriers for international shipping. Can you provide me with the list? Also, I want to track a package with the tracking number NY323068698GB. Can you give me the tracking information?",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/list"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/v2/track"
      }
    ],
    "query_id": 25341
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/list",
        "api_description": "List all supported carriers",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/track (Deprecated)",
        "api_description": "Get tracking information of specific package",
        "required_parameters": [
          {
            "name": "carrierCode",
            "type": "STRING",
            "description": "Carrier code gotten from .../carriers/list or carriers/detect endpoint",
            "default": "yunexpress"
          },
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "Tracking number of package",
            "default": "YT2003521266065328"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "One of the following : en|cn|es|it|ru",
            "default": "en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/v2/track",
        "api_description": "Get tracking information of specific package",
        "required_parameters": [
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "Tracking number of package",
            "default": "NY323068698GB"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/detect",
        "api_description": "Detect carrier by providing tracking number",
        "required_parameters": [
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "The tracking number of parcel",
            "default": "YT2003521266065328"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to track a package with the tracking number NY323068698GB. Can you provide me with the tracking information? Additionally, I need to know the carrier for another package with the tracking number YT2003521266065328. Can you detect the carrier for me?",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/v2/track"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/detect"
      }
    ],
    "query_id": 25344
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Health",
        "api_description": "Get the API's health",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "checks": "empty list"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Latest",
        "api_description": "L'état courant (ie. le dernier état du colis).",
        "required_parameters": [
          {
            "name": "colisId",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": {
            "code": "str",
            "iso": "str",
            "name": "str"
          },
          "date": "str",
          "informations": "str",
          "itemId": "str",
          "localisation": "str",
          "localization": {
            "longName": "str",
            "name": "str",
            "url": "str"
          },
          "pays": "str",
          "rawDateHeure": "str",
          "status": "str",
          "typeEvenement": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Count",
        "api_description": "Compte le nombre d'étapes de l'historique, pratique pour limiter la consommation réseau ou les ressources sur un IoT. Permet par exemple de poller un état de manière optimale.",
        "required_parameters": [
          {
            "name": "colisId",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "nbSteps": "int"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "All",
        "api_description": "Tout l'historique du colis depuis son envoi jusqu'au dernier état en cours.",
        "required_parameters": [
          {
            "name": "colisid",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": {
            "code": "str",
            "iso": "str",
            "name": "str"
          },
          "date": "str",
          "informations": "str",
          "itemId": "str",
          "localisation": "str",
          "localization": {
            "longName": "str",
            "name": "str",
            "url": "str"
          },
          "pays": "str",
          "rawDateHeure": "str",
          "status": "str",
          "typeEvenement": "str"
        }
      }
    ],
    "query": "I want to see the complete history of the package CA107308006SI, from its shipment to the current status. Can you provide me with all the details? Also, I would like to know the latest information and location of the package.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "All"
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Latest"
      }
    ],
    "query_id": 25348
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      }
    ],
    "query": "I want to find a specific movie but I only remember the title 'Inception'. Can you help me search for the movie 'Inception' and provide me with its details, including the genre, runtime, IMDb rating, and streaming availability?",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      }
    ],
    "query_id": 26613
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "GetUser",
        "api_description": "Gets and returns the current user data from the associated userId.",
        "required_parameters": [
          {
            "name": "userId",
            "type": "STRING",
            "description": "The Id of the user",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "RemoveEndpointData",
        "api_description": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "endpointId",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "userId",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "GetEndpointData",
        "api_description": "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId.",
        "required_parameters": [
          {
            "name": "UserId",
            "type": "STRING",
            "description": "The Id of the user",
            "default": ""
          },
          {
            "name": "EndpointId",
            "type": "STRING",
            "description": "The Id of the endpoint requested",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My family wants to check the status of our website's endpoint. Please provide the current user data for our userId 'abc123'. Also, retrieve the endpoint data for the specified UserId and EndpointId.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "GetUser"
      },
      {
        "category_name": "Tools",
        "tool_name": "Endpoint Monitor Tool",
        "api_name": "GetEndpointData"
      }
    ],
    "query_id": 29592
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Domain Name Search",
        "api_name": "Whois",
        "api_description": "Perform WHOIS domain lookup.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "Domain for which to perform WHOIS.",
            "default": "rapidapi.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "request_id": "str",
          "parameters": {
            "domain": "str"
          },
          "data": {
            "domain": "str",
            "sld": "str",
            "tld": "str",
            "whois": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Name Search",
        "api_name": "Domain Search",
        "api_description": "Search for domains by keyword / query. Supports all 341 TLDs available on Google Domains. Each result includes availability information, pricing, quality aspects and more data available on Google Domains.",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "Search query / keyword.",
            "default": "rapid"
          }
        ],
        "optional_parameters": [
          {
            "name": "tlds",
            "type": "STRING",
            "description": "TLDs to include in the search results, specified as a comma (,) separated list of TLDs.\n\n**e.g.** *com*\n**e.g.** *dev,info,net*",
            "default": ""
          },
          {
            "name": "available_only",
            "type": "BOOLEAN",
            "description": "Only return available domains.",
            "default": ""
          },
          {
            "name": "max_price",
            "type": "NUMBER",
            "description": "Return available domains up to a certain price, specified in the currency value of the `currency` parameter.",
            "default": ""
          },
          {
            "name": "currency",
            "type": "STRING",
            "description": "Set the currency for domain pricing. Specified as ISO 4217 currency code (e.g. GBP), For the full list of currency codes, see: [ISO 4217 currency codes](https://www.iban.com/currency-codes).",
            "default": "USD"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "request_id": "str",
          "parameters": {
            "query": "str",
            "max_price": "NoneType",
            "available_only": "bool",
            "currency": "str"
          },
          "data": {
            "domains": [
              {
                "domain": "str",
                "sld": "str",
                "tld": "str",
                "valid": "bool",
                "available": "bool",
                "domain_positives": [
                  "list of str with length 3"
                ],
                "domain_negatives": [
                  "list of str with length 1"
                ],
                "_list_length": 364
              }
            ],
            "count": "int"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Name Search",
        "api_name": "Domain Availability",
        "api_description": "Check domain availability, including domain validation, expiration, prices, domain quality aspects (advantages / considerations) and more data.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "Domain for which to get availability info.",
            "default": "example-domain-123.com"
          }
        ],
        "optional_parameters": [
          {
            "name": "currency",
            "type": "STRING",
            "description": "Set the currency for domain pricing. Specified as ISO 4217 currency code (e.g. GBP), For the full list of currency codes, see: [ISO 4217 currency codes](https://www.iban.com/currency-codes).",
            "default": "USD"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "request_id": "str",
          "parameters": {
            "domain": "str",
            "currency": "str"
          },
          "data": {
            "domain": "str",
            "sld": "str",
            "tld": "str",
            "valid": "bool",
            "available": "bool",
            "register_price": "str",
            "purchase_price": "str",
            "transfer_price": "str",
            "renew_price": "str",
            "currency": "str",
            "is_premium": "bool",
            "is_aftermarket": "bool",
            "whois_privacy_offered": "bool",
            "domain_positives": [
              "list of str with length 3"
            ],
            "domain_negatives": [
              "list of str with length 1"
            ]
          }
        }
      }
    ],
    "query": "I am looking for a domain name for my new business. Can you check the availability of the domain 'mybusinessname.com'? If it's available, provide me with the WHOIS information for the domain and the pricing details.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Domain Name Search",
        "api_name": "Domain Search"
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Name Search",
        "api_name": "Whois"
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Name Search",
        "api_name": "Domain Availability"
      }
    ],
    "query_id": 29746
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "unit converter",
        "api_name": "Transform Units Using The Get Method",
        "api_description": "Transform Units Using The Get Method",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "",
            "default": "Square mile"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "",
            "default": "area"
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "",
            "default": "Square kilometer"
          },
          {
            "name": "value",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "from": "str",
          "to": "str",
          "input": "int",
          "result": "float"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "unit converter",
        "api_name": "info",
        "api_description": "info",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "area": [
            "list of str with length 8"
          ],
          "data-transfer-rate": [
            "list of str with length 13"
          ],
          "digital-storage": [
            "list of str with length 22"
          ],
          "energy": [
            "list of str with length 10"
          ],
          "frequency": [
            "list of str with length 4"
          ],
          "fuel-economics": [
            "list of str with length 4"
          ],
          "length": [
            "list of str with length 11"
          ],
          "mass": [
            "list of str with length 10"
          ],
          "plane-angle": [
            "list of str with length 6"
          ],
          "pressure": [
            "list of str with length 5"
          ],
          "speed": [
            "list of str with length 5"
          ],
          "temperature": [
            "list of str with length 3"
          ],
          "time": [
            "list of str with length 12"
          ],
          "volume": [
            "list of str with length 19"
          ]
        }
      }
    ],
    "query": "Assist me in converting 20 degrees Celsius to Fahrenheit. Furthermore, I would like to know the conversion rate from pounds to kilograms.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "unit converter",
        "api_name": "Transform Units Using The Get Method"
      },
      {
        "category_name": "Tools",
        "tool_name": "unit converter",
        "api_name": "info"
      }
    ],
    "query_id": 29796
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Number To Speech| Provide Any Integer Number",
        "api_description": "Converting any integer number to Speech",
        "required_parameters": [
          {
            "name": "number",
            "type": "NUMBER",
            "description": "Pass Only Integer Number!",
            "default": "12345345483453456434354131"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "string",
            "description": "Select Language , By default  ( en-us ) is supported, \nHit GET Languages Endpoint to get a list of all supported languages.",
            "default": "en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Text To Speech || Provide Any Text",
        "api_description": "Convert Any Text To Speech.",
        "required_parameters": [
          {
            "name": "text",
            "type": "string",
            "description": "Support Both Text and Numbers. \nCan Pass Text Such as (\\\"any Thing to convert\\\")\nor \nCan Pass Any Number such as 1029383833384474",
            "default": "I am using All Purpose Complex Converter API for My Daily Tasks."
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "string",
            "description": "Select Language , By default  ( en-us ) is supported, \nHit GET Languages Endpoint to get a list of all supported languages.",
            "default": "en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Numbers To Words | Provide Any Integer Number",
        "api_description": "Convert any number to words.",
        "required_parameters": [
          {
            "name": "number",
            "type": "NUMBER",
            "description": "Pass only Integer Numbers! ",
            "default": "2356564546548979878435435453456464"
          }
        ],
        "optional_parameters": [
          {
            "name": "to_convert",
            "type": "STRING",
            "description": "By Default the number will be converted to cardinal, if you wan to convert it into specific format such as ordinal, ordinal_num, year or currency than you can specify it here. ",
            "default": "ordinal"
          }
        ],
        "method": "GET",
        "template_response": {
          "Provided Number": "int",
          "Converted to Words": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "GET Languages",
        "api_description": "Get All The Supported Languages.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "af": "str",
          "ar": "str",
          "bg": "str",
          "bn": "str",
          "bs": "str",
          "ca": "str",
          "cs": "str",
          "da": "str",
          "de": "str",
          "el": "str",
          "en": "str",
          "es": "str",
          "et": "str",
          "fi": "str",
          "fr": "str",
          "gu": "str",
          "hi": "str",
          "hr": "str",
          "hu": "str",
          "id": "str",
          "is": "str",
          "it": "str",
          "iw": "str",
          "ja": "str",
          "jw": "str",
          "km": "str",
          "kn": "str",
          "ko": "str",
          "la": "str",
          "lv": "str",
          "ml": "str",
          "mr": "str",
          "ms": "str",
          "my": "str",
          "ne": "str",
          "nl": "str",
          "no": "str",
          "pl": "str",
          "pt": "str",
          "ro": "str",
          "ru": "str",
          "si": "str",
          "sk": "str",
          "sq": "str",
          "sr": "str",
          "su": "str",
          "sv": "str",
          "sw": "str",
          "ta": "str",
          "te": "str",
          "th": "str",
          "tl": "str",
          "tr": "str",
          "uk": "str",
          "ur": "str",
          "vi": "str",
          "zh-CN": "str",
          "zh-TW": "str"
        }
      }
    ],
    "query": "I'm organizing a conference and I need your help. I have a list of attendees with their phone numbers. I want to convert these numbers into words. Can you convert the number 123456789 into words? Also, can you convert the text 'Welcome to the conference' into speech using the English language?",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Numbers To Words | Provide Any Integer Number"
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Text To Speech || Provide Any Text"
      }
    ],
    "query_id": 29824
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Get a specific task record",
        "api_description": "return details on a specific oTask or set of oTasks, this format can be used within a company (:companyid), team (:teamid) or user (:userid)",
        "required_parameters": [
          {
            "name": "code1-code2-coden-format",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "code1;code2;...;codeN",
            "type": "STRING",
            "description": "The specific task codes, the list of codes should be separated with \";\"",
            "default": "12;23;34"
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "formation of response",
            "default": "xml, json"
          },
          {
            "name": "company",
            "type": "NUMBER",
            "description": "The company ID",
            "default": "12345"
          },
          {
            "name": "team",
            "type": "NUMBER",
            "description": "The team ID",
            "default": "45678"
          },
          {
            "name": "username",
            "type": "STRING",
            "description": "The username of the target user account",
            "default": "myuser"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "List all oTask records",
        "api_description": "returns all task records under the company",
        "required_parameters": [
          {
            "name": "company",
            "type": "NUMBER",
            "description": "The company ID",
            "default": "12345"
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "formation of response",
            "default": "xml, json"
          },
          {
            "name": "team",
            "type": "STRING",
            "description": "The team ID",
            "default": "45678"
          },
          {
            "name": "username",
            "type": "STRING",
            "description": "The username of the target user account",
            "default": "myuser"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Get My Jobs",
        "api_description": "Returns all jobs that a user has manage_recruiting access to. This API call can be used to find the reference ID of a specific job.",
        "required_parameters": [
          {
            "name": "buyer_team__reference",
            "type": "NUMBER",
            "description": "The buyer's team reference ID",
            "default": "34567"
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "formation of response",
            "default": "xml, json"
          }
        ],
        "optional_parameters": [
          {
            "name": "include_sub_teams",
            "type": "NUMBER",
            "description": "wether to include info about sub teams",
            "default": "<0|1>"
          },
          {
            "name": "created_by",
            "type": "NUMBER",
            "description": "The user ID",
            "default": "1234"
          },
          {
            "name": "status",
            "type": "STRING",
            "description": "Status of Job",
            "default": "open"
          },
          {
            "name": "created_time_from",
            "type": "STRING",
            "description": "Filter from time",
            "default": "2008-09-09 00:00:05"
          },
          {
            "name": "created_time_to",
            "type": "STRING",
            "description": "Filter to time",
            "default": "2009-01-20 11:59:55"
          },
          {
            "name": "page",
            "type": "STRING",
            "description": "Pagination, formed as $offset;$count",
            "default": "20;10"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Sorting",
            "default": "created_time"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Generating Agency Specific Reports",
        "api_description": "Time reports can be generated for an agency, in order to use this API the authorized user needs staffing manager permissions to the agency.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "note: format must be specified in tqx parameter, see example",
            "default": "json, xml, csv"
          },
          {
            "name": "tq",
            "type": "STRING",
            "description": "The Google query goes here",
            "default": "SELECT week_worked_on, assignment_team_id, provider_id, assignment_name, sum(hours), sum(earnings) WHERE worked_on > '2009-10-01' AND worked_on <= '2009-10-31"
          },
          {
            "name": "company",
            "type": "NUMBER",
            "description": "The company ID",
            "default": "12345"
          },
          {
            "name": "agency",
            "type": "NUMBER",
            "description": "The agency ID",
            "default": "67890"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Generating Company Wide Reports",
        "api_description": "Time reports can be generated on a company-wide level. All time reports fields are supported on this level except earnings related fields. In order to access this API the authorized user needs either hiring or finance permissions to all teams within the company.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "note: format must be specified in tqx parameter, see example",
            "default": "json, xml, csv"
          },
          {
            "name": "tq",
            "type": "STRING",
            "description": "The Google query goes here",
            "default": "SELECT week_worked_on, assignment_team_id, sum(hours), sum(charges) WHERE worked_on > '2009-10-01' AND worked_on <= '2009-10-31'"
          },
          {
            "name": "company",
            "type": "NUMBER",
            "description": "The company ID",
            "default": "12345"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Get Specific Job",
        "api_description": "Returns the complete job object for the referenced job, this is only available to users with manage_recruiting permissions within the team that the job is posted in.",
        "required_parameters": [
          {
            "name": "job_reference-format",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "job_reference",
            "type": "NUMBER",
            "description": "Job reference ID",
            "default": "12345"
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "formation of response",
            "default": "xml, json"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "List all Tasks",
        "api_description": "pull all tasks assigned within a company, team or to a specific user",
        "required_parameters": [
          {
            "name": "company",
            "type": "NUMBER",
            "description": "The company ID",
            "default": "12345"
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "formation of response",
            "default": "xml, json"
          },
          {
            "name": "team",
            "type": "NUMBER",
            "description": "The team ID",
            "default": "45678"
          },
          {
            "name": "username",
            "type": "STRING",
            "description": "The username of the target user account.",
            "default": "myuser"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Generating Provider Specific Reports",
        "api_description": "This API allows callers to fetch data source of themselves. No monetary fields, such as charges or earnings, are supported. The caller of this API must be the provider himself.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "note: format must be specified in tqx parameter, see example",
            "default": "json, xml, csv"
          },
          {
            "name": "tq",
            "type": "STRING",
            "description": "The Google query goes here",
            "default": "SELECT worked_on, assignment_team_id, hours, task, memo WHERE worked_on > '2009-10-01' AND worked_on <= '2009-10-31'"
          },
          {
            "name": "provider",
            "type": "NUMBER",
            "description": "The provider ID",
            "default": "68378"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Generate Time Reports for a Specific Team",
        "api_description": "Time reports can be generated for a specific team, with or without detailed monetary information based on the relationship of the authorized user at the time the call is made and what information is included in the call.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "note: format must be specified in tqx parameter, see example.",
            "default": "json, xml, csv"
          },
          {
            "name": "tq",
            "type": "STRING",
            "description": "The Google query goes here.",
            "default": "SELECT worked_on, provider_id, provider_name, sum(hours) WHERE worked_on >= '2009-10-01' AND worked_on <= '2009-10-31'"
          },
          {
            "name": "company",
            "type": "NUMBER",
            "description": "The company ID",
            "default": "12345"
          },
          {
            "name": "team",
            "type": "NUMBER",
            "description": "The team ID",
            "default": "34567"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I need to retrieve the details of specific tasks assigned to my team and generate time reports for a specific team. Please provide the task codes 12, 23, and 34 along with the team ID 45678. The format of the response should be in CSV.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Get a specific task record"
      },
      {
        "category_name": "Tools",
        "tool_name": "oDesk APIs",
        "api_name": "Generate Time Reports for a Specific Team"
      }
    ],
    "query_id": 29917
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_cast_name",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "cast_name",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "rank": "int",
          "title": "str",
          "year": "int",
          "director": "str",
          "cast": "str",
          "rating": "float"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_director",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "movie_director",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "rank": "int",
          "title": "str",
          "year": "int",
          "director": "str",
          "cast": "str",
          "rating": "float"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_name",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "Movie_name",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "rank": "int",
          "title": "str",
          "year": "int",
          "director": "str",
          "cast": "str",
          "rating": "float"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_year",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "movie_year",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I want to find movies with Robert De Niro and Al Pacino together. Can you fetch the top-rated movies featuring both of them? Please include the movie title, year, director, and rating.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_cast_name"
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_director"
      }
    ],
    "query_id": 34753
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "URL Shortener",
        "api_name": "short-urls/{code}/visits",
        "api_description": "Shows clicks, referer, etc. for a specific short link.",
        "required_parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "",
            "default": "j95Aj"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "URL Shortener",
        "api_name": "short-urls/{code}",
        "api_description": "Shows information about a short link code.",
        "required_parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "",
            "default": "U1hAI"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My company has been using the URL Shortener tool to track the performance of our social media posts. Can you please give me insights into the visits and referral sources for the short link with the code 'j95Aj'?",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "URL Shortener",
        "api_name": "short-urls/{code}/visits"
      },
      {
        "category_name": "Tools",
        "tool_name": "URL Shortener",
        "api_name": "short-urls/{code}"
      }
    ],
    "query_id": 37847
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Number To Speech| Provide Any Integer Number",
        "api_description": "Converting any integer number to Speech",
        "required_parameters": [
          {
            "name": "number",
            "type": "NUMBER",
            "description": "Pass Only Integer Number!",
            "default": "12345345483453456434354131"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "string",
            "description": "Select Language , By default  ( en-us ) is supported, \nHit GET Languages Endpoint to get a list of all supported languages.",
            "default": "en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Text To Speech || Provide Any Text",
        "api_description": "Convert Any Text To Speech.",
        "required_parameters": [
          {
            "name": "text",
            "type": "string",
            "description": "Support Both Text and Numbers. \nCan Pass Text Such as (\\\"any Thing to convert\\\")\nor \nCan Pass Any Number such as 1029383833384474",
            "default": "I am using All Purpose Complex Converter API for My Daily Tasks."
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "string",
            "description": "Select Language , By default  ( en-us ) is supported, \nHit GET Languages Endpoint to get a list of all supported languages.",
            "default": "en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Numbers To Words | Provide Any Integer Number",
        "api_description": "Convert any number to words.",
        "required_parameters": [
          {
            "name": "number",
            "type": "NUMBER",
            "description": "Pass only Integer Numbers! ",
            "default": "2356564546548979878435435453456464"
          }
        ],
        "optional_parameters": [
          {
            "name": "to_convert",
            "type": "STRING",
            "description": "By Default the number will be converted to cardinal, if you wan to convert it into specific format such as ordinal, ordinal_num, year or currency than you can specify it here. ",
            "default": "ordinal"
          }
        ],
        "method": "GET",
        "template_response": {
          "Provided Number": "int",
          "Converted to Words": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "GET Languages",
        "api_description": "Get All The Supported Languages.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "af": "str",
          "ar": "str",
          "bg": "str",
          "bn": "str",
          "bs": "str",
          "ca": "str",
          "cs": "str",
          "da": "str",
          "de": "str",
          "el": "str",
          "en": "str",
          "es": "str",
          "et": "str",
          "fi": "str",
          "fr": "str",
          "gu": "str",
          "hi": "str",
          "hr": "str",
          "hu": "str",
          "id": "str",
          "is": "str",
          "it": "str",
          "iw": "str",
          "ja": "str",
          "jw": "str",
          "km": "str",
          "kn": "str",
          "ko": "str",
          "la": "str",
          "lv": "str",
          "ml": "str",
          "mr": "str",
          "ms": "str",
          "my": "str",
          "ne": "str",
          "nl": "str",
          "no": "str",
          "pl": "str",
          "pt": "str",
          "ro": "str",
          "ru": "str",
          "si": "str",
          "sk": "str",
          "sq": "str",
          "sr": "str",
          "su": "str",
          "sv": "str",
          "sw": "str",
          "ta": "str",
          "te": "str",
          "th": "str",
          "tl": "str",
          "tr": "str",
          "uk": "str",
          "ur": "str",
          "vi": "str",
          "zh-CN": "str",
          "zh-TW": "str"
        }
      }
    ],
    "query": "I need the speech output for the number 9999999999 in English (en-us). Also, convert the text 'Today is a beautiful day' into speech using the default language. Furthermore, convert the number 1234567890 into words in the ordinal format.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Number To Speech| Provide Any Integer Number"
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Text To Speech || Provide Any Text"
      },
      {
        "category_name": "Tools",
        "tool_name": "All Purpose Complex Converter",
        "api_name": "Convert Numbers To Words | Provide Any Integer Number"
      }
    ],
    "query_id": 38045
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get Invite Data",
        "api_description": "Fetches detailed data, including hidden data of invites or vanities",
        "required_parameters": [
          {
            "name": "invite",
            "type": "string",
            "description": "",
            "default": "minecraft"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "data": {
            "code": "str",
            "type": "int",
            "expires_at": "NoneType",
            "guild": {
              "id": "str",
              "name": "str",
              "splash": "str",
              "banner": "str",
              "description": "str",
              "icon": "str",
              "features": [
                "list of str with length 26"
              ],
              "verification_level": "int",
              "vanity_url_code": "str",
              "premium_subscription_count": "int",
              "nsfw": "bool",
              "nsfw_level": "int",
              "welcome_screen": {
                "description": "str",
                "welcome_channels": [
                  {
                    "channel_id": "str",
                    "description": "str",
                    "emoji_id": "NoneType",
                    "emoji_name": "str",
                    "_list_length": 4
                  }
                ]
              }
            },
            "channel": {
              "id": "str",
              "name": "str",
              "type": "int"
            },
            "uses": "int",
            "max_uses": "int",
            "max_age": "int",
            "temporary": "bool",
            "created_at": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get User Data",
        "api_description": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "25458687581618176"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "data": {
            "id": "str",
            "username": "str",
            "avatar": "str",
            "discriminator": "str",
            "public_flags": "int",
            "flags": "int",
            "banner": "str",
            "accent_color": "NoneType",
            "global_name": "str",
            "avatar_decoration": "str",
            "display_name": "str",
            "banner_color": "NoneType",
            "created_at": "int"
          }
        }
      }
    ],
    "query": "Fetch the user data for the user with ID '25458687581618176'. Also, I need detailed data about the 'minecraft' invite, including hidden data.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get User Data"
      },
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get Invite Data"
      }
    ],
    "query_id": 38164
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaire",
        "api_description": "Récupère un transitaire donnée",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "DOUANE_AGENCE_GONDRAND"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "codePostal": "str",
          "email": "str",
          "name": "str",
          "phone": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaires",
        "api_description": "Renvoie tous les transiatires",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "name": "str",
          "phone": "str"
        }
      }
    ],
    "query": "I'm in the process of shipping goods to Nouméa, New Caledonia and I need help with customs clearance. Can you provide me with the contact details of the customs agency GONDRAND? Furthermore, I would like to know the list of available transitaires in the region.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaire"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaires"
      }
    ],
    "query_id": 41987
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Bulk WHOIS",
        "api_name": "Get WHOIS batch",
        "api_description": "Get WHOIS batch.",
        "required_parameters": [
          {
            "name": "batch_id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Bulk WHOIS",
        "api_name": "Bulk WHOIS",
        "api_description": "WHOIS query",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "ip",
            "type": "STRING",
            "description": "IP address. Will get resolved to domain.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "json: rich, structured json, raw: raw data, split: formatted lines",
            "default": "split"
          },
          {
            "name": "domain",
            "type": "STRING",
            "description": "Domain name",
            "default": ""
          },
          {
            "name": "domains",
            "type": "STRING",
            "description": "Coma separated domain names",
            "default": "foo.com,example.org,google.com"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Bulk WHOIS",
        "api_name": "Get your WHOIS batches",
        "api_description": "Get a list of your batches.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "batches": "empty list"
        }
      }
    ],
    "query": "I'm curious about the WHOIS information for a specific domain. Can you perform a WHOIS query for the domain 'example.com' and provide the information in formatted lines? Also, please retrieve a list of all my WHOIS batches.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Bulk WHOIS",
        "api_name": "Bulk WHOIS"
      },
      {
        "category_name": "Tools",
        "tool_name": "Bulk WHOIS",
        "api_name": "Get your WHOIS batches"
      }
    ],
    "query_id": 46528
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Track List - Album",
        "api_description": "Get track list from album",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "6lggWd5q9Rh66OkDE1eNDr"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "nextOffset": "NoneType",
          "trackList": [
            {
              "id": "str",
              "title": "str",
              "artists": "str",
              "cover": "NoneType",
              "_list_length": 12
            }
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Track List - Playlist",
        "api_description": "Get Track List from Playlist",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "37i9dQZF1DX0XUsuxWHRQd"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "nextOffset": "NoneType",
          "trackList": [
            {
              "id": "str",
              "title": "str",
              "artists": "str",
              "cover": "str",
              "album": "str",
              "releaseDate": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Metadata - Album",
        "api_description": "Get metadata about album",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "6lggWd5q9Rh66OkDE1eNDr"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "artists": "str",
          "title": "str",
          "cover": "str",
          "releaseDate": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Metadata - Track",
        "api_description": "Get metadata about track",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "22LAwLoDA5b4AaGSkg6bKW"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Download Song",
        "api_description": "Download a song by spotify's song ID",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "22LAwLoDA5b4AaGSkg6bKW"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Metadata - Playlist",
        "api_description": "Get metadata about playlist",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "37i9dQZF1DX0XUsuxWHRQd"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm a music lover and I want to download all the tracks from the album with the ID 6lggWd5q9Rh66OkDE1eNDr. Can you provide me with the track list, including the title, artists, and cover? Also, fetch the metadata for each track.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Track List - Album"
      },
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Metadata - Track"
      },
      {
        "category_name": "Tools",
        "tool_name": "Spotify Downloader",
        "api_name": "Download Song"
      }
    ],
    "query_id": 46688
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get Invite Data",
        "api_description": "Fetches detailed data, including hidden data of invites or vanities",
        "required_parameters": [
          {
            "name": "invite",
            "type": "string",
            "description": "",
            "default": "minecraft"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "data": {
            "code": "str",
            "type": "int",
            "expires_at": "NoneType",
            "guild": {
              "id": "str",
              "name": "str",
              "splash": "str",
              "banner": "str",
              "description": "str",
              "icon": "str",
              "features": [
                "list of str with length 26"
              ],
              "verification_level": "int",
              "vanity_url_code": "str",
              "premium_subscription_count": "int",
              "nsfw": "bool",
              "nsfw_level": "int",
              "welcome_screen": {
                "description": "str",
                "welcome_channels": [
                  {
                    "channel_id": "str",
                    "description": "str",
                    "emoji_id": "NoneType",
                    "emoji_name": "str",
                    "_list_length": 4
                  }
                ]
              }
            },
            "channel": {
              "id": "str",
              "name": "str",
              "type": "int"
            },
            "uses": "int",
            "max_uses": "int",
            "max_age": "int",
            "temporary": "bool",
            "created_at": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get User Data",
        "api_description": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "25458687581618176"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "data": {
            "id": "str",
            "username": "str",
            "avatar": "str",
            "discriminator": "str",
            "public_flags": "int",
            "flags": "int",
            "banner": "str",
            "accent_color": "NoneType",
            "global_name": "str",
            "avatar_decoration": "str",
            "display_name": "str",
            "banner_color": "NoneType",
            "created_at": "int"
          }
        }
      }
    ],
    "query": "I'm considering joining a Discord server and would like to know more about the invite code 'xyz789'. Could you fetch the invite data for this code? Additionally, please provide the username, discriminator, and avatar of the user with ID '9876543210'. Thank you!",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get Invite Data"
      },
      {
        "category_name": "Tools",
        "tool_name": "Discord Lookup",
        "api_name": "Get User Data"
      }
    ],
    "query_id": 46760
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Helper Function",
        "api_name": "Random",
        "api_description": "Generate Random String with custom length\nBASIC: 20 \nPRO: 30\nULTRA: 70\nMEGA: 150",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "length",
            "type": "NUMBER",
            "description": "",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": {
          "result": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Helper Function",
        "api_name": "Generate UUID",
        "api_description": "Generate UUID v4 with dash or not.\nmax\nBASIC: 3\nPRO: 20\nULTRA: 50\nMEGA: 150",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "timestamp_first",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "remove_dash",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "count",
            "type": "STRING",
            "description": "",
            "default": "5"
          }
        ],
        "method": "GET",
        "template_response": {
          "result": [
            "list of str with length 3"
          ]
        }
      }
    ],
    "query": "I'm looking for a random string of 70 characters. Could you also generate 150 UUIDs with dashes? Thank you!",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Helper Function",
        "api_name": "Random"
      },
      {
        "category_name": "Tools",
        "tool_name": "Helper Function",
        "api_name": "Generate UUID"
      }
    ],
    "query_id": 54801
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "DNS",
        "api_description": "Checks the domain DNS records",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": "rapidapi.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "domain": "str",
          "valid": "bool",
          "A": [
            "list of str with length 2"
          ],
          "AAAA": [
            "list of str with length 2"
          ],
          "CNAME": [
            "list of str with length 1"
          ],
          "NS": [
            "list of str with length 2"
          ],
          "MX": [
            "list of str with length 5"
          ],
          "TXT": [
            "list of str with length 19"
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "Keyword Search",
        "api_description": "Query up to 333 TLDs to check registered domains",
        "required_parameters": [
          {
            "name": "sld",
            "type": "STRING",
            "description": "",
            "default": "rapidapi"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "sld": "str",
          "found": "bool",
          "lookup_tlds": "int",
          "found_tlds": "int",
          "registered": [
            {
              "domain": "str",
              "tld": "str",
              "created_at": "str",
              "updated_at": "str",
              "expires_at": "str",
              "_list_length": 18
            }
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "Whois",
        "api_description": "Checks the domain Whois Details",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": "rapidapi.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "domain": "str",
          "sld": "str",
          "tld": "str",
          "valid": "bool",
          "available": "bool",
          "created_at": "str",
          "updated_at": "str",
          "expires_at": "str",
          "registrar": "str",
          "whois": "str"
        }
      }
    ],
    "query": "I need to check the availability of a domain name for my family's upcoming event website. Can you please verify if the domain 'ourfamilyevent.com' is available and provide the DNS records and Whois details for that domain?",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "DNS"
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "Whois"
      }
    ],
    "query_id": 54844
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET quotes by actor",
        "api_description": "This endpoint will return back quotes by the given actor or actress.",
        "required_parameters": [
          {
            "name": "actor",
            "type": "string",
            "description": "",
            "default": "al_pachino"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "quoteFrom": "str",
          "actor": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET a random quote",
        "api_description": "This endpoint will return a random quote",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "quoteFrom": "str",
          "actor": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET quote by movie or TV show name",
        "api_description": "This endpoint will return quotes by given movie or TV show name",
        "required_parameters": [
          {
            "name": "show",
            "type": "string",
            "description": "",
            "default": "the_wizard_of_oz"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "actor": "str",
          "quoteFrom": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET quote by Year",
        "api_description": "This endpoint will return back quotes by the given year",
        "required_parameters": [
          {
            "name": "year",
            "type": "NUMBER",
            "description": "",
            "default": "1939"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "actor": "str",
          "quoteFrom": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "Get quote by character",
        "api_description": "This end point will return back quotes delivered by the given character",
        "required_parameters": [
          {
            "name": "character",
            "type": "string",
            "description": "",
            "default": "dorothy_gale"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "actor": "str",
          "quoteFrom": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "Get individual quotes by quote ID",
        "api_description": "This endpoint will return back individual quotes based on the given ID",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "4"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "actor": "str",
          "quoteFrom": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "Get all quotes",
        "api_description": "This endpoint will return back all the quotes in the API",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "actor": "str",
          "quoteFrom": "str",
          "year": "int"
        }
      }
    ],
    "query": "I'm a film student and I'm researching quotes from movies released in the year 1939. Can you fetch me quotes from movies released in that year? It would be helpful if you can provide the character names and the actors who delivered these quotes.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET quote by Year"
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "Get individual quotes by quote ID"
      }
    ],
    "query_id": 59862
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Waktu Solat",
        "api_name": "/solat/time",
        "api_description": "Display the prayer time based on selected zone.\nData in json format.",
        "required_parameters": [
          {
            "name": "code",
            "type": "STRING",
            "description": "zone code, get from API /solat/list",
            "default": "SWK07"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "description": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Waktu Solat",
        "api_name": "/solat/list",
        "api_description": "List of zones in each state along with the zone code.\nData in json format.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"Johor\": {\"JHR01\": \"str\", \"JHR02\": \"str\", \"JHR03\": \"str\", \"JHR04\": \"str\"}, \"Kedah\": {\"KDH01\": \"str\", \"KDH02\": \"str\", \"KDH03\": \"str\", \"KDH04\": \"str\", \"KDH05\": \"str\", \"KDH06\": \"str\", \"KDH07\": \"str\"}, \"Kelantan\": {\"KTN01\": \"str\", \"KTN02\": \"str\"}, \"Melaka\": {\"MLK01\": \"str\"}, \"Negeri Sembilan\": {\"NGS01\": \"str\", \"NGS02\": \"str\", \"NGS03\": \"str\"}, \"Pahang\": {\"PHG01\": \"str\", \"PHG02\": \"str\", \"PHG03\": \"str\", \"PHG04\": \"str\", \"PHG05\": \"str\", \"PHG06\": \"str\"}, \"Perlis\": {\"PLS01\": \"str\"}, \"Pulau Pinang\": {\"PNG01\": \"str\"}, \"Perak\": {\"PRK01\": \"str\", \"PRK02\": \"str\", \"PRK03\": \"str\", \"PRK04\": \"str\", \"PRK05\": \"str\", \"PRK06\": \"str\", \"PRK07\": \"str\"}, \"Sabah\": {\"SBH01\": \"str\", \"SBH02\": \"str\", \"SBH03\": \"str\", \"SBH04\": \"str\", \"SBH05\": \"str\", \"SBH06\": \"str\", \"SBH07\": \"str\", \"SBH08\": \"str\", \"SBH09\": \"str\"}, \"Selangor\": {\"SGR01\": \"str\", \"SGR02\": \"str\", \"SGR03\": \"str\"}, \"Sarawak\": {\"SWK01\": \"str\", \"SWK02\": \"str\", \"SWK03\": \"str\", \"SWK04\": \"str\", \"SWK05\": \"str\", \"SWK06\": \"str\", \"SWK07\": \"str\", \"SWK08\": \"str\", \"SWK09\":"
      }
    ],
    "query": "I'm planning a trip to Langkawi. Can you give me the prayer times for Langkawi? Additionally, I need the prayer times for Penang and Perak on the same day.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Waktu Solat",
        "api_name": "/solat/time"
      },
      {
        "category_name": "Tools",
        "tool_name": "Waktu Solat",
        "api_name": "/solat/list"
      }
    ],
    "query_id": 62960
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/list",
        "api_description": "List all supported carriers",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/track (Deprecated)",
        "api_description": "Get tracking information of specific package",
        "required_parameters": [
          {
            "name": "carrierCode",
            "type": "STRING",
            "description": "Carrier code gotten from .../carriers/list or carriers/detect endpoint",
            "default": "yunexpress"
          },
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "Tracking number of package",
            "default": "YT2003521266065328"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "One of the following : en|cn|es|it|ru",
            "default": "en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/v2/track",
        "api_description": "Get tracking information of specific package",
        "required_parameters": [
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "Tracking number of package",
            "default": "NY323068698GB"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/detect",
        "api_description": "Detect carrier by providing tracking number",
        "required_parameters": [
          {
            "name": "trackingNumber",
            "type": "STRING",
            "description": "The tracking number of parcel",
            "default": "YT2003521266065328"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm planning to send a package internationally and I want to track its progress. Can you provide me with the tracking information for the package with the tracking number YT2003521266065328? Also, could you detect the carrier for this package? Thanks!",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "packages/track (Deprecated)"
      },
      {
        "category_name": "Logistics",
        "tool_name": "TrackingMore_v2",
        "api_name": "carriers/detect"
      }
    ],
    "query_id": 67089
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "About",
        "api_description": "Get general information.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "version": "str",
          "homepage": "str",
          "source_code": "str",
          "maintainer": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get a Language",
        "api_description": "Get a language.",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "10"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "is_archived": "bool",
          "source_file": "str",
          "compile_cmd": "NoneType",
          "run_cmd": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get Configuration",
        "api_description": "Configuration information gives you detailed information about the configuration of Judge0.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"maintenance_mode\": \"bool\", \"enable_wait_result\": \"bool\", \"enable_compiler_options\": \"bool\", \"allowed_languages_for_compile_options\": \"empty list\", \"enable_command_line_arguments\": \"bool\", \"enable_submission_delete\": \"bool\", \"enable_callbacks\": \"bool\", \"callbacks_max_tries\": \"int\", \"callbacks_timeout\": \"float\", \"enable_additional_files\": \"bool\", \"max_queue_size\": \"int\", \"cpu_time_limit\": \"float\", \"max_cpu_time_limit\": \"float\", \"cpu_extra_time\": \"float\", \"max_cpu_extra_time\": \"float\", \"wall_time_limit\": \"float\", \"max_wall_time_limit\": \"float\", \"memory_limit\": \"int\", \"max_memory_limit\": \"int\", \"stack_limit\": \"int\", \"max_stack_limit\": \"int\", \"max_processes_and_or_threads\": \"int\", \"max_max_processes_and_or_threads\": \"int\", \"enable_per_process_and_thread_time_limit\": \"bool\", \"allow_enable_per_process_and_thread_time_limit\": \"bool\", \"enable_per_process_and_thread_memory_limit\": \"bool\", \"allow_enable_per_process_and_thread_memory_limit\": \"bool\", \"max_file_size\": \"int\", \"max_max_file_size\": \""
      },
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get Languages",
        "api_description": "Get active languages.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get Statuses",
        "api_description": "Get statuses.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "description": "str"
        }
      }
    ],
    "query": "I'm a software developer and I'm interested in using Judge0 for my projects. Can you give me an overview of the available languages? Additionally, I would like to know the source file and run command for the language with ID 10.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get Languages"
      },
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get a Language"
      }
    ],
    "query_id": 71638
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoFromCache",
        "api_description": "Return the video summary of a given YouTube video that has already been summarized. The summary is provided in markdown format.",
        "required_parameters": [
          {
            "name": "videoURL",
            "type": "STRING",
            "description": "The URL of the YouTube video to get from the summary cache.",
            "default": "https://www.youtube.com/watch?v=ykY69lSpDdo"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "summary": "str",
          "videoTitle": "str",
          "videoAuthor": "str",
          "videoId": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoWithToken",
        "api_description": "Create a video summary of a given YouTube video. The summary is provided in markdown format.",
        "required_parameters": [
          {
            "name": "videoURL",
            "type": "STRING",
            "description": "The URL of the YouTube video to summarize.",
            "default": "https://www.youtube.com/watch?v=Yzx7ihtCGBs"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I recently watched a YouTube video about DIY home improvement projects, and I would like to get a summary of the video. Can you provide me with the summarized content in markdown format? Please include the video title, author, and ID. The video URL is https://www.youtube.com/watch?v=Yzx7ihtCGBs.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoFromCache"
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoWithToken"
      }
    ],
    "query_id": 80170
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "languagelayer",
        "api_name": "/batch",
        "api_description": "API endpoint used to perform batch language detection",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "query[]",
            "type": "STRING",
            "description": "Append multiple \"query[]\" parameters containing query texts",
            "default": ""
          },
          {
            "name": "show_query",
            "type": "NUMBER",
            "description": "Set to \"1\" if you want the API's JSON result set to return your query text.",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "error": {
            "code": "int",
            "type": "str",
            "info": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "languagelayer",
        "api_name": "/detect",
        "api_description": "API endpoint used to perform standard (single) language detection",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "The full query text you would like the API to perform language detection for",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "show_query",
            "type": "NUMBER",
            "description": "Set to \"1\" if you want the API's JSON result set to return your query text",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "error": {
            "code": "int",
            "type": "str",
            "info": "str"
          }
        }
      }
    ],
    "query": "I'm developing a language quiz app and I need to detect the language of user-submitted sentences. Can you perform standard language detection for the following sentence: 'Je m'appelle Sophie.'? Please return the query text in the JSON result set.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "languagelayer",
        "api_name": "/batch"
      },
      {
        "category_name": "Tools",
        "tool_name": "languagelayer",
        "api_name": "/detect"
      }
    ],
    "query_id": 80248
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "DNS",
        "api_description": "Checks the domain DNS records",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": "rapidapi.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "domain": "str",
          "valid": "bool",
          "A": [
            "list of str with length 2"
          ],
          "AAAA": [
            "list of str with length 2"
          ],
          "CNAME": [
            "list of str with length 1"
          ],
          "NS": [
            "list of str with length 2"
          ],
          "MX": [
            "list of str with length 5"
          ],
          "TXT": [
            "list of str with length 19"
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "Keyword Search",
        "api_description": "Query up to 333 TLDs to check registered domains",
        "required_parameters": [
          {
            "name": "sld",
            "type": "STRING",
            "description": "",
            "default": "rapidapi"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "sld": "str",
          "found": "bool",
          "lookup_tlds": "int",
          "found_tlds": "int",
          "registered": [
            {
              "domain": "str",
              "tld": "str",
              "created_at": "str",
              "updated_at": "str",
              "expires_at": "str",
              "_list_length": 18
            }
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "Whois",
        "api_description": "Checks the domain Whois Details",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": "rapidapi.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "domain": "str",
          "sld": "str",
          "tld": "str",
          "valid": "bool",
          "available": "bool",
          "created_at": "str",
          "updated_at": "str",
          "expires_at": "str",
          "registrar": "str",
          "whois": "str"
        }
      }
    ],
    "query": "Please check if the domain 'example.com' is registered and valid. If it is registered, provide me with the DNS records and Whois details.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "DNS"
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker",
        "api_name": "Whois"
      }
    ],
    "query_id": 80504
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "SEO - Count website pages in Google index",
        "api_name": "countPages",
        "api_description": "Count website pages in Google index",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "Can you help me analyze the number of pages indexed in Google for my company's website? The URL is 'www.example.com'.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "SEO - Count website pages in Google index",
        "api_name": "countPages"
      }
    ],
    "query_id": 86251
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Color to picture API",
        "api_name": "Color to picture",
        "api_description": "Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color)",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "height",
            "type": "STRING",
            "description": "",
            "default": "200"
          },
          {
            "name": "color",
            "type": "STRING",
            "description": "",
            "default": "ff0000"
          },
          {
            "name": "width",
            "type": "STRING",
            "description": "",
            "default": "200"
          },
          {
            "name": "mode",
            "type": "STRING",
            "description": "",
            "default": "RGB"
          }
        ],
        "method": "GET"
      }
    ],
    "query": "Hello! I'm working on a design project and need a solid color image. Can you assist me in creating a picture with a single color? The color should be in hex code #ff0000, and the dimensions of the image should be 200x200 pixels.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Color to picture API",
        "api_name": "Color to picture"
      }
    ],
    "query_id": 86335
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Check page or website loading speed",
        "api_name": "getPageSpeed",
        "api_description": "Get page or website loading speed in seconds",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My friend is a web developer and wants to check the loading speed of his personal blog. Can you help him by providing the page or website loading speed in seconds for the URL 'www.blog.com'? It would be great if he could get recommendations to improve the loading speed as well.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Check page or website loading speed",
        "api_name": "getPageSpeed"
      }
    ],
    "query_id": 86394
  },
  {
    "api_list": [
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "Author with his photo",
        "api_description": "Shows the author who have quotes saved in this API  with his photo and ID.",
        "required_parameters": [
          {
            "name": "driverId",
            "type": "string",
            "description": "",
            "default": "raikkonen"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "img": "str",
          "id": "str"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "Driver's quotes with pagination of 10 quotes each page",
        "api_description": "Gets 10 quotes of the driver depending on which page you input.",
        "required_parameters": [
          {
            "name": "driverId",
            "type": "string",
            "description": "",
            "default": "ricciardo"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "author": "str"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "Driver's quotes by ID",
        "api_description": "Gets a quote by its ID.",
        "required_parameters": [
          {
            "name": "driverId",
            "type": "string",
            "description": "",
            "default": "ricciardo"
          },
          {
            "name": "quoteId",
            "type": "NUMBER",
            "description": "",
            "default": "59"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "author": "str"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "List of authors with photos",
        "api_description": "Shows the list of F1 drivers and personalities who have quotes saved in this API  with they photos and IDs",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "img": "str",
          "id": "str"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "List of drivers and personalities",
        "api_description": "Shows the list of F1 drivers and personalities who have quotes saved in this API, and their code to access them.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"Alexander_Albon\": \"str\", \"Jean_Alesi\": \"str\", \"Fernando_Alonso\": \"str\", \"Mario_Andretti\": \"str\", \"Alberto_Ascari\": \"str\", \"Rubens_Barrichello\": \"str\", \"Mattia_Binotto\": \"str\", \"Valtteri_Bottas\": \"str\", \"Jack_Brabham\": \"str\", \"Ross_Brawn\": \"str\", \"Flavio_Briatore\": \"str\", \"Jenson_Button\": \"str\", \"David_Coulthard\": \"str\", \"Ron_Dennis\": \"str\", \"Bernie_Ecclestone\": \"str\", \"Marcus_Ericsson\": \"str\", \"Juan_Manuel_Fangio\": \"str\", \"Giancarlo_Fisichella\": \"str\", \"Emerson_Fittipaldi\": \"str\", \"Pierre_Gasly\": \"str\", \"Romain_Grosjean\": \"str\", \"Mika_H\\u00e4kkinen\": \"str\", \"Lewis_Hamilton\": \"str\", \"Damon_Hill\": \"str\", \"Graham_Hill\": \"str\", \"Phil_Hill\": \"str\", \"Christian_Horner\": \"str\", \"Nico_H\\u00fclkenberg\": \"str\", \"Jacky_Ickx\": \"str\", \"Eddie_Irvine\": \"str\", \"Kamui_Kobayashi\": \"str\", \"Heikki_Kovalainen\": \"str\", \"Robert_Kubica\": \"str\", \"Daniil_Kvyat\": \"str\", \"Nicholas_Latifi\": \"str\", \"Niki_Lauda\": \"str\", \"Charles_Leclerc\": \"str\", \"Kevin_Magnussen\": \"str\", \"Pastor_Maldonado\": \"str\", \"Nigel_Mansell\": "
      },
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "10 interesting quotes",
        "api_description": "Gets 10 interesting quotes said by famous F1 people.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "Driver's quotes",
        "api_description": "Gets the quotes of a specific driver.",
        "required_parameters": [
          {
            "name": "driverId",
            "type": "string",
            "description": "",
            "default": "verstappen"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "author": "str"
        }
      }
    ],
    "query": "I am organizing a Formula 1 themed party and I need some quotes by Daniel Ricciardo to put up as decorations. Can you fetch a specific quote by its ID? The driver ID is 'ricciardo' and the quote ID is '59'. Additionally, I would like to display a photo of Daniel Ricciardo along with his ID. Can you provide that information as well?",
    "relevant APIs": [
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "Driver's quotes by ID"
      },
      {
        "category_name": "Sports",
        "tool_name": "F1 drivers quotes",
        "api_name": "Author with his photo"
      }
    ],
    "query_id": 2144
  },
  {
    "api_list": [
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get a Specific Team",
        "api_description": "This endpoint retrieves a specific team",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "The ID of the team",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get All Games",
        "api_description": "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "The page number, used for pagination.",
            "default": "0"
          },
          {
            "name": "per_page",
            "type": "STRING",
            "description": "The number of results returned per call, used for pagination.",
            "default": "25"
          },
          {
            "name": "team_ids",
            "type": "STRING",
            "description": "An array of team_ids",
            "default": ""
          },
          {
            "name": "date",
            "type": "STRING",
            "description": "An array of dates formatted in 'YYYY-MM-DD'",
            "default": ""
          },
          {
            "name": "Seasons",
            "type": "STRING",
            "description": "An array of seasons",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "id": "int",
              "date": "str",
              "home_team": {
                "id": "int",
                "abbreviation": "str",
                "city": "str",
                "conference": "str",
                "division": "str",
                "full_name": "str",
                "name": "str"
              },
              "home_team_score": "int",
              "period": "int",
              "postseason": "bool",
              "season": "int",
              "status": "str",
              "time": "str",
              "visitor_team": {
                "id": "int",
                "abbreviation": "str",
                "city": "str",
                "conference": "str",
                "division": "str",
                "full_name": "str",
                "name": "str"
              },
              "visitor_team_score": "int",
              "_list_length": 25
            }
          ],
          "meta": {
            "total_pages": "int",
            "current_page": "int",
            "next_page": "int",
            "per_page": "int",
            "total_count": "int"
          }
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get a Specific Game",
        "api_description": "This endpoint retrieves a specific game",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "ID of the game",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get All Stats",
        "api_description": "Retrieves all stats",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "seasons",
            "type": "STRING",
            "description": "An array of seasons",
            "default": ""
          },
          {
            "name": "page",
            "type": "STRING",
            "description": "The page number, used for pagination.",
            "default": "0"
          },
          {
            "name": "per_page",
            "type": "STRING",
            "description": "The number of results returned per call, used for pagination.",
            "default": "25"
          },
          {
            "name": "player_ids",
            "type": "STRING",
            "description": "An array of player_ids",
            "default": ""
          },
          {
            "name": "dates",
            "type": "STRING",
            "description": "An array of dates formatted in 'YYYY-MM-DD'",
            "default": ""
          },
          {
            "name": "game_ids",
            "type": "STRING",
            "description": "An array of game_ids",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": [{\"id\": \"int\", \"ast\": \"int\", \"blk\": \"int\", \"dreb\": \"int\", \"fg3_pct\": \"float\", \"fg3a\": \"int\", \"fg3m\": \"int\", \"fg_pct\": \"float\", \"fga\": \"int\", \"fgm\": \"int\", \"ft_pct\": \"float\", \"fta\": \"int\", \"ftm\": \"int\", \"game\": {\"id\": \"int\", \"date\": \"str\", \"home_team_id\": \"int\", \"home_team_score\": \"int\", \"period\": \"int\", \"postseason\": \"bool\", \"season\": \"int\", \"status\": \"str\", \"time\": \"str\", \"visitor_team_id\": \"int\", \"visitor_team_score\": \"int\"}, \"min\": \"str\", \"oreb\": \"int\", \"pf\": \"int\", \"player\": {\"id\": \"int\", \"first_name\": \"str\", \"height_feet\": \"NoneType\", \"height_inches\": \"NoneType\", \"last_name\": \"str\", \"position\": \"str\", \"team_id\": \"int\", \"weight_pounds\": \"NoneType\"}, \"pts\": \"int\", \"reb\": \"int\", \"stl\": \"int\", \"team\": {\"id\": \"int\", \"abbreviation\": \"str\", \"city\": \"str\", \"conference\": \"str\", \"division\": \"str\", \"full_name\": \"str\", \"name\": \"str\"}, \"turnover\": \"int\", \"_list_length\": 25}], \"meta\": {\"total_pages\": \"int\", \"current_page\": \"int\", \"next_page\": \"int\", \"per_page\": \"int\", \"total_count\": \"i"
      },
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get All Players",
        "api_description": "This endpoint retrieves all players from all seasons.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "The page number, used for pagination.",
            "default": "0"
          },
          {
            "name": "per_page",
            "type": "STRING",
            "description": "The number of results returned per call, used for pagination.",
            "default": "25"
          },
          {
            "name": "search",
            "type": "STRING",
            "description": "Used to filter players based on their name. For example, ?search=davis will return players that have 'davis' in their first or last name.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "id": "int",
              "first_name": "str",
              "height_feet": "NoneType",
              "height_inches": "NoneType",
              "last_name": "str",
              "position": "str",
              "team": {
                "id": "int",
                "abbreviation": "str",
                "city": "str",
                "conference": "str",
                "division": "str",
                "full_name": "str",
                "name": "str"
              },
              "weight_pounds": "NoneType",
              "_list_length": 25
            }
          ],
          "meta": {
            "total_pages": "int",
            "current_page": "int",
            "next_page": "int",
            "per_page": "int",
            "total_count": "int"
          }
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get Specific Player",
        "api_description": "This endpoint retrieves a specific player.",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "The ID of the player to retrieve",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get All Teams",
        "api_description": "This endpoint retrieves all teams for the current season.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "The page number, used for pagination.",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "id": "int",
              "abbreviation": "str",
              "city": "str",
              "conference": "str",
              "division": "str",
              "full_name": "str",
              "name": "str",
              "_list_length": 30
            }
          ],
          "meta": {
            "total_pages": "int",
            "current_page": "int",
            "next_page": "int",
            "per_page": "int",
            "total_count": "int"
          }
        }
      }
    ],
    "query": "I want to know the details of the game with ID 12345. Give me the date, home team, home team score, visitor team, and visitor team score. Additionally, provide the player statistics for this game.",
    "relevant APIs": [
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get a Specific Game"
      },
      {
        "category_name": "Sports",
        "tool_name": "Free NBA",
        "api_name": "Get All Stats"
      }
    ],
    "query_id": 2399
  },
  {
    "api_list": [
      {
        "category_name": "Education",
        "tool_name": "Learning Engine",
        "api_name": "/memre_api/v1/readiness",
        "api_description": "Get the readiness of the user for the specified item.\n",
        "required_parameters": [
          {
            "name": "user_id",
            "type": "STRING",
            "description": "The ID of the user",
            "default": ""
          },
          {
            "name": "item_id",
            "type": "STRING",
            "description": "The ID of the item",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "Learning Engine",
        "api_name": "/memre_api/v1/study",
        "api_description": "Get items a specific user should study.\n",
        "required_parameters": [
          {
            "name": "user_id",
            "type": "STRING",
            "description": "The ID of the user you want to get learning items for",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "Learning Engine",
        "api_name": "/memre_api/v1/concepts",
        "api_description": "Retrieve a list of concepts for the current customer.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "Learning Engine",
        "api_name": "/memre_api/v1/concepts/{id}",
        "api_description": "Retrieve the details of a specific concept by ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "Concept ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "Learning Engine",
        "api_name": "/memre_api/v1/users/{user_id}/learning_stats",
        "api_description": "Get the most effective times of day for a user to study.\n",
        "required_parameters": [
          {
            "name": "user_id",
            "type": "STRING",
            "description": "The ID of the user you want to get learning stats for",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      }
    ],
    "query": "I'm working on a research project and require the learning statistics for a user. Could you please provide me with the user's most effective study times? The user ID is 'user123'. Additionally, I would like to study the recommended items for this user.",
    "relevant APIs": [
      {
        "category_name": "Education",
        "tool_name": "Learning Engine",
        "api_name": "/memre_api/v1/users/{user_id}/learning_stats"
      },
      {
        "category_name": "Education",
        "tool_name": "Learning Engine",
        "api_name": "/memre_api/v1/study"
      }
    ],
    "query_id": 3922
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "Remove Item",
        "api_description": "Removes items from the cart.",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso801",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.",
            "default": ""
          },
          {
            "name": "catalog_item_id",
            "type": "STRING",
            "description": "The catalog_item_id of the item. This item must already exist in the cart.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest of restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [
          {
            "name": "option_id",
            "type": "STRING",
            "description": "The option_id of the item, if the item has options. This option_id must match the option_id the item already in the cart.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "Empty",
        "api_description": "Removes all items in the cart.",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "List Available Catalogs",
        "api_description": "Lists the Available Catalogs",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [
          {
            "name": "token",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601 datetime",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "Order List",
        "api_description": "This method returns a list of order numbers (the Catalog API order numbers, not external_order_number) that match a given external_user_id.",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is the external_user_id you passed when you placed the order. This method does not work with orders that do not have an external_user_id set.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "STRING",
            "description": "The number of orders to return. Defaults to 10. Can be increased to a maximum of 50.",
            "default": ""
          },
          {
            "name": "page",
            "type": "STRING",
            "description": "The page number of results to return when there are more than per_page results.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "View Item",
        "api_description": "Returns an image and description of the item",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "catalog_item_id",
            "type": "STRING",
            "description": "The catalog_item_id from the search_catalog method.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "Unlock",
        "api_description": "Unlocks a cart that has been locked via the cart_validate method.",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "View",
        "api_description": "Returns the current address and items in the cart.",
        "required_parameters": [
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.",
            "default": ""
          },
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "Validate",
        "api_description": "Validates the address and items in the cart. You should call this method just before placing an order to make sure that the order will not be rejected.",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [
          {
            "name": "locked",
            "type": "STRING",
            "description": "Set this to \"1\" to lock the cart. (Defaults to \"0\") A locked cart cannot be modified, meaning that items cannot be added or removed, and the address cannot be changed. One use for this would be to lock the cart before processing a credit card transaction in your system. You would then be ensured that the item in the cart could not be changed while the transaction is processing. You can only call cart_view, cart_unlock, or cart_order_place on a locked cart.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "Set Address",
        "api_description": "Adds a shipping address to the cart",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.",
            "default": ""
          },
          {
            "name": "first_name",
            "type": "STRING",
            "description": "Max length is 40 characters.",
            "default": ""
          },
          {
            "name": "last_name",
            "type": "STRING",
            "description": "Max length is 40 characters.",
            "default": ""
          },
          {
            "name": "address_1",
            "type": "STRING",
            "description": "Max length is 75 characters.",
            "default": ""
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "state_province",
            "type": "STRING",
            "description": "For US states, this must be the two character abbreviation.",
            "default": ""
          },
          {
            "name": "postal_code",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "The ISO 3166-1 alpha-2 country code of the country the order will be shipped to.",
            "default": ""
          },
          {
            "name": "phone_number",
            "type": "STRING",
            "description": "If set, this must be a valid phone number. This will only be used for order support or to contact the addressee to arrange a delivery time for any items that require a signature.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [
          {
            "name": "address_2",
            "type": "STRING",
            "description": "Max length is 60 characters.",
            "default": ""
          },
          {
            "name": "address_3",
            "type": "STRING",
            "description": "Max length is 60 characters.",
            "default": ""
          },
          {
            "name": "email",
            "type": "STRING",
            "description": "If set, this must be a valid email address. We highly recommend that you provide an email address so that we can contact the addressee if there is a problem with the order.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "Set Item Quantity",
        "api_description": "Adds items to the cart. The quantity passed to this call overrides the quantity of a duplicate item.",
        "required_parameters": [
          {
            "name": "creds_datetime",
            "type": "STRING",
            "description": "UTC iso8601",
            "default": ""
          },
          {
            "name": "creds_uuid",
            "type": "STRING",
            "description": "GUID",
            "default": ""
          },
          {
            "name": "creds_checksum",
            "type": "STRING",
            "description": "checksum",
            "default": ""
          },
          {
            "name": "socket_id",
            "type": "STRING",
            "description": "This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.",
            "default": ""
          },
          {
            "name": "external_user_id",
            "type": "STRING",
            "description": "This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.",
            "default": ""
          },
          {
            "name": "catalog_item_id",
            "type": "STRING",
            "description": "The catalog_item_id from the search_catalog method.",
            "default": ""
          },
          {
            "name": "quantity",
            "type": "STRING",
            "description": "The number of items to add. If this item is already in the cart, this quantity will replace the current quantity.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "rest or restx",
            "default": "rest"
          }
        ],
        "optional_parameters": [
          {
            "name": "option_id",
            "type": "STRING",
            "description": "The option_id from the search_catalog method. (This is required for items that have options.)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "Fault": {
            "faultcode": "str",
            "faultstring": "str",
            "detail": "NoneType"
          }
        }
      }
    ],
    "query": "I want to view the details of a specific item in the cart. The catalog_item_id of the item is '56789' and it is in the socket with the socket_id 'def456'. Can you please show me the image and description of this item?",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "View Item"
      },
      {
        "category_name": "Business",
        "tool_name": "CatalogAPI",
        "api_name": "View"
      }
    ],
    "query_id": 8025
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Current Block Number",
        "api_description": "Get the current block number of the Binance Smart Chain!",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "network",
            "type": "STRING",
            "description": "Specify wich network you wanna use! (mainnet/testnet)",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Account Balance",
        "api_description": "Get the BNB balance for an address on the Binance Smart Chain.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "Address you want to scan!",
            "default": "0x0000000000000000000000000000000000000123"
          }
        ],
        "optional_parameters": [
          {
            "name": "network",
            "type": "STRING",
            "description": "Specify wich network you wanna use! (mainnet/testnet)",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Block",
        "api_description": "Get full data from a specific block on the Binance Smart Chain!",
        "required_parameters": [
          {
            "name": "block",
            "type": "STRING",
            "description": "Block you want to scan!",
            "default": "123"
          }
        ],
        "optional_parameters": [
          {
            "name": "network",
            "type": "STRING",
            "description": "Specify wich network you wanna use! (mainnet/testnet)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "_type": "str",
          "baseFeePerGas": "NoneType",
          "difficulty": "str",
          "extraData": "str",
          "gasLimit": "str",
          "gasUsed": "str",
          "hash": "str",
          "miner": "str",
          "nonce": "str",
          "number": "int",
          "parentHash": "str",
          "timestamp": "int",
          "transactions": "empty list"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Transaction",
        "api_description": "Get full data from a specific transaction on the Binance Smart Chain!",
        "required_parameters": [
          {
            "name": "hash",
            "type": "STRING",
            "description": "Transaction you want to scan!",
            "default": "0x675e20f06597d976c23cef8fd6ff8f9c56b75af711a22d8c2d936b49cc3ac2d9"
          }
        ],
        "optional_parameters": [
          {
            "name": "network",
            "type": "STRING",
            "description": "Specify wich network you wanna use! (mainnet/testnet)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "_type": "str",
          "accessList": "NoneType",
          "blockNumber": "int",
          "blockHash": "str",
          "chainId": "str",
          "data": "str",
          "from": "str",
          "gasLimit": "str",
          "gasPrice": "str",
          "hash": "str",
          "maxFeePerGas": "NoneType",
          "maxPriorityFeePerGas": "NoneType",
          "nonce": "int",
          "signature": {
            "_type": "str",
            "networkV": "str",
            "r": "str",
            "s": "str",
            "v": "int"
          },
          "to": "str",
          "type": "int",
          "value": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Account Transaction History",
        "api_description": "Get an array of all transactions of an address on the Binance Smart Chain.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "Address you want to scan!",
            "default": "0x0000000000000000000000000000000000000123"
          }
        ],
        "optional_parameters": [
          {
            "name": "network",
            "type": "STRING",
            "description": "Specify wich network you wanna use! (mainnet/testnet)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "message": "str",
          "result": [
            {
              "blockNumber": "str",
              "timeStamp": "str",
              "hash": "str",
              "nonce": "str",
              "blockHash": "str",
              "transactionIndex": "str",
              "from": "str",
              "to": "str",
              "value": "str",
              "gas": "str",
              "gasPrice": "str",
              "isError": "str",
              "txreceipt_status": "str",
              "input": "str",
              "contractAddress": "str",
              "cumulativeGasUsed": "str",
              "gasUsed": "str",
              "confirmations": "str",
              "methodId": "str",
              "functionName": "str",
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Account Transaction Count",
        "api_description": "Get the number of transactions done by an address on the Binance Smart Chain.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "Address you want to scan!",
            "default": "0x0000000000000000000000000000000000000123"
          }
        ],
        "optional_parameters": [
          {
            "name": "network",
            "type": "STRING",
            "description": "Specify wich network you wanna use! (mainnet/testnet)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "Hey there! I'm curious about a specific transaction on the Binance Smart Chain. Can you provide me with the full data for the transaction with the hash 0x675e20f06597d976c23cef8fd6ff8f9c56b75af711a22d8c2d936b49cc3ac2d9? Additionally, I would like to know the number of transactions done by the address 0x0000000000000000000000000000000000000123 on the testnet. Thank you!",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Transaction"
      },
      {
        "category_name": "Finance",
        "tool_name": "Binance Smart Chain",
        "api_name": "Account Transaction Count"
      }
    ],
    "query_id": 11686
  },
  {
    "api_list": [
      {
        "category_name": "Communication",
        "tool_name": "Veriphone",
        "api_name": "verify",
        "api_description": "Global phone number verification",
        "required_parameters": [
          {
            "name": "phone",
            "type": "STRING",
            "description": "The phone number to verify",
            "default": "+4915123577723"
          }
        ],
        "optional_parameters": [
          {
            "name": "default_country",
            "type": "STRING",
            "description": "The default country in a 2 letters ISO format. Example: US, RU.  Optional: the country will be infered from the prefix, from this parameter or from the IP address (in that order).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "phone": "str",
          "phone_valid": "bool",
          "phone_type": "str",
          "phone_region": "str",
          "country": "str",
          "country_code": "str",
          "country_prefix": "str",
          "international_number": "str",
          "local_number": "str",
          "e164": "str",
          "carrier": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "Veriphone",
        "api_name": "example",
        "api_description": "Get an example phone number for any country",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "country_code",
            "type": "STRING",
            "description": "The example number's country in a 2 letters ISO format. Example: US, RU.  Optional: the country will be infered from the IP address if this parameter is absent or invalid.",
            "default": "GB"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "The type of example number to return. Values: fixed_line, mobile , premium_rate, shared_cost, toll_free, voip",
            "default": "mobile"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "phone_type": "str",
          "country_code": "str",
          "country_prefix": "str",
          "international_number": "str",
          "local_number": "str",
          "e164": "str"
        }
      }
    ],
    "query": "I want to check if the phone number +4915123577723 is valid and get the phone type, region, and carrier details. It would also be helpful to provide an example phone number for a VoIP type in the United Kingdom.",
    "relevant APIs": [
      {
        "category_name": "Communication",
        "tool_name": "Veriphone",
        "api_name": "verify"
      },
      {
        "category_name": "Communication",
        "tool_name": "Veriphone",
        "api_name": "example"
      }
    ],
    "query_id": 16970
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Zestimate history",
        "api_description": "Zestimate history by zpid",
        "required_parameters": [
          {
            "name": "zpid",
            "type": "STRING",
            "description": "",
            "default": "20476226"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Photos",
        "api_description": "Returns a property's photos with different sizes and types.",
        "required_parameters": [
          {
            "name": "zpid",
            "type": "STRING",
            "description": "",
            "default": "2110846380"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Property details",
        "api_description": "Get a property's details by its zpid",
        "required_parameters": [
          {
            "name": "zpid",
            "type": "STRING",
            "description": "",
            "default": "7594920"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Walk, Transit and Bike Score",
        "api_description": "Get Walk, Transit and Bike Score of a property by zpid",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "zpid",
            "type": "NUMBER",
            "description": "",
            "default": "20485700"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Rent Zestimate and Comparable properties",
        "api_description": "Returns a property's rent zestimate and it's comparable properties in the same area.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "1545 Yale St, Santa Monica, CA 90404"
          }
        ],
        "optional_parameters": [
          {
            "name": "bedrooms",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS] \nFilter for number of bedrooms: (To choose multiple values separate with comma eg : 0,1,2)\nPossible values:\n**0\n1\n2\n3\n4plus**\n",
            "default": ""
          },
          {
            "name": "pets",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS] \nFilter for Pets: (To choose multiple values separate with comma eg : dogs,cats)\nPossible values:\n**any (Default)\ndogs\ncats**\n",
            "default": ""
          },
          {
            "name": "amenities",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS] \nFilter for amenities: (To choose multiple values separate with comma eg : cooling,parking)\nPossible values:\n**any (Default)\ncooling\nheating\nparking**\n",
            "default": ""
          },
          {
            "name": "laundry",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS] \nFilter for Laundry: (To choose multiple values separate with comma eg : inUnit,shared)\nPossible values:\n**any (Default)\ninUnit\nshared**\n",
            "default": ""
          },
          {
            "name": "propertyTypes",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS] \nFilter for Property Types: (To choose multiple values separate with comma eg : house,condo)\nPossible values:\n**any (Default)\napartment\nhouse\ntownhouse\ncondo**\n",
            "default": ""
          },
          {
            "name": "activeTypes",
            "type": "STRING",
            "description": "SimilarFloorPlans filter:\nPossible values:\nany (Default)\nactive (Active Rentals)\ninactive (Inactive Rentals)\n",
            "default": ""
          },
          {
            "name": "deactivatedDays",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS]\nFilter for inactive rentals within X days:\nPossible values:\n30 (Within 30 days (max))\n15 (Within 15 days)\n7 (Within 7 days)\n",
            "default": ""
          },
          {
            "name": "activatedDays",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS]\nFilter for Active Rentals within X days:\nPossible values:\nany (Default)\n30 (Within 30 days)\n15 (Within 15 days)\n7 (Within 7 days)\n",
            "default": ""
          },
          {
            "name": "distanceInMiles",
            "type": "STRING",
            "description": "[SIMILARFLOORPLANS] \nFilter for distance in Miles: \nPossible values:\n**any\n1\n2\n3\n4\n5**\n",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Agent's active listings",
        "api_description": "Get agent's active listings by zuid",
        "required_parameters": [
          {
            "name": "zuid",
            "type": "STRING",
            "description": "",
            "default": "X1-ZUz0nmomozy2o9_9bpwk"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Agent Reviews",
        "api_description": "Get agent reviews by the agent's zuid",
        "required_parameters": [
          {
            "name": "zuid",
            "type": "STRING",
            "description": "",
            "default": "X1-ZUz0nmomozy2o9_9bpwk"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Agent's rental listings",
        "api_description": "Get agent's rental listings by zuid",
        "required_parameters": [
          {
            "name": "zuid",
            "type": "STRING",
            "description": "",
            "default": "X1-ZUz0nmomozy2o9_9bpwk"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Agent details by username",
        "api_description": "Get agent's details by username(contact infos, active listings and reviews etc).\nPS : username is the profile link \nExample : \nusername :  Pardee-Properties\nfor https://www.zillow.com/profile/Pardee-Properties/",
        "required_parameters": [
          {
            "name": "username",
            "type": "STRING",
            "description": "",
            "default": "Pardee-Properties"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Search for agents",
        "api_description": "Search for agents by location and name",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "houston, tx"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "specialties",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "name",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I'm organizing a company event in Santa Monica, CA and I need to find rental properties for our employees. Can you assist me in finding rental properties with good walk, transit, and bike scores in the area? It would be helpful if you could provide the rent zestimate and comparable properties as well.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Rent Zestimate and Comparable properties"
      },
      {
        "category_name": "Data",
        "tool_name": "Zillow_v2",
        "api_name": "Walk, Transit and Bike Score"
      }
    ],
    "query_id": 17204
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Realtor API for Real Estate Data",
        "api_name": "RealtorSchoolList",
        "api_description": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`",
        "required_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "San Jose"
          },
          {
            "name": "school_level",
            "type": "STRING",
            "description": "",
            "default": "elementary"
          },
          {
            "name": "state_code",
            "type": "STRING",
            "description": "",
            "default": "CA"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "coordinates": {
            "lat": "float",
            "lon": "float"
          },
          "funding_type": "str",
          "grades": [
            "list of str with length 6"
          ],
          "id": "str",
          "location": {
            "city": "str",
            "city_slug_id": "str",
            "state": "str"
          },
          "name": "str",
          "parent_rating": "int",
          "rating": "int",
          "review_count": "int",
          "school url": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor API for Real Estate Data",
        "api_name": "RealtorAgentList",
        "api_description": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`",
        "required_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "state_code",
            "type": "STRING",
            "description": "",
            "default": "CA"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "San Jose"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Error": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor API for Real Estate Data",
        "api_name": "RealtorPropertyList",
        "api_description": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`",
        "required_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": "0"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "San Jose"
          },
          {
            "name": "state_code",
            "type": "STRING",
            "description": "",
            "default": "CA"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"agent\": [{\"office_name\": \"NoneType\", \"_list_length\": 1}], \"branding\": [{\"name\": \"str\", \"photo\": \"NoneType\", \"type\": \"str\", \"_list_length\": 1}], \"last_update_date\": \"str\", \"list_date\": \"str\", \"list_price\": \"int\", \"listing_id\": \"str\", \"location\": {\"address\": {\"city\": \"str\", \"coordinate\": {\"lat\": \"float\", \"lon\": \"float\"}, \"line\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"county\": {\"fips_code\": \"str\", \"name\": \"str\"}, \"street_view_url\": \"str\"}, \"open_house_description\": \"str\", \"other_listings\": {\"rdc\": [{\"listing_id\": \"str\", \"listing_key\": \"NoneType\", \"primary\": \"bool\", \"status\": \"str\", \"_list_length\": 1}]}, \"permalink\": \"str\", \"photos\": [{\"href\": \"str\", \"_list_length\": 2}], \"price_reduced_amount\": \"NoneType\", \"primary_photo\": \"str\", \"property_description\": {\"baths\": \"int\", \"baths_1qtr\": \"NoneType\", \"baths_3qtr\": \"NoneType\", \"baths_full\": \"int\", \"baths_half\": \"int\", \"beds\": \"int\", \"garage\": \"int\", \"lot_sqft\": \"int\", \"name\": \"NoneType\", \"sold_date\": \"str\", \"sold_p"
      }
    ],
    "query": "I would like to know the available properties for sale in Pleasanton, CA. Can you provide me with the Realtor Property List for the city? Moreover, I am interested in finding a reliable real estate agent in Pleasanton, CA. Please fetch the Realtor Agent List for the city.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Realtor API for Real Estate Data",
        "api_name": "RealtorPropertyList"
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor API for Real Estate Data",
        "api_name": "RealtorAgentList"
      }
    ],
    "query_id": 17223
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Directions Between 2 Locations",
        "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a location in Nansana to Kampala**",
        "required_parameters": [
          {
            "name": "end_lat",
            "type": "NUMBER",
            "description": "Latitude of the ending point (required)",
            "default": "0.32493795000000003"
          },
          {
            "name": "start_lat",
            "type": "NUMBER",
            "description": "Latitude of the starting point (required)",
            "default": "0.365816"
          },
          {
            "name": "end_lon",
            "type": "NUMBER",
            "description": "Longitude of the ending point (required)",
            "default": "32.57523607707668"
          },
          {
            "name": "start_lon",
            "type": "NUMBER",
            "description": "Longitude of the starting point (required)",
            "default": "32.529226"
          }
        ],
        "optional_parameters": [
          {
            "name": "distance_unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "steps": [
            {
              "direction": "str",
              "distance": "str",
              "duration": "str",
              "instruction": "str",
              "location": [
                "list of float with length 2"
              ],
              "_list_length": 18
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Reverse Geocode",
        "api_description": "This endpoint allows you to perform reverse geocoding in Uganda by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
        "required_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "The longitude of the location.",
            "default": "32.57523607707668"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "The latitude of the location.",
            "default": "0.32493795000000003"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "amenity": "str",
          "boundingbox": [
            "list of str with length 4"
          ],
          "category": "str",
          "city": "str",
          "country": "str",
          "display_name": "str",
          "region": "str",
          "suburb": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Facilities Lookup",
        "api_description": "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "The region where the facility is located",
            "default": "Central"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
            "default": "hospital"
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "STRING",
            "description": "The number of facilities to query.",
            "default": "10"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "The city where the facility is located",
            "default": "Kampala"
          }
        ],
        "method": "GET",
        "template_response": {
          "hospital": [
            {
              "ISO3166-2-lvl4": "str",
              "address": "str",
              "amenity": "str",
              "country_code": "str",
              "county": "str",
              "display_name": "str",
              "latitude": "str",
              "longitude": "str",
              "postcode": "str",
              "region": "str",
              "road": "str",
              "suburb": "str",
              "village": "str",
              "website": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Geocode",
        "api_description": "This endpoint allows you to lookup locations in Uganda by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "Name of address",
            "default": "Nansana"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "display_name": "str",
          "latitude": "str",
          "longitude": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Measure Distance",
        "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Nansana to Kampala**",
        "required_parameters": [
          {
            "name": "lat1",
            "type": "NUMBER",
            "description": "Latitude of the first location (required)",
            "default": "0.365816"
          },
          {
            "name": "lat2",
            "type": "NUMBER",
            "description": "Latitude of the second location (required)",
            "default": "0.32493795000000003"
          },
          {
            "name": "lon2",
            "type": "NUMBER",
            "description": "Longitude of the second location (required)",
            "default": "32.57523607707668"
          },
          {
            "name": "lon1",
            "type": "NUMBER",
            "description": "Longitude of the first location (required)",
            "default": "32.529226"
          }
        ],
        "optional_parameters": [
          {
            "name": "unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "unit": "str"
        }
      }
    ],
    "query": "I'm a researcher studying the wildlife in Uganda and I need to find a research center in Kampala. Can you provide me with a list of research centers in Kampala? I would also like to know the distance and directions from my accommodation in Nansana to the research center.",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Facilities Lookup"
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Directions Between 2 Locations"
      }
    ],
    "query_id": 22781
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "Realtor Data API for Real Estate",
        "api_name": "RealtorPropertyList",
        "api_description": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`",
        "required_parameters": [
          {
            "name": "state_code",
            "type": "STRING",
            "description": "",
            "default": "CA"
          },
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": "0"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "San Jose"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"agent\": [{\"office_name\": \"NoneType\", \"_list_length\": 1}], \"branding\": [{\"name\": \"str\", \"photo\": \"NoneType\", \"type\": \"str\", \"_list_length\": 1}], \"last_update_date\": \"str\", \"list_date\": \"str\", \"list_price\": \"int\", \"listing_id\": \"str\", \"location\": {\"address\": {\"city\": \"str\", \"coordinate\": {\"lat\": \"float\", \"lon\": \"float\"}, \"line\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"county\": {\"fips_code\": \"str\", \"name\": \"str\"}, \"street_view_url\": \"str\"}, \"open_house_description\": \"str\", \"other_listings\": {\"rdc\": [{\"listing_id\": \"str\", \"listing_key\": \"NoneType\", \"primary\": \"bool\", \"status\": \"str\", \"_list_length\": 1}]}, \"permalink\": \"str\", \"photos\": [{\"href\": \"str\", \"_list_length\": 2}], \"price_reduced_amount\": \"NoneType\", \"primary_photo\": \"str\", \"property_description\": {\"baths\": \"int\", \"baths_1qtr\": \"NoneType\", \"baths_3qtr\": \"NoneType\", \"baths_full\": \"int\", \"baths_half\": \"int\", \"beds\": \"int\", \"garage\": \"int\", \"lot_sqft\": \"int\", \"name\": \"NoneType\", \"sold_date\": \"str\", \"sold_p"
      },
      {
        "category_name": "Business",
        "tool_name": "Realtor Data API for Real Estate",
        "api_name": "RealtorSchoolList",
        "api_description": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`",
        "required_parameters": [
          {
            "name": "school_level",
            "type": "STRING",
            "description": "",
            "default": "elementary"
          },
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "San Jose"
          },
          {
            "name": "state_code",
            "type": "STRING",
            "description": "",
            "default": "CA"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "Realtor Data API for Real Estate",
        "api_name": "RealtorAgentList",
        "api_description": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`",
        "required_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "state_code",
            "type": "STRING",
            "description": "",
            "default": "CA"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "San Jose"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm a real estate developer looking for investment opportunities in San Jose, California. Can you provide me with a list of properties for sale, including the listing ID, list price, address, and photos? Additionally, I would like to know the agent details and branding associated with each property.",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "Realtor Data API for Real Estate",
        "api_name": "RealtorPropertyList"
      },
      {
        "category_name": "Business",
        "tool_name": "Realtor Data API for Real Estate",
        "api_name": "RealtorAgentList"
      }
    ],
    "query_id": 25052
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Generate LinkedIn Leads",
        "api_name": "Get Available Job Titles",
        "api_description": "Get Available Job Titles which could be used in /leads/leads/ endpoint",
        "required_parameters": [
          {
            "name": "name",
            "type": "STRING",
            "description": "",
            "default": "fou"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "value": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Generate LinkedIn Leads",
        "api_name": "Get Available Locations",
        "api_description": "Get Available Locations which could be used in /leads/leads/ endpoint",
        "required_parameters": [
          {
            "name": "name",
            "type": "STRING",
            "description": "",
            "default": "United"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "value": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Generate LinkedIn Leads",
        "api_name": "Get Available Companies",
        "api_description": "Get Available Companies which could be used in /leads/leads/ endpoint",
        "required_parameters": [
          {
            "name": "name",
            "type": "STRING",
            "description": "",
            "default": "app"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "value": "str"
        }
      }
    ],
    "query": "I am an HR manager looking to expand my talent pool. Can you retrieve the available job titles for 'human resources' and the available locations in 'Chicago'? Additionally, fetch a list of companies related to 'manufacturing'.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Generate LinkedIn Leads",
        "api_name": "Get Available Job Titles"
      },
      {
        "category_name": "Data",
        "tool_name": "Generate LinkedIn Leads",
        "api_name": "Get Available Locations"
      },
      {
        "category_name": "Data",
        "tool_name": "Generate LinkedIn Leads",
        "api_name": "Get Available Companies"
      }
    ],
    "query_id": 26063
  },
  {
    "api_list": [
      {
        "category_name": "eCommerce",
        "tool_name": "Get Promo Codes",
        "api_name": "Get Stores",
        "api_description": "Get Stores",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Get Promo Codes",
        "api_name": "Get Coupons",
        "api_description": "Get Coupons",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "sort",
            "type": "STRING",
            "description": "",
            "default": "update_time_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "store_id",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "request": {
            "page": "str",
            "store_id": "str",
            "sort": "str",
            "type": "str"
          },
          "time": "float",
          "data": [
            {
              "id": "str",
              "title": "str",
              "description": "str",
              "terms": "str",
              "code": "str",
              "url": "str",
              "store_id": "str",
              "language": "str",
              "status": "str",
              "add_time": "str",
              "start_time": "str",
              "end_time": "str",
              "update_time": "str",
              "_list_length": 98
            }
          ]
        }
      }
    ],
    "query": "My friend loves shopping online. Could you help me find promo codes for her favorite stores? She frequently shops at Sephora, Nike, and Target. It would be great if you could also provide the description and terms of the coupons.",
    "relevant APIs": [
      {
        "category_name": "eCommerce",
        "tool_name": "Get Promo Codes",
        "api_name": "Get Coupons"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Get Promo Codes",
        "api_name": "Get Stores"
      }
    ],
    "query_id": 27079
  },
  {
    "api_list": [
      {
        "category_name": "Database",
        "tool_name": "Felina Multisig Wallet API",
        "api_name": "Get NFTs",
        "api_description": "Fetch the list of owned NFTs by the wallet",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str",
          "info": "str"
        }
      },
      {
        "category_name": "Database",
        "tool_name": "Felina Multisig Wallet API",
        "api_name": "Read transactions",
        "api_description": "Fetch the list of transactions submitted to the database.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My friend wants to retrieve the list of NFTs owned by their wallet. Can you fetch the NFTs owned by wallet number 901234? Additionally, they want to review the transactions submitted to the database. Please provide them with the list of transactions.",
    "relevant APIs": [
      {
        "category_name": "Database",
        "tool_name": "Felina Multisig Wallet API",
        "api_name": "Get NFTs"
      },
      {
        "category_name": "Database",
        "tool_name": "Felina Multisig Wallet API",
        "api_name": "Read transactions"
      }
    ],
    "query_id": 29291
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "Egypt API",
        "api_name": "Directions Between 2 Locations",
        "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Alexandria to Cairo**",
        "required_parameters": [
          {
            "name": "start_lat",
            "type": "NUMBER",
            "description": "Latitude of the starting point (required)",
            "default": "31.1991806"
          },
          {
            "name": "end_lon",
            "type": "NUMBER",
            "description": "Longitude of the ending point (required)",
            "default": "31.23788289124186"
          },
          {
            "name": "start_lon",
            "type": "NUMBER",
            "description": "Longitude of the starting point (required)",
            "default": "29.8951716"
          },
          {
            "name": "end_lat",
            "type": "NUMBER",
            "description": "Latitude of the ending point (required)",
            "default": "30.02313795"
          }
        ],
        "optional_parameters": [
          {
            "name": "distance_unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "steps": [
            {
              "direction": "str",
              "distance": "str",
              "duration": "str",
              "instruction": "str",
              "location": [
                "list of float with length 2"
              ],
              "_list_length": 30
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Egypt API",
        "api_name": "Reverse Geocode",
        "api_description": "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
        "required_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "The longitude of the location.",
            "default": "31.230981"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "The latitude of the location.",
            "default": "30.0240626"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "amenity": "str",
          "boundingbox": [
            "list of str with length 4"
          ],
          "category": "str",
          "city": "str",
          "country": "str",
          "display_name": "str",
          "governorate": "str",
          "suburb": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Egypt API",
        "api_name": "Measure Distance",
        "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Alexandria and Cairo**",
        "required_parameters": [
          {
            "name": "lon2",
            "type": "NUMBER",
            "description": "Longitude of the second location (required)",
            "default": "31.23788289124186"
          },
          {
            "name": "lat1",
            "type": "NUMBER",
            "description": "Latitude of the first location (required)",
            "default": "31.1991806"
          },
          {
            "name": "lon1",
            "type": "NUMBER",
            "description": "Longitude of the first location (required)",
            "default": "29.8951716"
          },
          {
            "name": "lat2",
            "type": "NUMBER",
            "description": "Latitude of the second location (required)",
            "default": "30.02313795"
          }
        ],
        "optional_parameters": [
          {
            "name": "unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "unit": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Egypt API",
        "api_name": "Facilities Lookup",
        "api_description": "This endpoint allows you to get facilities in Egypt like hospital, bank, college, etc. by providing optional query parameters for facility type, gov (governorate)  and city. It returns a list of facilities that match the query parameters.",
        "required_parameters": [
          {
            "name": "gov",
            "type": "STRING",
            "description": "The governorate where the facility is located",
            "default": "Cairo"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
            "default": "hospital"
          }
        ],
        "optional_parameters": [
          {
            "name": "city",
            "type": "STRING",
            "description": "The city where the facility is located",
            "default": "Cairo"
          },
          {
            "name": "limit",
            "type": "STRING",
            "description": "The number of facilities to query.",
            "default": "10"
          }
        ],
        "method": "GET",
        "template_response": {
          "hospital": [
            {
              "ISO3166-2-lvl4": "str",
              "address": "str",
              "amenity": "str",
              "country_code": "str",
              "county": "str",
              "display_name": "str",
              "governorate": "str",
              "latitude": "str",
              "longitude": "str",
              "postcode": "str",
              "road": "str",
              "suburb": "str",
              "village": "str",
              "website": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Egypt API",
        "api_name": "Geocode",
        "api_description": "This endpoint allows you to lookup locations in Egypt by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "The name of the location to look up.",
            "default": "Giza"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "display_name": "str",
          "latitude": "str",
          "longitude": "str"
        }
      }
    ],
    "query": "Can you help me find a college in Cairo? I am looking for the address, latitude, and longitude of the college. Please limit the results to 5.",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "Egypt API",
        "api_name": "Facilities Lookup"
      },
      {
        "category_name": "Location",
        "tool_name": "Egypt API",
        "api_name": "Geocode"
      }
    ],
    "query_id": 31117
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Search by URL",
        "api_description": "Search by URL",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "https://www.redfin.com/zipcode/01026/filter/property-type=house,min-price=175k,max-price=4.5M,min-beds=1,max-beds=4"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"data\": {\"version\": \"float\", \"errorMessage\": \"str\", \"resultCode\": \"float\", \"payload\": {\"homes\": [{\"mlsId\": {\"label\": \"str\", \"value\": \"str\"}, \"showMlsId\": \"bool\", \"mlsStatus\": \"str\", \"showDatasourceLogo\": \"bool\", \"price\": {\"value\": \"float\", \"level\": \"float\"}, \"hideSalePrice\": \"bool\", \"hoa\": {\"level\": \"float\"}, \"isHoaFrequencyKnown\": \"bool\", \"sqFt\": {\"value\": \"float\", \"level\": \"float\"}, \"pricePerSqFt\": {\"value\": \"float\", \"level\": \"float\"}, \"lotSize\": {\"value\": \"float\", \"level\": \"float\"}, \"beds\": \"float\", \"baths\": \"float\", \"fullBaths\": \"float\", \"partialBaths\": \"float\", \"location\": {\"value\": \"str\", \"level\": \"float\"}, \"latLong\": {\"value\": {\"latitude\": \"float\", \"longitude\": \"float\"}, \"level\": \"float\"}, \"streetLine\": {\"value\": \"str\", \"level\": \"float\"}, \"unitNumber\": {\"level\": \"float\"}, \"city\": \"str\", \"state\": \"str\", \"zip\": \"str\", \"postalCode\": {\"value\": \"str\", \"level\": \"float\"}, \"countryCode\": \"str\", \"showAddressOnMap\": \"bool\", \"soldDate\": \"float\", \"searchStatus\": \"float\", \"propertyType\": \"f"
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Get location infomation by zipcode",
        "api_description": "Get location infomation by zipcode",
        "required_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "",
            "default": "01003"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "zipCode": "str",
              "regionId": "NoneType",
              "city": "str",
              "county": "str",
              "state": "str",
              "usps": "str",
              "stateCapital": "str",
              "countryName": "str",
              "countryCode": "str",
              "lat": "NoneType",
              "lng": "NoneType",
              "northLat": "NoneType",
              "southLat": "NoneType",
              "westLng": "NoneType",
              "eastLng": "NoneType",
              "fieldType": "NoneType",
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Get zipcode by county",
        "api_description": "Get zipcode by county",
        "required_parameters": [
          {
            "name": "county",
            "type": "STRING",
            "description": "",
            "default": "Hampshire"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "zipCode": "str",
              "regionId": "NoneType",
              "city": "str",
              "county": "str",
              "state": "str",
              "usps": "str",
              "stateCapital": "str",
              "countryName": "str",
              "countryCode": "str",
              "lat": "NoneType",
              "lng": "NoneType",
              "northLat": "NoneType",
              "southLat": "NoneType",
              "westLng": "NoneType",
              "eastLng": "NoneType",
              "fieldType": "NoneType",
              "_list_length": 45
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Get ZipCode by City",
        "api_description": "Get ZipCode by City",
        "required_parameters": [
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "Holtsville"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "zipCode": "str",
              "regionId": "NoneType",
              "city": "str",
              "county": "str",
              "state": "str",
              "usps": "str",
              "stateCapital": "str",
              "countryName": "str",
              "countryCode": "str",
              "lat": "NoneType",
              "lng": "NoneType",
              "northLat": "NoneType",
              "southLat": "NoneType",
              "westLng": "NoneType",
              "eastLng": "NoneType",
              "fieldType": "NoneType",
              "_list_length": 3
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Search by Sub URL",
        "api_description": "Search by Sub URL",
        "required_parameters": [
          {
            "name": "sub_url",
            "type": "STRING",
            "description": "The input value can be full URL or sub URL\n- **Full URL**: `https://www.redfin.com/zipcode/01026`\n- **Sub URL**: `/zipcode/01026` (use the Auto-complete API to get the value, it is a property URL)",
            "default": "/zipcode/01026"
          }
        ],
        "optional_parameters": [
          {
            "name": "excl_ll",
            "type": "BOOLEAN",
            "description": "Exclude land leases",
            "default": ""
          },
          {
            "name": "price_reduced",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "financing_type",
            "type": "ENUM",
            "description": "Accepted financing",
            "default": ""
          },
          {
            "name": "property_tax",
            "type": "NUMBER",
            "description": "COMMENT:\nSuggested Values:\n`0`: No property taxes ❚`250`: $250/year\n`500`: $500/year❚`750`: $750/year\n`1000`: $1,000/year❚`1250`: $1,250/year\n`1500`: $1,500/year❚`1750`: $1,750/year\n`2000`: $2,000/year❚`2500`: $2,500/year\n`3000`: $3,000/year❚`3500`: $3,500/year\n`4000`: $4,000/year❚`4500`: $4,500/year\n`5000`: $5,000/year❚`5500`: $5,500/year\n`6000`: $6,000/year❚`6500`: $6,500/year\n`7000`: $7,000/year❚`8000`: $8,000/year\n`10000`: $10,000/year❚`12000`: $12,000/year\n`14000`: $14,000/year❚`16000`: $16,000/year\n`20000`: $20,000/year❚`24000`: $24,000/year\n",
            "default": ""
          },
          {
            "name": "hoa_feets",
            "type": "NUMBER",
            "description": "Suggested Values:\n`0`: No HOA Fee ❚ `25`: $25/month\n`50`: $50/month ❚ `75`: $75/month\n`100`: $100/month❚  `150`: $150/month\n`200`: $200/month ❚ `250`: $250/month\n `300`: $300/month ❚ `400`: $400/month\n `500`: $500/month ❚ `600`: $600/month\n `700`: $700/month ❚ `800`: $800/month\n `900`: $900/month ❚`1000`: $1000/month\n `1250`: $1250/month ❚ `1500`: $1500/month\n `1750`: $1750/month ❚`2000`: $2000/month\n `2500`: $2500/month ❚ `3000`: $3000/month\n `3500`: $3500/month ❚ `4000`: $4000/month\n `4500`: $4500/month ❚ `5000`: $5000/month",
            "default": ""
          },
          {
            "name": "green_home",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "elevator",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "pets_allowed",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "washer_dryer_hookup",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "fireplace",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "pool_types",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "basement_types",
            "type": "STRING",
            "description": "Enter the parameters below:\n  ● Finished\n  ● Unfinished\n※ Separated by a comma for multiple options\nEX: Finished, Unfinished",
            "default": ""
          },
          {
            "name": "min_sqft",
            "type": "NUMBER",
            "description": "Suggested Values: `750`, `1000`, `1100`, `1200`, `1300`, `1400`, `1500`, `1600`, `1700`, `1800`, `1900`, `2000`, `2250`, `2500`, `2750`, `3000`, `4000`, `5000`, `7500`, `10000`",
            "default": ""
          },
          {
            "name": "garage_spots",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "max_stories",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 20",
            "default": ""
          },
          {
            "name": "max_num_beds",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 5",
            "default": ""
          },
          {
            "name": "max_sqft",
            "type": "NUMBER",
            "description": "Suggested Values: `750`, `1000`, `1100`, `1200`, `1300`, `1400`, `1500`, `1600`, `1700`, `1800`, `1900`, `2000`, `2250`, `2500`, `2750`, `3000`, `4000`, `5000`, `7500`, `10000`",
            "default": ""
          },
          {
            "name": "max_lot_size",
            "type": "NUMBER",
            "description": "Suggested Values:\n`2000`＝2,000 sqft❚`4500`＝4,500 sqft\n`6500`＝6,500 sqft❚`8000`＝8,000 sqft\n`9500`＝9,500 sqft❚`10890`＝25 acres\n`21780`＝5 acres❚`43560`＝1 acre\n`87120`＝2 acres❚`130680`＝3 acres\n `174240`＝4 acres❚`217800`＝5 acres\n `435600`＝10 acres❚ `871200`＝20 acres\n`1742400`＝40 acres❚ `4356000`＝100 acres",
            "default": ""
          },
          {
            "name": "home_type",
            "type": "STRING",
            "description": "Enter the parameters below:\nFor `search_type `＝ **ForSale** OR **Sold**\n  ● House\n  ● Townhouse\n  ● Condo\n  ● Land\n  ● MultiFamily\n  ● Mobile\n  ● Coop\n  ● Other\nFor `search_type `＝ **ForRent**\n  ● Apartment\n※ Separated by a comma for multiple options\nEX: House, Townhouse",
            "default": ""
          },
          {
            "name": "search_type",
            "type": "ENUM",
            "description": "Default＝**ForSale**",
            "default": ""
          },
          {
            "name": "sold_within_days",
            "type": "ENUM",
            "description": "Default ＝ Last_3_months\nFor `search_type `＝**Sold**\n",
            "default": ""
          },
          {
            "name": "min_num_beds",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 5",
            "default": ""
          },
          {
            "name": "min_price",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "min_price_per_sqft",
            "type": "NUMBER",
            "description": "Price/Sq. ft.\nSuggested Values:  `50`, `100`, `150`, `200`, `250`, `300`, `400`, `500`, `600`, `800`, `1000`, `1400`, `1800`, `2200`, `2600`, `3000`",
            "default": ""
          },
          {
            "name": "min-lot-size",
            "type": "NUMBER",
            "description": "Suggested Values:\n`2000`＝2,000 sqft❚`4500`＝4,500 sqft\n`6500`＝6,500 sqft❚`8000`＝8,000 sqft\n`9500`＝9,500 sqft❚`10890`＝25 acres\n`21780`＝5 acres❚`43560`＝1 acre\n`87120`＝2 acres❚`130680`＝3 acres\n `174240`＝4 acres❚`217800`＝5 acres\n `435600`＝10 acres❚ `871200`＝20 acres\n`1742400`＝40 acres❚ `4356000`＝100 acres",
            "default": ""
          },
          {
            "name": "num_baths",
            "type": "NUMBER",
            "description": "Suggested Values: `1`, `1.5`, `2`, `2.5`, `3.4`",
            "default": ""
          },
          {
            "name": "time_on_redfin",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "min_stories",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 20",
            "default": ""
          },
          {
            "name": "dogs_allowed",
            "type": "BOOLEAN",
            "description": "For `search_type `＝**ForRent**",
            "default": ""
          },
          {
            "name": "has_view",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "accessible_home",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "max_price_per_sqft",
            "type": "NUMBER",
            "description": "Price/Sq. ft.\nSuggested Values:  `50`, `100`, `150`, `200`, `250`, `300`, `400`, `500`, `600`, `800`, `1000`, `1400`, `1800`, `2200`, `2600`, `3000`",
            "default": ""
          },
          {
            "name": "waterfront",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "include_outdoor_parking",
            "type": "BOOLEAN",
            "description": "【Include outdoor parking】 value is reflected when at 【Garage spots】 is selected",
            "default": ""
          },
          {
            "name": "max_year_built",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "status",
            "type": "STRING",
            "description": "For search_type ＝**ForSale**\n\nEnter the parameters below: \n● active\n● comingsoon\n● undercontract_pending\n※ Separated by a comma for multiple options\nEX: active, comingsoon",
            "default": "active,comingsoon"
          },
          {
            "name": "cats_allowed",
            "type": "BOOLEAN",
            "description": "For `search_type `＝**ForRent**",
            "default": ""
          },
          {
            "name": "guest_house",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "fixer_upper",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "keyword_search",
            "type": "STRING",
            "description": "E.g. office, balcony, modern,place",
            "default": ""
          },
          {
            "name": "primary_bed_on_main",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "air_conditioning",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "has_exclude_55_communities",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "min_year_built",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "max_price",
            "type": "NUMBER",
            "description": "Filter by price",
            "default": ""
          },
          {
            "name": "sort",
            "type": "ENUM",
            "description": "Default ＝ Recommended",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "data": "NoneType",
          "message": "str",
          "status": "bool"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Auto-complete",
        "api_description": "You send a request and receive the following information:\n- `id`: The unique identifier for the city.\n- `type`: The type of the city.\n- `name`: The name of the city.\n- `subName`: The additional description of the city.\n- `url`: The direct URL to access the city's information page on Redfin.com.\n- `active`: The active status of the city.\n- `claimedHome`: The status of claimed home ownership.\n- `invalidMRS`: The invalid MRS (Market Revenue Share) status.\n- `businessMarketIds`: The list of relevant business market IDs.\n- `countryCode`: The country code.\n- `internalSearchVolume`: The internal search volume statistic.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "**Input**: City, Address, School, Agent, ZIP",
            "default": "01026"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "version": "int",
            "errorMessage": "str",
            "resultCode": "int",
            "payload": {
              "sections": [
                {
                  "rows": [
                    {
                      "id": "str",
                      "type": "str",
                      "name": "str",
                      "subName": "str",
                      "url": "str",
                      "active": "bool",
                      "claimedHome": "bool",
                      "invalidMRS": "bool",
                      "businessMarketIds": [
                        "list of int with length 2"
                      ],
                      "countryCode": "str",
                      "internalSearchVolume": "int",
                      "_list_length": 1
                    }
                  ],
                  "name": "str",
                  "_list_length": 3
                }
              ],
              "exactMatch": {
                "id": "str",
                "type": "str",
                "name": "str",
                "subName": "str",
                "url": "str",
                "active": "bool",
                "claimedHome": "bool",
                "invalidMRS": "bool",
                "businessMarketIds": [
                  "list of int with length 2"
                ],
                "countryCode": "str",
                "internalSearchVolume": "int"
              },
              "extraResults": {},
              "responseTime": "int",
              "hasFakeResults": "bool",
              "isGeocoded": "bool",
              "isRedfinServiced": "bool"
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Get region info",
        "api_description": "This API will return `region_type_id`, `region_id`\n➞ Will use for API 【Search by region】",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "The input value can be full URL or sub URL\n- **Full URL**: `https://www.redfin.com/zipcode/01026`\n- **Sub URL**: `/zipcode/01026` (use the Auto-complete API to get the value, it is a property URL)",
            "default": "https://www.redfin.com/zipcode/01026"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "region_type_id": "str",
            "region_id": "str"
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Search by region",
        "api_description": "Search by region",
        "required_parameters": [
          {
            "name": "region_type",
            "type": "NUMBER",
            "description": "One of the following :       \n` -1`: Unknowns |   `1`: Neighborhood\n`2`: Zip Code  |   `4`: State\n`5`: County |   `6`: City\n`7`: School|   `8`: School District\n`9`: Service Region|  `10`: Minor Civil Division\n`11`: Country|  `30`: CA Postal Code\n`31`: CA Province|  `32`:  CA Provincial Division\n`33`: CA Municipality|   `34`: CA Forward Sortation Area\nOr Use API 【**Get region info**】to get   `region_type_id`",
            "default": "2"
          },
          {
            "name": "region_id",
            "type": "NUMBER",
            "description": "Use the【Get region info】API to get the `region_id  ` value.",
            "default": "211"
          }
        ],
        "optional_parameters": [
          {
            "name": "financing_type",
            "type": "ENUM",
            "description": "Accepted financing",
            "default": ""
          },
          {
            "name": "hoa_feets",
            "type": "NUMBER",
            "description": "Suggested Values:\n`0`: No HOA Fee ❚ `25`: $25/month\n`50`: $50/month ❚ `75`: $75/month\n`100`: $100/month❚  `150`: $150/month\n`200`: $200/month ❚ `250`: $250/month\n `300`: $300/month ❚ `400`: $400/month\n `500`: $500/month ❚ `600`: $600/month\n `700`: $700/month ❚ `800`: $800/month\n `900`: $900/month ❚`1000`: $1000/month\n `1250`: $1250/month ❚ `1500`: $1500/month\n `1750`: $1750/month ❚`2000`: $2000/month\n `2500`: $2500/month ❚ `3000`: $3000/month\n `3500`: $3500/month ❚ `4000`: $4000/month\n `4500`: $4500/month ❚ `5000`: $5000/month",
            "default": ""
          },
          {
            "name": "min_price_per_sqft",
            "type": "NUMBER",
            "description": "Price/Sq. ft.\nSuggested Values:  `50`, `100`, `150`, `200`, `250`, `300`, `400`, `500`, `600`, `800`, `1000`, `1400`, `1800`, `2200`, `2600`, `3000`",
            "default": ""
          },
          {
            "name": "property_tax",
            "type": "NUMBER",
            "description": "COMMENT:\nSuggested Values:\n`0`: No property taxes ❚`250`: $250/year\n`500`: $500/year❚`750`: $750/year\n`1000`: $1,000/year❚`1250`: $1,250/year\n`1500`: $1,500/year❚`1750`: $1,750/year\n`2000`: $2,000/year❚`2500`: $2,500/year\n`3000`: $3,000/year❚`3500`: $3,500/year\n`4000`: $4,000/year❚`4500`: $4,500/year\n`5000`: $5,000/year❚`5500`: $5,500/year\n`6000`: $6,000/year❚`6500`: $6,500/year\n`7000`: $7,000/year❚`8000`: $8,000/year\n`10000`: $10,000/year❚`12000`: $12,000/year\n`14000`: $14,000/year❚`16000`: $16,000/year\n`20000`: $20,000/year❚`24000`: $24,000/year\n",
            "default": ""
          },
          {
            "name": "max_price_per_sqft",
            "type": "NUMBER",
            "description": "Price/Sq. ft.\nSuggested Values:  `50`, `100`, `150`, `200`, `250`, `300`, `400`, `500`, `600`, `800`, `1000`, `1400`, `1800`, `2200`, `2600`, `3000`",
            "default": ""
          },
          {
            "name": "has_exclude_55_communities",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "min_sqft",
            "type": "NUMBER",
            "description": "Suggested Values: `750`, `1000`, `1100`, `1200`, `1300`, `1400`, `1500`, `1600`, `1700`, `1800`, `1900`, `2000`, `2250`, `2500`, `2750`, `3000`, `4000`, `5000`, `7500`, `10000`",
            "default": ""
          },
          {
            "name": "price_reduced",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "excl_ll",
            "type": "BOOLEAN",
            "description": "Exclude land leases",
            "default": ""
          },
          {
            "name": "max_year_built",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "elevator",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "max_sqft",
            "type": "NUMBER",
            "description": "Suggested Values: `750`, `1000`, `1100`, `1200`, `1300`, `1400`, `1500`, `1600`, `1700`, `1800`, `1900`, `2000`, `2250`, `2500`, `2750`, `3000`, `4000`, `5000`, `7500`, `10000`",
            "default": ""
          },
          {
            "name": "dogs_allowed",
            "type": "BOOLEAN",
            "description": "For `search_type `＝**ForRent**",
            "default": ""
          },
          {
            "name": "garage_spots",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "min_year_built",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "fireplace",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "home_type",
            "type": "STRING",
            "description": "Enter the parameters below:\nFor `search_type `＝ **ForSale** OR **Sold**\n  ● House\n  ● Townhouse\n  ● Condo\n  ● Land\n  ● MultiFamily\n  ● Mobile\n  ● Coop\n  ● Other\nFor `search_type `＝ **ForRent**\n  ● Apartment\n※ Separated by a comma for multiple options\nEX: House, Townhouse",
            "default": ""
          },
          {
            "name": "primary_bed_on_main",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "accessible_home",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "keyword_search",
            "type": "STRING",
            "description": "E.g. office, balcony, modern,place",
            "default": ""
          },
          {
            "name": "guest_house",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "green_home",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "fixer_upper",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "pets_allowed",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "has_view",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "washer_dryer_hookup",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "waterfront",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "air_conditioning",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "pool_types",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "include_outdoor_parking",
            "type": "BOOLEAN",
            "description": "【Include outdoor parking】 value is reflected when at 【Garage spots】 is selected",
            "default": ""
          },
          {
            "name": "basement_types",
            "type": "STRING",
            "description": "Enter the parameters below:\n  ● Finished\n  ● Unfinished\n※ Separated by a comma for multiple options\nEX: Finished, Unfinished",
            "default": ""
          },
          {
            "name": "max_lot_size",
            "type": "NUMBER",
            "description": "Suggested Values:\n`2000`＝2,000 sqft❚`4500`＝4,500 sqft\n`6500`＝6,500 sqft❚`8000`＝8,000 sqft\n`9500`＝9,500 sqft❚`10890`＝25 acres\n`21780`＝5 acres❚`43560`＝1 acre\n`87120`＝2 acres❚`130680`＝3 acres\n `174240`＝4 acres❚`217800`＝5 acres\n `435600`＝10 acres❚ `871200`＝20 acres\n`1742400`＝40 acres❚ `4356000`＝100 acres",
            "default": ""
          },
          {
            "name": "min_stories",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 20",
            "default": ""
          },
          {
            "name": "max_stories",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 20",
            "default": ""
          },
          {
            "name": "min-lot-size",
            "type": "NUMBER",
            "description": "Suggested Values:\n`2000`＝2,000 sqft❚`4500`＝4,500 sqft\n`6500`＝6,500 sqft❚`8000`＝8,000 sqft\n`9500`＝9,500 sqft❚`10890`＝25 acres\n`21780`＝5 acres❚`43560`＝1 acre\n`87120`＝2 acres❚`130680`＝3 acres\n `174240`＝4 acres❚`217800`＝5 acres\n `435600`＝10 acres❚ `871200`＝20 acres\n`1742400`＝40 acres❚ `4356000`＝100 acres",
            "default": ""
          },
          {
            "name": "time_on_redfin",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "cats_allowed",
            "type": "BOOLEAN",
            "description": "For `search_type `＝**ForRent**",
            "default": ""
          },
          {
            "name": "max_num_beds",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 5",
            "default": ""
          },
          {
            "name": "num_baths",
            "type": "NUMBER",
            "description": "Suggested Values: `1`, `1.5`, `2`, `2.5`, `3.4`",
            "default": ""
          },
          {
            "name": "min_num_beds",
            "type": "NUMBER",
            "description": "Enter a value in the range 1 ～ 5",
            "default": ""
          },
          {
            "name": "min_price",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "max_price",
            "type": "NUMBER",
            "description": "Filter by price",
            "default": ""
          },
          {
            "name": "sort",
            "type": "ENUM",
            "description": "Default ＝ Recommended",
            "default": ""
          },
          {
            "name": "sold_within_days",
            "type": "ENUM",
            "description": "Default ＝ Last_3_months\nFor `search_type `＝**Sold**\n",
            "default": ""
          },
          {
            "name": "status",
            "type": "STRING",
            "description": "For search_type ＝**ForSale**\n\nEnter the parameters below: \n● active\n● comingsoon\n● undercontract_pending\n※ Separated by a comma for multiple options\nEX: active, comingsoon",
            "default": "active,comingsoon"
          },
          {
            "name": "search_type",
            "type": "ENUM",
            "description": "Default＝**ForSale**",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "data": "NoneType",
          "message": "str",
          "status": "bool"
        }
      }
    ],
    "query": "I'm looking to buy a house in the Hampshire county area. Can you provide me with a list of zip codes in the county? Also, I'd like to know the location information for zip code 01003.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Get zipcode by county"
      },
      {
        "category_name": "Data",
        "tool_name": "Redfin Base",
        "api_name": "Get location infomation by zipcode"
      }
    ],
    "query_id": 34266
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Finshorts",
        "api_name": "Historical Prices",
        "api_description": "Finshorts provide companies historical prices in realtime",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "aapl"
          }
        ],
        "optional_parameters": [
          {
            "name": "month",
            "type": "STRING",
            "description": "",
            "default": "6"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "int",
          "data": "str",
          "code": "int",
          "etype": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finshorts",
        "api_name": "Stock Quote",
        "api_description": "Finshorts provide companies stock quote data in realtime",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "aapl"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "int",
          "data": "str",
          "code": "int",
          "etype": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finshorts",
        "api_name": "Cash flow statement",
        "api_description": "Finshorts provide companies cash flow statement in realtime",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "aapl"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "int",
          "data": "str",
          "code": "int",
          "etype": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finshorts",
        "api_name": "Historical Dividends",
        "api_description": "Finshorts provide companies historical dividends data in realtime",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [
          {
            "name": "range_type",
            "type": "STRING",
            "description": "",
            "default": "y"
          },
          {
            "name": "range",
            "type": "STRING",
            "description": "",
            "default": "10"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "int",
          "data": "str",
          "code": "int",
          "etype": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finshorts",
        "api_name": "Company Info",
        "api_description": "Finshorts provide company Info in realtime",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "aapl"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "int",
          "data": "str",
          "code": "int",
          "etype": "str"
        }
      }
    ],
    "query": "I am a financial analyst and I need the historical prices and cash flow statement for Apple Inc. Can you provide me with the historical prices chart for the past 6 months and the cash flow statement for Apple Inc.?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Finshorts",
        "api_name": "Historical Prices"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finshorts",
        "api_name": "Cash flow statement"
      }
    ],
    "query_id": 36717
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "UK Postcode",
        "api_name": "/search",
        "api_description": "Find an street or post code using one of more key words",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "The query string",
            "default": "Downing Street London"
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "The maximum number of results of the query (May be artificially limited)",
            "default": "10"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "results": [
            {
              "postCode": "str",
              "postCodeTrimmed": "str",
              "streetName": "str",
              "longitude": "float",
              "latitude": "float",
              "plusCode": "str",
              "region": "str",
              "locality": "str",
              "area": "str",
              "numUPRNs": "int",
              "_list_length": 5
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "UK Postcode",
        "api_name": "/getpostcode",
        "api_description": "Find an exact match for a given post code.",
        "required_parameters": [
          {
            "name": "postcode",
            "type": "STRING",
            "description": "An exact match for the post code to be queried",
            "default": "SW1A2AA"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "result": {
            "postCode": "str",
            "postCodeTrimmed": "str",
            "streetName": "str",
            "longitude": "float",
            "latitude": "float",
            "plusCode": "str",
            "region": "str",
            "locality": "str",
            "area": "str",
            "numUPRNs": "int"
          }
        }
      }
    ],
    "query": "I'm a real estate agent and I need to find properties for sale in Manchester. Can you help me search for properties using keywords like 'house', 'apartment', and 'garden'? It would be great to see the postcodes, street names, and coordinates of each property.",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "UK Postcode",
        "api_name": "/search"
      },
      {
        "category_name": "Location",
        "tool_name": "UK Postcode",
        "api_name": "/getpostcode"
      }
    ],
    "query_id": 39545
  },
  {
    "api_list": [
      {
        "category_name": "Search",
        "tool_name": "Google Reviews Scraper",
        "api_name": "GetFullReviews",
        "api_description": "this endpoint get all the reviews in one request",
        "required_parameters": [
          {
            "name": "fullsort",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "fullid",
            "type": "STRING",
            "description": "",
            "default": "U2FsdGVkX1%2FXiucfNDlh6l2kpjZmwjB6IPFuI513k5syjaxFndBOqnIhtPOcaGOPCBy9oHxOEdDR665pTS%2Bhcg%3D%3D"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "str"
        }
      },
      {
        "category_name": "Search",
        "tool_name": "Google Reviews Scraper",
        "api_name": "SearchBusiness",
        "api_description": "with this endpoint you can search the business you want to get their reviews and ratings",
        "required_parameters": [
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "ibm morocco"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Search",
        "tool_name": "Google Reviews Scraper",
        "api_name": "GetReviews",
        "api_description": "with this endpoint you can all reviews for any business searched  with pagination",
        "required_parameters": [
          {
            "name": "sort",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "nextpage",
            "type": "STRING",
            "description": "",
            "default": "false"
          },
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "U2FsdGVkX1%2BPHiDLLJLXhJo8XIkNcp0vS1Mlop21Mnw0DnpVhJnqV951fgdWL1GUhqRBB8WwAnZ3RynQ2COplQ%3D%3D"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "averageRating": "str",
          "totalReviews": "str",
          "reviews": [
            {
              "author": "str",
              "rating": "str",
              "comment": "str",
              "date": "str",
              "_list_length": 10
            }
          ],
          "nextPage": "str"
        }
      }
    ],
    "query": "My friend is interested in a particular business and wants to know its reviews and ratings. Can you search for the business 'IBM Morocco' and provide the average rating and total number of reviews? Additionally, fetch the first 10 reviews, including the author, rating, comment, and date.",
    "relevant APIs": [
      {
        "category_name": "Search",
        "tool_name": "Google Reviews Scraper",
        "api_name": "SearchBusiness"
      },
      {
        "category_name": "Search",
        "tool_name": "Google Reviews Scraper",
        "api_name": "GetReviews"
      }
    ],
    "query_id": 40019
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Property Details",
        "api_description": "Get property details by  property ID  or by Address",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "property_id",
            "type": "STRING",
            "description": "",
            "default": "1497548641"
          },
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"home\": {\"advertisers\": [{\"builder\": \"NoneType\", \"office\": {\"phones\": [{\"ext\": \"str\", \"number\": \"str\", \"primary\": \"bool\", \"trackable\": \"NoneType\", \"type\": \"str\", \"_list_length\": 2}]}, \"state_license\": \"str\", \"team\": \"NoneType\", \"team_name\": \"NoneType\", \"type\": \"str\", \"_list_length\": 1}], \"branding\": [{\"accent_color\": \"NoneType\", \"name\": \"str\", \"phone\": \"NoneType\", \"photo\": \"NoneType\", \"slogan\": \"NoneType\", \"type\": \"str\", \"_list_length\": 2}], \"builder\": \"NoneType\", \"coming_soon_date\": \"NoneType\", \"community\": \"NoneType\", \"consumer_advertisers\": [{\"address\": \"NoneType\", \"advertiser_id\": \"str\", \"agent_id\": \"str\", \"broker_id\": \"NoneType\", \"contact_name\": \"NoneType\", \"hours\": \"NoneType\", \"href\": \"str\", \"name\": \"str\", \"phone\": \"NoneType\", \"photo\": {\"description\": \"NoneType\", \"href\": \"NoneType\", \"type\": \"NoneType\"}, \"show_realtor_logo\": \"bool\", \"slogan\": \"NoneType\", \"type\": \"str\", \"_list_length\": 2}], \"description\": {\"baths\": \"int\", \"baths_1qtr\": \"NoneType\", \"baths_3qtr\": \"NoneType\", \"baths_"
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Search for region",
        "api_description": "Get location suggestions by keyword",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_id": "str",
          "_score": "float",
          "area_type": "str",
          "centroid": {
            "lat": "float",
            "lon": "float"
          },
          "city": "str",
          "counties": [
            {
              "fips": "str",
              "name": "str",
              "state_code": "str",
              "_list_length": 1
            }
          ],
          "country": "str",
          "county_needed_for_uniq": "bool",
          "geo_id": "str",
          "slug_id": "str",
          "state_code": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Search agents",
        "api_description": "Search agents by city/zip",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "price",
            "type": "STRING",
            "description": "Price range\nexample for range between 50k to 2m : \n50000_2000000",
            "default": ""
          },
          {
            "name": "agentname",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "lang",
            "type": "STRING",
            "description": "[afrikaans\nalbanian\narabic\narmenian\nasl\nbengali\nbosnian\nbulgarian\nchinese\ncroatian\nczech\nDanish\ndutch\nEstonian\nfarsi\nfilipino\nfinnish\nfrench\ngaelic\ngeorgian\ngerman\ngreek\nhawaiian\nhebrew\nhindi\nhungarian\nindonesian\nitalian\njapanese\nkorean\nlao\nlatvian\nlithuanian\nmalay\nmandarin\nnepali\nnorwegian\npolish\nportuguese\npunjabi\nromanian\nrussian\nserbian\nsindhi\nsinghalese\nslovenian\nspanish\nswahili\nswedish\ntagalog\ntaiwanese\nthai\nturkish\nukrainian\nurdu\nvietnamese\nyugoslavian]",
            "default": ""
          },
          {
            "name": "photo",
            "type": "BOOLEAN",
            "description": "If the agent has a photo or not \n1 if yes\n0 if no",
            "default": "1"
          },
          {
            "name": "rating",
            "type": "NUMBER",
            "description": "Rating (between 1 and 5)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"agents\": [{\"address\": {\"city\": \"str\", \"country\": \"str\", \"line\": \"str\", \"line2\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"advertiser_id\": \"int\", \"agent_rating\": \"int\", \"agent_team_details\": {\"is_team_member\": \"bool\"}, \"agent_type\": [\"list of str with length 2\"], \"areas_of_business\": \"empty list\", \"background_photo\": {\"href\": \"str\"}, \"broker\": {\"accent_color\": \"str\", \"designations\": \"empty list\", \"fulfillment_id\": \"int\", \"name\": \"str\", \"photo\": {\"href\": \"str\"}, \"video\": \"str\"}, \"data_flags\": \"NoneType\", \"description\": \"str\", \"designations\": \"empty list\", \"feed_licenses\": [{\"country\": \"str\", \"license_number\": \"str\", \"state_code\": \"str\", \"_list_length\": 1}], \"first_month\": \"int\", \"first_name\": \"str\", \"first_year\": \"int\", \"for_sale_price\": {\"count\": \"int\", \"last_listing_date\": \"str\", \"max\": \"int\", \"min\": \"int\"}, \"full_name\": \"str\", \"has_photo\": \"bool\", \"href\": \"str\", \"id\": \"str\", \"is_realtor\": \"bool\", \"lang\": {\"srp_content\": {\"Recommendations\": \"str\", \"active_ag"
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Agent details",
        "api_description": "Get agent details by id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "569e892a89a68901006bdb99"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"agentDetails\": {\"address\": {\"city\": \"str\", \"country\": \"str\", \"line\": \"str\", \"line2\": \"str\", \"postal_code\": \"str\", \"state\": \"str\", \"state_code\": \"str\"}, \"advertiser_id\": \"int\", \"agent_rating\": \"int\", \"agent_type\": [\"list of str with length 2\"], \"background_photo\": {\"href\": \"str\"}, \"broker\": {\"accent_color\": \"str\", \"designations\": \"empty list\", \"fulfillment_id\": \"int\", \"name\": \"str\", \"photo\": {\"href\": \"str\"}, \"video\": \"str\"}, \"description\": \"str\", \"designations\": \"empty list\", \"feed_licenses\": [{\"country\": \"str\", \"license_number\": \"str\", \"state_code\": \"str\", \"_list_length\": 1}], \"first_month\": \"int\", \"first_name\": \"str\", \"first_year\": \"int\", \"full_name\": \"str\", \"has_photo\": \"bool\", \"href\": \"str\", \"id\": \"str\", \"is_realtor\": \"bool\", \"languages\": \"empty list\", \"last_name\": \"str\", \"last_updated\": \"str\", \"marketing_area_cities\": [{\"city_state\": \"str\", \"name\": \"str\", \"state_code\": \"str\", \"_list_length\": 3}], \"mls\": [{\"abbreviation\": \"str\", \"license_number\": \"str\", \"member\": {\"id\": \"str\"}, \"p"
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Search properties for sale",
        "api_description": "Search properties for sale by Address, School, City, Zip or Neighborhood. Filter the results using different parameter filters",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "beds-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "baths-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "year_built-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "year_built-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "list_date-min",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          },
          {
            "name": "open_house-max",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "has_tour",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "list_price-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "hoa_fee_optional-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "list_date-max",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          },
          {
            "name": "list_price-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "baths-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "open_house-min",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Property type comma-separated or empty for all types:\nsingle_family\nmulti_family\nland\ntownhomes\nduplex_triplex\nmobile\ncondos\ncondo_townhome_rowhome_coop\ncondo_townhome\nfarm\n",
            "default": "single_family,condos"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Sort properties by :\nNewest_Listing \nHighest_Price \nLowest_Price\nOpen_House_Date\nRecently-Reduced\nLargest_Sqft\nLot_Size",
            "default": ""
          },
          {
            "name": "beds-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "lot_sqft-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "lot_sqft-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "hoa_fee_optional-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "sqft-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "sqft-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Search properties for rent",
        "api_description": "Search properties for rent by location",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "move_in_date-max",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          },
          {
            "name": "sqft-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Property type comma-separated or empty for all types:\nsingle_family\napartment\ntownhomes\ncondo_townhome_rowhome_coop\nduplex_triplex\ncondos\ncondo_townhome_rowhome_coop\ncondo_townhome\n",
            "default": ""
          },
          {
            "name": "sqft-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "list_price-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "beds-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Sort properties by :\nRecently_Added\nHighest_Price \nLowest_Price",
            "default": ""
          },
          {
            "name": "threeDTours",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "baths-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "list_price-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "beds-max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "baths-min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "noFees",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "dogs",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "move_in_date-min",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          },
          {
            "name": "cats",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      }
    ],
    "query": "I'm planning a family vacation to Santa Monica and I need some assistance. Can you help me find available rental properties in this area? I would like to know the address, monthly rent, number of bedrooms and bathrooms, and any additional details for each property. Also, please provide me with the contact information of agents who specialize in rental properties in Santa Monica.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Search properties for rent"
      },
      {
        "category_name": "Data",
        "tool_name": "Realtor",
        "api_name": "Search agents"
      }
    ],
    "query_id": 42638
  },
  {
    "api_list": [
      {
        "category_name": "eCommerce",
        "tool_name": "AG Amazon Data Web Scraper",
        "api_name": "Get Amazon Search Results",
        "api_description": "It Will Give The Product Details You Want Just By Searching The Product Name.",
        "required_parameters": [
          {
            "name": "searchQuery",
            "type": "string",
            "description": "",
            "default": "Macbook Air"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "AG Amazon Data Web Scraper",
        "api_name": "Get Amazon Product Reviews",
        "api_description": "It Helps You To Get Reviews Of Any Product By Entering Its Product Id.",
        "required_parameters": [
          {
            "name": "productId",
            "type": "string",
            "description": "",
            "default": "B08N5W4NNB"
          },
          {
            "name": "api_key",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I need information on the latest Macbook Air for my family member. Can you fetch the search results for this product, including the product details, prices, ratings, and availability? I would also like to access the product reviews for the product with the ID B08N5W4NNB. Please include the average rating, total ratings, and top positive and critical reviews.",
    "relevant APIs": [
      {
        "category_name": "eCommerce",
        "tool_name": "AG Amazon Data Web Scraper",
        "api_name": "Get Amazon Search Results"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "AG Amazon Data Web Scraper",
        "api_name": "Get Amazon Product Reviews"
      }
    ],
    "query_id": 43821
  },
  {
    "api_list": [
      {
        "category_name": "Sports",
        "tool_name": "Formula 1 Standings",
        "api_name": "Races",
        "api_description": "It will return the current season races with basic information.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "results": [
            {
              "race_name": "str",
              "race_date": "str",
              "race_location": "str",
              "_list_length": 22
            }
          ]
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "Formula 1 Standings",
        "api_name": "Constructor Standings",
        "api_description": "Get the current season constructor standings.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "results": [
            {
              "team_name": "str",
              "position": "int",
              "points": "str",
              "season": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "Formula 1 Standings",
        "api_name": "Driver Standings",
        "api_description": "Will return the current F1 season driver standings.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "results": "empty list"
        }
      }
    ],
    "query": "My friends and I are organizing a Formula 1 watch party and we want to know the race schedule for the current season. Can you provide us with the race names, dates, and locations? Additionally, give us the constructor standings, including the team names, positions, and points.",
    "relevant APIs": [
      {
        "category_name": "Sports",
        "tool_name": "Formula 1 Standings",
        "api_name": "Races"
      },
      {
        "category_name": "Sports",
        "tool_name": "Formula 1 Standings",
        "api_name": "Constructor Standings"
      }
    ],
    "query_id": 44533
  },
  {
    "api_list": [
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "stations",
        "api_description": "Get a list of stations",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "search-trips",
        "api_description": "Search trips from-to. Specify for which parameters (from_id, to_id) you are looking for, city or station",
        "required_parameters": [
          {
            "name": "to_id",
            "type": "NUMBER",
            "description": "To id",
            "default": 1374
          },
          {
            "name": "from_id",
            "type": "NUMBER",
            "description": "From id",
            "default": 88
          },
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": "EUR"
          },
          {
            "name": "departure_date",
            "type": "STRING",
            "description": "Departure date",
            "default": "2021-12-26"
          },
          {
            "name": "number_adult",
            "type": "NUMBER",
            "description": "Number of adults",
            "default": 1
          }
        ],
        "optional_parameters": [
          {
            "name": "number_bike_slot",
            "type": "NUMBER",
            "description": "Number of bike slot",
            "default": 0
          },
          {
            "name": "search_by",
            "type": "OBJECT",
            "description": "Search by",
            "default": "cities"
          },
          {
            "name": "number_children",
            "type": "NUMBER",
            "description": "Number of children",
            "default": 0
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "cities",
        "api_description": "Get a list of cities",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "schedule",
        "api_description": "Get a list of schedule",
        "required_parameters": [
          {
            "name": "station_id",
            "type": "NUMBER",
            "description": "Station id",
            "default": "66"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "trip-details",
        "api_description": "Get a trip details by trip uid",
        "required_parameters": [
          {
            "name": "trip_uid",
            "type": "STRING",
            "description": "Trip uid",
            "default": "direct:110725991:2015:4188"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm planning a trip from Berlin to Munich next month. Can you provide me with the Flixbus schedules from Berlin and Munich? Also, I would like to know the trip details for a specific trip from Berlin to Munich on a particular date.",
    "relevant APIs": [
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "stations"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "schedule"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flixbus",
        "api_name": "trip-details"
      }
    ],
    "query_id": 45775
  },
  {
    "api_list": [
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET queue",
        "api_description": "Returns the list of people in division, tier and according to the type of queue",
        "required_parameters": [
          {
            "name": "region",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "queue",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "division",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "tier",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET player by name",
        "api_description": "Return you the summoner related the name given",
        "required_parameters": [
          {
            "name": "summonerName",
            "type": "STRING",
            "description": "",
            "default": "Nogaruki"
          },
          {
            "name": "region",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET player by puiid",
        "api_description": "Return you the summoner profile related to the puuid given",
        "required_parameters": [
          {
            "name": "puuid",
            "type": "STRING",
            "description": "",
            "default": "qorSH3-x2S4Mi34VTL4QeRenrGeRkUKnVVcQa2e9gQXyDHJvl8CH7xotdh20FG3A5Hac43FM4rX3VA"
          },
          {
            "name": "region",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET PlayerMatch",
        "api_description": "Return an detailed list of games for the number you passed for a player",
        "required_parameters": [
          {
            "name": "summonerName",
            "type": "STRING",
            "description": "",
            "default": "Nogaruki"
          },
          {
            "name": "region",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Number of match return\nBy default 10",
            "default": "10"
          },
          {
            "name": "start",
            "type": "NUMBER",
            "description": "Starting number in the player's game list\n\nBy default 0 ( last game played)",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET Champion details",
        "api_description": "Getting detail from champion name you give, translate by the language you give",
        "required_parameters": [
          {
            "name": "champion",
            "type": "STRING",
            "description": "",
            "default": "Volibear"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET champions",
        "api_description": "Get list of all champions by default give you in english",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"Aatrox\": {\"version\": \"str\", \"id\": \"str\", \"key\": \"str\", \"name\": \"str\", \"title\": \"str\", \"blurb\": \"str\", \"info\": {\"attack\": \"int\", \"defense\": \"int\", \"magic\": \"int\", \"difficulty\": \"int\"}, \"image\": {\"full\": \"str\", \"sprite\": \"str\", \"group\": \"str\", \"x\": \"int\", \"y\": \"int\", \"w\": \"int\", \"h\": \"int\"}, \"tags\": [\"list of str with length 2\"], \"partype\": \"str\", \"stats\": {\"hp\": \"int\", \"hpperlevel\": \"int\", \"mp\": \"int\", \"mpperlevel\": \"int\", \"movespeed\": \"int\", \"armor\": \"int\", \"armorperlevel\": \"float\", \"spellblock\": \"int\", \"spellblockperlevel\": \"float\", \"attackrange\": \"int\", \"hpregen\": \"int\", \"hpregenperlevel\": \"int\", \"mpregen\": \"int\", \"mpregenperlevel\": \"int\", \"crit\": \"int\", \"critperlevel\": \"int\", \"attackdamage\": \"int\", \"attackdamageperlevel\": \"int\", \"attackspeedperlevel\": \"float\", \"attackspeed\": \"float\"}}, \"Ahri\": {\"version\": \"str\", \"id\": \"str\", \"key\": \"str\", \"name\": \"str\", \"title\": \"str\", \"blurb\": \"str\", \"info\": {\"attack\": \"int\", \"defense\": \"int\", \"magic\": \"int\", \"difficulty\": \"int\"}, \"image\": {\"full"
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET Champion rotation",
        "api_description": "Return's you a liste of free champion ids and liste of free champions ids for new player.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to see the summoner profile for the player with the summoner name 'Nogaruki' in League of Legends. Additionally, provide me with their recent match history and a list of free champion rotations.",
    "relevant APIs": [
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET player by name"
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET PlayerMatch"
      },
      {
        "category_name": "Gaming",
        "tool_name": "League of Legends API",
        "api_name": "GET Champion rotation"
      }
    ],
    "query_id": 47838
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Directions Between 2 Locations",
        "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a location in Nansana to Kampala**",
        "required_parameters": [
          {
            "name": "end_lat",
            "type": "NUMBER",
            "description": "Latitude of the ending point (required)",
            "default": "0.32493795000000003"
          },
          {
            "name": "start_lat",
            "type": "NUMBER",
            "description": "Latitude of the starting point (required)",
            "default": "0.365816"
          },
          {
            "name": "end_lon",
            "type": "NUMBER",
            "description": "Longitude of the ending point (required)",
            "default": "32.57523607707668"
          },
          {
            "name": "start_lon",
            "type": "NUMBER",
            "description": "Longitude of the starting point (required)",
            "default": "32.529226"
          }
        ],
        "optional_parameters": [
          {
            "name": "distance_unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "steps": [
            {
              "direction": "str",
              "distance": "str",
              "duration": "str",
              "instruction": "str",
              "location": [
                "list of float with length 2"
              ],
              "_list_length": 18
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Reverse Geocode",
        "api_description": "This endpoint allows you to perform reverse geocoding in Uganda by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
        "required_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "The longitude of the location.",
            "default": "32.57523607707668"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "The latitude of the location.",
            "default": "0.32493795000000003"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "amenity": "str",
          "boundingbox": [
            "list of str with length 4"
          ],
          "category": "str",
          "city": "str",
          "country": "str",
          "display_name": "str",
          "region": "str",
          "suburb": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Facilities Lookup",
        "api_description": "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "The region where the facility is located",
            "default": "Central"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
            "default": "hospital"
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "STRING",
            "description": "The number of facilities to query.",
            "default": "10"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "The city where the facility is located",
            "default": "Kampala"
          }
        ],
        "method": "GET",
        "template_response": {
          "hospital": [
            {
              "ISO3166-2-lvl4": "str",
              "address": "str",
              "amenity": "str",
              "country_code": "str",
              "county": "str",
              "display_name": "str",
              "latitude": "str",
              "longitude": "str",
              "postcode": "str",
              "region": "str",
              "road": "str",
              "suburb": "str",
              "village": "str",
              "website": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Geocode",
        "api_description": "This endpoint allows you to lookup locations in Uganda by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "Name of address",
            "default": "Nansana"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "display_name": "str",
          "latitude": "str",
          "longitude": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Measure Distance",
        "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Nansana to Kampala**",
        "required_parameters": [
          {
            "name": "lat1",
            "type": "NUMBER",
            "description": "Latitude of the first location (required)",
            "default": "0.365816"
          },
          {
            "name": "lat2",
            "type": "NUMBER",
            "description": "Latitude of the second location (required)",
            "default": "0.32493795000000003"
          },
          {
            "name": "lon2",
            "type": "NUMBER",
            "description": "Longitude of the second location (required)",
            "default": "32.57523607707668"
          },
          {
            "name": "lon1",
            "type": "NUMBER",
            "description": "Longitude of the first location (required)",
            "default": "32.529226"
          }
        ],
        "optional_parameters": [
          {
            "name": "unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "unit": "str"
        }
      }
    ],
    "query": "I am planning a family vacation to Uganda and I need directions from Entebbe Airport to Kampala. Can you provide me with the distance, duration, and step-by-step instructions for the route? Please include the distance unit in kilometers.",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Directions Between 2 Locations"
      },
      {
        "category_name": "Location",
        "tool_name": "Uganda API",
        "api_name": "Measure Distance"
      }
    ],
    "query_id": 48059
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "[Embedded signing] Get role ids",
        "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It’s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get field and field invite id",
        "api_description": "The endpoint returns field and field invite ids.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "id of the document",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get role ids",
        "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It’s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get signing links",
        "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str",
          "code": "int"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get role ids for template",
        "api_description": "The endpoint allows to get role ids for a template.",
        "required_parameters": [
          {
            "name": "template_id",
            "type": "string",
            "description": "ID of the template.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      }
    ],
    "query": "I have a document with ID '123abc' and I need to get the role IDs and field IDs. Can you provide me with the details?",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get role ids"
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get field and field invite id"
      }
    ],
    "query_id": 49991
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Homeless Shelter",
        "api_name": "By Zip Code",
        "api_description": "Search Homeless Shelters by Zip Code",
        "required_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "Zip code",
            "default": "98004"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Homeless Shelter",
        "api_name": "By State & City",
        "api_description": "Search Homeless Shelters by State & City",
        "required_parameters": [
          {
            "name": "state",
            "type": "STRING",
            "description": "State full name (e.g., Washington) or abbreviation (e.g., WA) ",
            "default": "Washington"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "City name, e.g., Bellevue",
            "default": "Bellevue"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Homeless Shelter",
        "api_name": "By Location",
        "api_description": "Search Homeless Shelters by Location Coordinate and Radius",
        "required_parameters": [
          {
            "name": "lat",
            "type": "STRING",
            "description": "Location latitude",
            "default": "47.630703"
          },
          {
            "name": "radius",
            "type": "STRING",
            "description": "Radius in mile (10 miles maximum)",
            "default": "1.4"
          },
          {
            "name": "lng",
            "type": "STRING",
            "description": "Location longitude",
            "default": "-122.186370"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm interested in learning more about homeless shelters in Bellevue, Washington. Can you provide me with a list of shelters in that area, including their addresses and contact information? Additionally, it would be great to know if there are any shelters near a specific location, such as the coordinates 47.630703 latitude and -122.186370 longitude, within a 10-mile radius.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Homeless Shelter",
        "api_name": "By State & City"
      },
      {
        "category_name": "Data",
        "tool_name": "Homeless Shelter",
        "api_name": "By Location"
      }
    ],
    "query_id": 51043
  },
  {
    "api_list": [
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "TeamNearMatches",
        "api_description": "Get the near matches for a specific baseball team using the team ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "The team ID for which you want to retrieve the near matches.",
            "default": 3633
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"nextEvent\": {\"awayScore\": {}, \"awayTeam\": {\"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"changes\": {\"changeTimestamp\": \"int\"}, \"crowdsourcingDataDisplayEnabled\": \"bool\", \"customId\": \"str\", \"finalResultOnly\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {}, \"homeTeam\": {\"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"id\": \"int\", \"periods\": {\"current\": \"str\", \"extra1\": \"str\", \"inning1\": \"str\", \"inning2\": \"str\", \"inning3\": \"str\", \"inning4\": \"str\", \"inning5\": \"str\", \"inning6"
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "get-manager-placeholder",
        "api_description": "Get the manager placeholder image in PNG format.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "TeamLastMatches",
        "api_description": "Get the last matches for a specific baseball team by providing its ID and page number.",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The zero-based page number of the results you want to retrieve.",
            "default": ""
          },
          {
            "name": "id",
            "type": "NUMBER",
            "description": "The ID of the baseball team for which you want to retrieve the last matches.",
            "default": 3633
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "LeagueLastMatches",
        "api_description": "Get the last matches for a league by providing the unique tournament ID, season ID, and the page number (0-based).",
        "required_parameters": [
          {
            "name": "seasonId",
            "type": "NUMBER",
            "description": "The season ID for which you want to retrieve the last matches.",
            "default": 39143
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The 0-based page number for which you want to retrieve the last matches.",
            "default": ""
          },
          {
            "name": "tournamentId",
            "type": "NUMBER",
            "description": "The unique tournament ID for which you want to retrieve the last matches.",
            "default": 11205
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "MatchVotes",
        "api_description": "Get the votes for a specific baseball match using the match ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "The ID of the match for which you want to get the votes.",
            "default": 9864379
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "vote": {
            "vote1": "int",
            "vote2": "int"
          }
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "TeamMedia",
        "api_description": "Get the media for a specific baseball team using the team ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "The team ID for which you want to retrieve the media.",
            "default": 3633
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "media": [
            {
              "createdAtTimestamp": "int",
              "doFollow": "bool",
              "id": "int",
              "keyHighlight": "bool",
              "mediaType": "int",
              "sourceUrl": "str",
              "subtitle": "str",
              "thumbnailUrl": "str",
              "title": "str",
              "url": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "HeadToHeadMatches",
        "api_description": "Get head-to-head match data for a specific baseball match using its custom ID.",
        "required_parameters": [
          {
            "name": "customId",
            "type": "STRING",
            "description": "The custom ID of the match for which you want to get the head-to-head matches.",
            "default": "ExbsIxb"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"events\": [{\"awayScore\": {}, \"awayTeam\": {\"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"changes\": {\"changeTimestamp\": \"int\"}, \"crowdsourcingDataDisplayEnabled\": \"bool\", \"customId\": \"str\", \"finalResultOnly\": \"bool\", \"hasGlobalHighlights\": \"bool\", \"homeScore\": {}, \"homeTeam\": {\"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"subTeams\": \"empty list\", \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"id\": \"int\", \"periods\": {\"current\": \"str\", \"extra1\": \"str\", \"inning1\": \"str\", \"inning2\": \"str\", \"inning3\": \"str\", \"inning4\": \"str\", \"inning5\": \"str\", \"inning6\":"
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "PreMatchForm",
        "api_description": "Get the pre-match form for a specific baseball match using the match ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "The ID of the match for which you want to get the pre-match form.",
            "default": 9864379
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "awayTeam": {
            "form": [
              "list of str with length 5"
            ],
            "position": "int",
            "value": "str"
          },
          "homeTeam": {
            "form": [
              "list of str with length 5"
            ],
            "position": "int",
            "value": "str"
          },
          "label": "str"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "TeamPlayers",
        "api_description": "Get the players for a specific baseball team using the team ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "The team ID for which you want to retrieve the players.",
            "default": 3633
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"foreignPlayers\": [{\"player\": {\"country\": {\"alpha2\": \"str\", \"name\": \"str\"}, \"dateOfBirthTimestamp\": \"int\", \"firstName\": \"str\", \"gender\": \"str\", \"height\": \"int\", \"id\": \"int\", \"jerseyNumber\": \"str\", \"lastName\": \"str\", \"name\": \"str\", \"position\": \"str\", \"shirtNumber\": \"int\", \"shortName\": \"str\", \"slug\": \"str\", \"team\": {\"country\": {\"alpha2\": \"str\", \"name\": \"str\"}, \"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"primaryUniqueTournament\": {\"category\": {\"alpha2\": \"str\", \"flag\": \"str\", \"id\": \"int\", \"name\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}}, \"country\": {}, \"displayInverseHomeAwayTeams\": \"bool\", \"id\": \"int\", \"name\": \"str\", \"primaryColorHex\": \"str\", \"secondaryColorHex\": \"str\", \"slug\": \"str\", \"userCount\": \"int\"}, \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"tournament\": {\"category\": {\"alpha2\": \"str\", \"flag\": "
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "LeagueHomeTeamEvents",
        "api_description": "This endpoint retrieves the last 5 matches for a specific league in a given season for home events.",
        "required_parameters": [
          {
            "name": "seasonId",
            "type": "NUMBER",
            "description": "The ID of the season for which you want to retrieve the home team events.",
            "default": 49349
          },
          {
            "name": "tournamentId",
            "type": "NUMBER",
            "description": "The unique tournament ID for which you want to retrieve the home team events.",
            "default": 19442
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"tournamentTeamEvents\": {\"107122\": {\"453004\": [{\"awayScore\": {\"current\": \"int\", \"display\": \"int\", \"normaltime\": \"int\"}, \"awayTeam\": {\"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"customId\": \"str\", \"finalResultOnly\": \"bool\", \"homeScore\": {\"current\": \"int\", \"display\": \"int\", \"normaltime\": \"int\"}, \"homeTeam\": {\"gender\": \"str\", \"id\": \"int\", \"name\": \"str\", \"nameCode\": \"str\", \"national\": \"bool\", \"shortName\": \"str\", \"slug\": \"str\", \"sport\": {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\"}, \"teamColors\": {\"primary\": \"str\", \"secondary\": \"str\", \"text\": \"str\"}, \"type\": \"int\", \"userCount\": \"int\"}, \"id\": \"int\", \"slug\": \"str\", \"startTimestamp\": \"int\", \"status\": {\"code\": \"int\", \"description\": \"str\", \"type\": \"str\"}, \"tournament\": {\"category\": {\"alpha2\": \"str\", \"flag\": \"str\", \"i"
      }
    ],
    "query": "I'm a fan of a specific baseball team and would like to see the media related to the team. Can you fetch the media content for the team with ID 3633? I'm particularly interested in images, videos, and highlights.",
    "relevant APIs": [
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "TeamMedia"
      },
      {
        "category_name": "Sports",
        "tool_name": "BaseballApi",
        "api_name": "TeamPlayers"
      }
    ],
    "query_id": 52534
  },
  {
    "api_list": [
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "vivanews-detail",
        "api_description": "vivanews-detail",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "1612364"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "vivanews-search",
        "api_description": "vivanews-search",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "banjir"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "kompas-detail",
        "api_description": "kompas-detail",
        "required_parameters": [
          {
            "name": "guid",
            "type": "STRING",
            "description": "",
            "default": ".xml.2023.06.20.114935178"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "kompas-search",
        "api_description": "kompas-search",
        "required_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "command",
            "type": "STRING",
            "description": "",
            "default": "banjir"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "detik-detail",
        "api_description": "detik-detail",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "https://finance.detik.com/bursa-dan-valas/d-5206657/bei-buka-suspensi-saham-pollux"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "detik-search",
        "api_description": "search detik.com news",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "detik"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "tirto-detail",
        "api_description": "detail tirto news",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "1253421"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "tirto-search",
        "api_description": "search tirto news data",
        "required_parameters": [
          {
            "name": "limit",
            "type": "STRING",
            "description": "",
            "default": "10"
          },
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "banjir"
          },
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a student researching news articles in Indonesia. Can you provide me with the details of an article from Vivanews with the ID 1612364? Additionally, search for news related to floods on Kompas using the keyword 'banjir' and provide me with the top 10 search results.",
    "relevant APIs": [
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "vivanews-detail"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Indonesia News",
        "api_name": "kompas-search"
      }
    ],
    "query_id": 55223
  },
  {
    "api_list": [
      {
        "category_name": "Social",
        "tool_name": "Zodiac Sign API",
        "api_name": "Getallsign",
        "api_description": "Get all sign. This returns all the available signs",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Aquarius": {
            "date": "str",
            "personality": "str"
          },
          "Aries": {
            "date": "str",
            "personality": "str"
          },
          "Cancer": {
            "date": "str",
            "personality": "str"
          },
          "Capricorn": {
            "date": "str",
            "personality": "str"
          },
          "Gemini": {
            "date": "str",
            "personality": "str"
          },
          "Leo": {
            "date": "str",
            "personality": "str"
          },
          "Libra": {
            "date": "str",
            "personality": "str"
          },
          "Pisces": {
            "date": "str",
            "personality": "str"
          },
          "Sagittarius": {
            "date": "str",
            "personality": "str"
          },
          "Scorpio": {
            "date": "str",
            "personality": "str"
          },
          "Taurus": {
            "date": "str",
            "personality": "str"
          },
          "Virgo": {
            "date": "str",
            "personality": "str"
          }
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Zodiac Sign API",
        "api_name": "SearchZodiacbySign",
        "api_description": "Search Zodiac by sign. This returns the value of the selected sign",
        "required_parameters": [
          {
            "name": "sign",
            "type": "STRING",
            "description": "Ensure the first letter of the value is in capital letter",
            "default": "Gemini"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "date": "str",
          "personality": "str"
        }
      }
    ],
    "query": "I want to surprise my partner with a personalized gift based on their zodiac sign. Can you provide me with the personality traits and dates for all the zodiac signs? Also, I'd like to search for the personality traits of the Virgo sign.",
    "relevant APIs": [
      {
        "category_name": "Social",
        "tool_name": "Zodiac Sign API",
        "api_name": "Getallsign"
      },
      {
        "category_name": "Social",
        "tool_name": "Zodiac Sign API",
        "api_name": "SearchZodiacbySign"
      }
    ],
    "query_id": 56226
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "[Embedded signing] Get role ids",
        "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It’s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get field and field invite id",
        "api_description": "The endpoint returns field and field invite ids.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "id of the document",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get role ids",
        "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It’s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get signing links",
        "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str",
          "code": "int"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get role ids for template",
        "api_description": "The endpoint allows to get role ids for a template.",
        "required_parameters": [
          {
            "name": "template_id",
            "type": "string",
            "description": "ID of the template.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      }
    ],
    "query": "I need to retrieve the metadata, signatures, seals, texts, and checks for a document with the ID 'cba789'. Can you assist me in obtaining this information? Also, I want to get the role IDs and field invite IDs.",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "[Embedded signing] Get role ids"
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get field and field invite id"
      }
    ],
    "query_id": 58096
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Search for SOLD",
        "api_description": "To download data from SALE, you must first generate a Token with Get search token and set search_type=Sold. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there.",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "search_token",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "beds",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "sold_date",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "type": "str",
          "title": "str",
          "status": "int",
          "traceId": "str",
          "errors": {
            "search_token": [
              "list of str with length 1"
            ]
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Search for SALE",
        "api_description": "To download data from SALE, you must first generate a Token with Get search token and set search_type=ForSale. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there.",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "search_token",
            "type": "STRING",
            "description": "Call **Get search token** endpoint to generate the token and put it here.",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "for_sale_by_owner",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "min_price",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "for_sale_by_agent",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "house_type",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "max_price",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "sort",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "beds",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "new_construction",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Get server time",
        "api_description": "Returns server time",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Get home details",
        "api_description": "Returns full details of home. Call **Get listing by url** or get items from *Search*. In response you'll get **url** of home. Take this url and pass it here into query. You can also go to https://www.trulia.com/AZ/Scottsdale/ and take urls e.g. https://www.trulia.com/p/az/fountain-hills/14834-e-valley-vista-dr-fountain-hills-az-85268--2113652369",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "https://www.trulia.com/p/az/paradise-valley/9316-n-58th-st-paradise-valley-az-85253--2113546226"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"description\": \"str\", \"status\": \"int\", \"data\": {\"is_empty\": \"bool\", \"price_change\": \"NoneType\", \"price_history\": [{\"event\": \"str\", \"formatted_data\": \"str\", \"price\": {\"formatted_price\": \"str\", \"price\": \"int\", \"currency_code\": \"NoneType\", \"branch_banner_price\": \"NoneType\"}, \"source\": \"str\", \"_list_length\": 4}], \"price\": {\"formatted_price\": \"str\", \"price\": \"int\", \"currency_code\": \"str\", \"branch_banner_price\": \"str\"}, \"selling_soon_information\": \"NoneType\", \"highlights\": [{\"name\": \"str\", \"value\": \"str\", \"_list_length\": 6}], \"agent_name\": \"str\", \"broker_name\": \"str\", \"date_listed\": \"str\", \"description\": {\"date_last_updated_formatted\": \"str\", \"markdown\": \"NoneType\", \"text\": \"NoneType\", \"value\": \"str\", \"subheader\": \"NoneType\", \"contact_phone_number\": \"NoneType\"}, \"url\": \"str\", \"floor_space\": \"float\", \"floor_space_formatted\": \"str\", \"tags\": [\"list of str with length 2\"], \"photos\": [\"list of str with length 77\"], \"property_type\": \"str\", \"location\": {\"state_code\": \"str\", \"full_location\": \"str\","
      },
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Get listing by url",
        "api_description": "Returns homes from the listing. Just go to https://www.trulia.com/ select the listing you are interested in e.g. https://www.trulia.com/AZ/Scottsdale/ and pass that url into query.",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "https://www.trulia.com/AZ/Scottsdale/"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "description": "str",
          "status": "int",
          "data": {
            "homes": [
              {
                "date_listed": "str",
                "broker_name": "str",
                "agent_name": "str",
                "lot_size": "float",
                "lot_size_formatted": "str",
                "bathrooms": "NoneType",
                "bathrooms_formatted": "NoneType",
                "bedrooms": "NoneType",
                "bedrooms_formatted": "NoneType",
                "property_type": "str",
                "status": {
                  "is_active_for_rent": "bool",
                  "is_active_for_sale": "bool",
                  "is_foreclosure": "bool",
                  "is_off_market": "bool",
                  "is_recently_rented": "bool",
                  "is_recently_sold": "bool"
                },
                "price": {
                  "formatted_price": "str",
                  "currency_code": "str",
                  "price": "int"
                },
                "floor_space_formatted": "NoneType",
                "floor_space": "NoneType",
                "photos": [
                  "list of str with length 18"
                ],
                "tags": [
                  "list of str with length 2"
                ],
                "location": {
                  "state_code": "str",
                  "full_location": "str",
                  "zip_code": "str",
                  "city": "str",
                  "latitude": "float",
                  "longitude": "float"
                },
                "url": "str",
                "_list_length": 40
              }
            ],
            "paging": {
              "current_page": "int",
              "page_count": "int",
              "next_page_url": "NoneType"
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Get search token",
        "api_description": "Get search token and use it in **search/for_sale**, **search/for_rent**, **search/sold** endpoints.",
        "required_parameters": [
          {
            "name": "search_type",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "place",
            "type": "STRING",
            "description": "Type city (or phrase) you are interested in, example:  **California**, **Cali**, **Boston** etc.",
            "default": "Scottsdale"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I am interested in purchasing a new home and would like to know the current real estate market in Scottsdale. Can you generate a search token for the city of Scottsdale and retrieve the available homes for sale? Please include the price, location, and photos of the properties.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Get search token"
      },
      {
        "category_name": "Data",
        "tool_name": "Trulia Real Estate Scraper",
        "api_name": "Search for SALE"
      }
    ],
    "query_id": 58949
  },
  {
    "api_list": [
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA TEAM INFO",
        "api_description": "This endpoint gets team information for a specific WNBA team.",
        "required_parameters": [
          {
            "name": "teamid",
            "type": "STRING",
            "description": "Team Id",
            "default": "18"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"team\": {\"id\": \"str\", \"uid\": \"str\", \"slug\": \"str\", \"location\": \"str\", \"name\": \"str\", \"abbreviation\": \"str\", \"displayName\": \"str\", \"shortDisplayName\": \"str\", \"color\": \"str\", \"alternateColor\": \"str\", \"isActive\": \"bool\", \"logos\": [{\"href\": \"str\", \"width\": \"int\", \"height\": \"int\", \"alt\": \"str\", \"rel\": [\"list of str with length 2\"], \"lastUpdated\": \"str\", \"_list_length\": 2}], \"record\": {\"items\": [{\"description\": \"str\", \"type\": \"str\", \"summary\": \"str\", \"stats\": [{\"name\": \"str\", \"value\": \"int\", \"_list_length\": 19}], \"_list_length\": 3}]}, \"athletes\": [{\"id\": \"str\", \"uid\": \"str\", \"guid\": \"str\", \"type\": \"str\", \"alternateIds\": {\"sdr\": \"str\"}, \"firstName\": \"str\", \"lastName\": \"str\", \"fullName\": \"str\", \"displayName\": \"str\", \"shortName\": \"str\", \"weight\": \"int\", \"displayWeight\": \"str\", \"height\": \"int\", \"displayHeight\": \"str\", \"age\": \"int\", \"dateOfBirth\": \"str\", \"links\": [{\"language\": \"str\", \"rel\": [\"list of str with length 3\"], \"href\": \"str\", \"text\": \"str\", \"shortText\": \"str\", \"isExternal\": \"bool\", \"is"
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Teams.",
        "api_description": "The endpoint provides you with a list of all WNBA teams.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Standings",
        "api_description": "The endpoint provides you with the team standings for the WNBA",
        "required_parameters": [
          {
            "name": "year",
            "type": "STRING",
            "description": "",
            "default": "2022"
          }
        ],
        "optional_parameters": [
          {
            "name": "group",
            "type": "STRING",
            "description": "acceptable group names: 'league', 'conference'. Default: 'league'",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "sports": [
            {
              "id": "str",
              "uid": "str",
              "name": "str",
              "slug": "str",
              "leagues": [
                {
                  "id": "str",
                  "uid": "str",
                  "name": "str",
                  "abbreviation": "str",
                  "shortName": "str",
                  "slug": "str",
                  "teams": [
                    {
                      "team": {
                        "id": "str",
                        "uid": "str",
                        "slug": "str",
                        "abbreviation": "str",
                        "displayName": "str",
                        "shortDisplayName": "str",
                        "name": "str",
                        "nickname": "str",
                        "location": "str",
                        "color": "str",
                        "alternateColor": "str",
                        "isActive": "bool",
                        "isAllStar": "bool",
                        "logos": [
                          {
                            "href": "str",
                            "alt": "str",
                            "rel": [
                              "list of str with length 2"
                            ],
                            "width": "int",
                            "height": "int",
                            "_list_length": 2
                          }
                        ],
                        "links": [
                          {
                            "language": "str",
                            "rel": [
                              "list of str with length 3"
                            ],
                            "href": "str",
                            "text": "str",
                            "shortText": "str",
                            "isExternal": "bool",
                            "isPremium": "bool",
                            "isHidden": "bool",
                            "_list_length": 5
                          }
                        ]
                      },
                      "_list_length": 12
                    }
                  ],
                  "year": "int",
                  "season": {
                    "year": "int",
                    "displayName": "str"
                  },
                  "_list_length": 1
                }
              ],
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA ScoreBoard",
        "api_description": "This endpoint provides you with the WNBA scoreboard data for a specified date if available.",
        "required_parameters": [
          {
            "name": "month",
            "type": "STRING",
            "description": "",
            "default": "04"
          },
          {
            "name": "day",
            "type": "STRING",
            "description": "",
            "default": "04"
          },
          {
            "name": "year",
            "type": "STRING",
            "description": "",
            "default": "2022"
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "STRING",
            "description": "",
            "default": "02"
          }
        ],
        "method": "GET",
        "template_response": {
          "leagues": [
            {
              "id": "str",
              "uid": "str",
              "name": "str",
              "abbreviation": "str",
              "slug": "str",
              "season": {
                "year": "int",
                "startDate": "str",
                "endDate": "str",
                "displayName": "str",
                "type": {
                  "id": "str",
                  "type": "int",
                  "name": "str",
                  "abbreviation": "str"
                }
              },
              "logos": [
                {
                  "href": "str",
                  "width": "int",
                  "height": "int",
                  "alt": "str",
                  "rel": [
                    "list of str with length 2"
                  ],
                  "lastUpdated": "str",
                  "_list_length": 1
                }
              ],
              "calendarType": "str",
              "calendarIsWhitelist": "bool",
              "calendarStartDate": "str",
              "calendarEndDate": "str",
              "calendar": [
                "list of str with length 97"
              ],
              "_list_length": 1
            }
          ],
          "events": "empty list"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Schedule",
        "api_description": "This endpoint provides you with the WNBA schedule data for a specified date as long as it is available.",
        "required_parameters": [
          {
            "name": "month",
            "type": "STRING",
            "description": "",
            "default": "05"
          },
          {
            "name": "day",
            "type": "STRING",
            "description": "",
            "default": "05"
          },
          {
            "name": "year",
            "type": "STRING",
            "description": "",
            "default": "2022"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"20230616\": {\"calendar\": [\"list of str with length 100\"], \"leagueName\": \"str\", \"calendartype\": \"str\", \"leagues\": \"empty list\", \"games\": [{\"date\": \"str\", \"uid\": \"str\", \"name\": \"str\", \"competitions\": [{\"date\": \"str\", \"venue\": {\"address\": {\"city\": \"str\", \"state\": \"str\"}, \"fullName\": \"str\", \"indoor\": \"bool\", \"id\": \"str\", \"capacity\": \"int\"}, \"conferenceCompetition\": \"bool\", \"notes\": \"empty list\", \"tickets\": [{\"summary\": \"str\", \"numberAvailable\": \"int\", \"links\": [{\"href\": \"str\", \"_list_length\": 2}], \"_list_length\": 1}], \"timeValid\": \"bool\", \"geoBroadcasts\": [{\"market\": {\"id\": \"str\", \"type\": \"str\"}, \"media\": {\"shortName\": \"str\"}, \"type\": {\"id\": \"str\", \"shortName\": \"str\"}, \"lang\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"format\": {\"regulation\": {\"periods\": \"int\"}}, \"broadcasts\": [{\"market\": \"str\", \"names\": [\"list of str with length 1\"], \"_list_length\": 1}], \"playByPlayAvailable\": \"bool\", \"type\": {\"id\": \"str\", \"abbreviation\": \"str\"}, \"uid\": \"str\", \"competitors\": [{\"uid\": \"str\", \"homeAway\""
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Summary",
        "api_description": "This endpoint gets the WNBA game summary data for a specific game.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "401244185"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Box Score",
        "api_description": "This endpoint returns the WNBA game box score data for a specified game.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Game id",
            "default": "401244185"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Play By Play",
        "api_description": "This endpoint provides the NBA game play-by-play data for a specific game.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Game id",
            "default": "401244185"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm a basketball enthusiast and I'm interested in the WNBA. Can you give me the team info for the team with the ID 18? Also, I'd like to know the schedule for May 5, 2022. Additionally, I'm curious about the box score and play-by-play data for a specific game. Please provide me with the box score and play-by-play data for the game with the ID 401244185.",
    "relevant APIs": [
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA TEAM INFO"
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Schedule"
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Box Score"
      },
      {
        "category_name": "Sports",
        "tool_name": "WNBA API",
        "api_name": "WNBA Play By Play"
      }
    ],
    "query_id": 60837
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Full Stock Price",
        "api_description": "This endpoint returns a stock price.",
        "required_parameters": [
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "to",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Upgrade Downgrade History",
        "api_description": "This endpoint returns a Upgrade Downgrade History.",
        "required_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "Date format: yyyy-mm-dd",
            "default": ""
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "Date format: yyyy-mm-dd",
            "default": ""
          },
          {
            "name": "symbol",
            "type": "STRING",
            "description": "ticker... i.e: TSLA",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "calendar Events",
        "api_description": "Calendar Events of a particular stock",
        "required_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "Date format: yyyy-mm-dd",
            "default": ""
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "Date format: yyyy-mm-dd",
            "default": ""
          },
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Earnings",
        "api_description": "This endpoint returns the company earnings.",
        "required_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "Date format: yyyy-mm-dd",
            "default": ""
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "Date format: yyyy-mm-dd",
            "default": ""
          },
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Balansheet/Financials",
        "api_description": "This endpoint returns a company/ stock financials",
        "required_parameters": [
          {
            "name": "from",
            "type": "STRING",
            "description": "Date",
            "default": ""
          },
          {
            "name": "to",
            "type": "STRING",
            "description": "Date",
            "default": ""
          },
          {
            "name": "symbol",
            "type": "STRING",
            "description": "i.e: TSLA",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Conversion Rates",
        "api_description": "This endpoint returns conversion rates for any currency.",
        "required_parameters": [
          {
            "name": "conversion",
            "type": "STRING",
            "description": "Values Accepted:\neur-usd, usd-jpy, gbp-usd, usd-chf, aud-usd, usd-cad, nzd-usd, eur-jpy, eur-chf, eur-gbp, gbp-jpy, chf-jpy, aud-jpy, eur-aud, eur-cad, aud-cad, cad-jpy, nzd-jpy, aud-nzd, gbp-cad, gbp-nzd, gbp-aud, usd-hkd, usd-sgd, usd-try, usd-mxn, usd-zar, usd-inr, usd-cnh, usd-idr, usd-thb, usd-php, usd-myr, usd-vnd, usd-krw, usd-sar, usd-aed, usd-qar, usd-omr, usd-bhd, usd-kes, usd-egp, usd-ngn, usd-ghs, usd-xaf, usd-xof, usd-zmw, usd-ugx, usd-tzs, usd-mad, usd-dzd, usd-tnd, usd-lyd, usd-mru, usd-bsd, usd-bbd, usd-jmd, usd-xcd, usd-awg, usd-bob, usd-crc, usd-dop, usd-gtq, usd-hnl, usd-htg, usd-jpy-otc, eur-usd-otc, usd-cny-otc, usd-chf-otc, usd-huf, usd-pen, usd-ils, usd-ars, usd-clp, usd-cop, usd-pab, usd-pyg, usd-uyu, usd-ves, usd-brl, usd-rub, usd-uaa, usd-kzt, usd-azn, usd-gea, usd-try-otc, usd-byn, usd-uah, usd-mnt, usd-uzs, usd-gel, usd-mzn, usd-xdr, xpt-usd, xpd-usd, xau-usd, xag-usd",
            "default": ""
          },
          {
            "name": "period",
            "type": "STRING",
            "description": "String: Period of time, window size. Default P1M (1 month). Valid values: P1D, P1W, P1M, P3M, P6M, P1Y, P5Y, MAX.",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "interval",
            "type": "STRING",
            "description": "Interval between results. Default P1D (1 day). Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT5H, P1D, P1W, P1M.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "YH Historical",
        "api_description": "This endpoint returns the history of a public stock.",
        "required_parameters": [
          {
            "name": "edate",
            "type": "STRING",
            "description": "// End Date",
            "default": ""
          },
          {
            "name": "sdate",
            "type": "STRING",
            "description": "// Start Date\nformat: yyyyy-mm-dd",
            "default": ""
          },
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Summary Detail",
        "api_description": "This endpoint returns full detail of any public stock",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "i.e: TSLA",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Stock Price",
        "api_description": "This endpoint retrieves a price with details for any public stock.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "i.e: TSLA",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Currency Converter",
        "api_description": "Looking for a fast and reliable currency converter? Our API endpoint has got you covered! With just a few lines of code, you can easily integrate our endpoint into your application and start converting currencies in no time. Say goodbye to the hassle of manual calculations and let our endpoint handle it all for you. \n\nTry it out today and experience the convenience and efficiency of our currency converter API endpoint.",
        "required_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "i.e: JPY",
            "default": "JPY"
          },
          {
            "name": "amount",
            "type": "STRING",
            "description": "",
            "default": "1254"
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "i.e: USD",
            "default": "USD"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "Can you retrieve the stock price and details for the symbol GOOGL? Also, fetch the conversion rate from USD to JPY for an amount of 1254.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Stock Price"
      },
      {
        "category_name": "Finance",
        "tool_name": "YH Finance Complete",
        "api_name": "Currency Converter"
      }
    ],
    "query_id": 61654
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Stock ownership",
        "api_description": "Provides current stock ownership information.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "MSFT"
          },
          {
            "name": "includeCurrentQuarter",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "date": "str",
          "lastInvestorsHolding": "int",
          "investorsHoldingChange": "int",
          "numberOf13Fshares": "int",
          "lastNumberOf13Fshares": "int",
          "numberOf13FsharesChange": "int",
          "totalInvested": "int",
          "lastTotalInvested": "int",
          "totalInvestedChange": "int",
          "ownershipPercent": "float",
          "lastOwnershipPercent": "float",
          "ownershipPercentChange": "float",
          "newPositions": "int",
          "lastNewPositions": "int",
          "newPositionsChange": "int",
          "increasedPositions": "int",
          "lastIncreasedPositions": "int",
          "increasedPositionsChange": "int",
          "closedPositions": "int",
          "lastClosedPositions": "int",
          "closedPositionsChange": "int",
          "reducedPositions": "int",
          "lastReducedPositions": "int",
          "reducedPositionsChange": "int",
          "totalCalls": "int",
          "lastTotalCalls": "int",
          "totalCallsChange": "int",
          "totalPuts": "int",
          "lastTotalPuts": "int",
          "totalPutsChange": "int",
          "putCallRatio": "float",
          "lastPutCallRatio": "float",
          "putCallRatioChange": "float"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Holder",
        "api_description": "Provides information about the current holder structure.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Executives",
        "api_description": "Provides information about the current composition of executives",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "MSFT"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "name": "str",
          "pay": "str",
          "currencyPay": "str",
          "yearBorn": "str",
          "titleSince": "NoneType"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Shares float",
        "api_description": "Provides the amount of current shares float.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "MSFT"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "date": "str",
          "freeFloat": "float",
          "floatShares": "int",
          "outstandingShares": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Profile",
        "api_description": "Provides company data e.g. sector, industry, location, executives...",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "price": "float",
          "beta": "float",
          "volAvg": "float",
          "mktCap": "float",
          "lastDiv": "float",
          "range": "str",
          "changes": "float",
          "companyName": "str",
          "currency": "str",
          "cik": "str",
          "isin": "str",
          "cusip": "str",
          "exchange": "str",
          "exchangeShortName": "str",
          "industry": "str",
          "website": "str",
          "description": "str",
          "ceo": "str",
          "sector": "str",
          "country": "str",
          "fullTimeEmployees": "str",
          "phone": "str",
          "address": "str",
          "city": "str",
          "state": "str",
          "zip": "str",
          "dcfDiff": "float",
          "dcf": "float"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Income",
        "api_description": "Provides either annual or quarterly income statements of an single stock company.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "PG"
          },
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": "quarter"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "date": "str",
          "period": "str",
          "reportedCurrency": "str",
          "calendarYear": "int",
          "revenue": "int",
          "costOfRevenue": "int",
          "grossProfit": "int",
          "grossProfitRatio": "float",
          "researchAndDevelopmentExpenses": "int",
          "generalAndAdministrativeExpenses": "int",
          "sellingAndMarketingExpenses": "int",
          "sellingGeneralAndAdministrativeExpenses": "int",
          "otherExpenses": "int",
          "operatingExpenses": "int",
          "costAndExpenses": "int",
          "interestExpense": "int",
          "depreciationAndAmortization": "int",
          "ebitda": "int",
          "ebitdaratio": "float",
          "operatingIncome": "int",
          "operatingIncomeRatio": "float",
          "totalOtherIncomeExpensesNet": "int",
          "incomeBeforeTax": "int",
          "incomeBeforeTaxRatio": "float",
          "incomeTaxExpense": "int",
          "netIncome": "int",
          "netIncomeRatio": "float",
          "eps": "float",
          "epsdiluted": "float",
          "weightedAverageShsOut": "int",
          "weightedAverageShsOutDil": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Cashflow",
        "api_description": "Provides either annual or quarterly cash flow statements of an single stock company.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "TSLA"
          },
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": "quarter"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"symbol\": \"str\", \"date\": \"str\", \"period\": \"str\", \"reportedCurrency\": \"str\", \"calendarYear\": \"int\", \"netIncome\": \"int\", \"depreciationAndAmortization\": \"int\", \"deferredIncomeTax\": \"int\", \"stockBasedCompensation\": \"int\", \"changeInWorkingCapital\": \"int\", \"accountsReceivables\": \"int\", \"inventory\": \"int\", \"accountsPayables\": \"int\", \"otherWorkingCapital\": \"int\", \"otherNonCashItems\": \"int\", \"netCashProvidedByOperatingActivites\": \"NoneType\", \"investmentsInPropertyPlantAndEquipment\": \"int\", \"acquisitionsNet\": \"int\", \"purchasesOfInvestments\": \"int\", \"salesMaturitiesOfInvestments\": \"int\", \"otherInvestingActivites\": \"int\", \"netCashUsedForInvestingActivites\": \"int\", \"debtRepayment\": \"int\", \"commonStockIssued\": \"int\", \"commonStockRepurchased\": \"int\", \"dividendsPaid\": \"int\", \"otherFinancingActivites\": \"int\", \"netCashUsedProvidedByFinancingActivities\": \"int\", \"effectOfForexChangesOnCash\": \"int\", \"netChangeInCash\": \"int\", \"cashAtEndOfPeriod\": \"int\", \"cashAtBeginningOfPeriod\": \"int\", \"operatingCashFlow\""
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Balance",
        "api_description": "Provides either annual or quarterly balance sheet statements of an single stock company.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "MSFT"
          },
          {
            "name": "period",
            "type": "STRING",
            "description": "",
            "default": "quarter"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"symbol\": \"str\", \"date\": \"str\", \"period\": \"str\", \"reportedCurrency\": \"str\", \"cashAndCashEquivalents\": \"int\", \"shortTermInvestments\": \"int\", \"cashAndShortTermInvestments\": \"int\", \"netReceivables\": \"int\", \"inventory\": \"int\", \"otherCurrentAssets\": \"int\", \"totalCurrentAssets\": \"int\", \"propertyPlantEquipmentNet\": \"int\", \"goodwill\": \"int\", \"intangibleAssets\": \"int\", \"goodwillAndIntangibleAssets\": \"int\", \"longTermInvestments\": \"int\", \"taxAssets\": \"int\", \"otherNonCurrentAssets\": \"int\", \"totalNonCurrentAssets\": \"int\", \"otherAssets\": \"int\", \"totalAssets\": \"int\", \"accountPayables\": \"int\", \"shortTermDebt\": \"int\", \"taxPayables\": \"int\", \"deferredRevenue\": \"int\", \"otherCurrentLiabilities\": \"int\", \"totalCurrentLiabilities\": \"int\", \"longTermDebt\": \"int\", \"deferredRevenueNonCurrent\": \"int\", \"deferredTaxLiabilitiesNonCurrent\": \"int\", \"otherNonCurrentLiabilities\": \"int\", \"totalNonCurrentLiabilities\": \"int\", \"otherLiabilities\": \"int\", \"totalLiabilities\": \"int\", \"commonStock\": \"int\", \"preferredStock\": \"int"
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Crypto symbol",
        "api_description": "Returns a list of all available crypto symbols",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Forex symbol",
        "api_description": "Returns a list of all available forex symbols",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I want to analyze the income statement and the balance sheet of Apple (AAPL) for the last quarter. Additionally, I need the current composition of executives and the amount of current shares float.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Income"
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Balance"
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Executives"
      },
      {
        "category_name": "Finance",
        "tool_name": "Holistic Finance - Stock Data",
        "api_name": "Shares float"
      }
    ],
    "query_id": 62012
  },
  {
    "api_list": [
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get post by id",
        "api_description": "Returns a post by `post_id`. You can get the `post_id` from the `Get all posts` endpoint.",
        "required_parameters": [
          {
            "name": "post_id",
            "type": "string",
            "description": "",
            "default": "P36288"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get all posts",
        "api_description": "Get a paginated list of all posts.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Posts per page. If no value is provided, the default value of `10` will be applied.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get all languages",
        "api_description": "Returns a list of all supported languages. The API supports 40 different languages and 80 different voices for the ai_reading. This is used to define the post language when a post is added. It also defines the voice for the sound file that is generated for the user to listen to.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "supported_languages": [
            {
              "language_id": "int",
              "language_name": "str",
              "language_voice": "str",
              "_list_length": 81
            }
          ]
        }
      },
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get language by id",
        "api_description": "Returns a language by id",
        "required_parameters": [
          {
            "name": "language_id",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get score by id",
        "api_description": "Returns a score by `score_id`. You can get the `score_id` from the `Get all scores` endpoint. The scale parameter defines the maximum number of points for the recording, as well as each word. This parameter is not required. The default value of 100 will be applied if the parameter is not provided.",
        "required_parameters": [
          {
            "name": "score_id",
            "type": "string",
            "description": "",
            "default": "S38392182"
          }
        ],
        "optional_parameters": [
          {
            "name": "scale",
            "type": "NUMBER",
            "description": "",
            "default": "90"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get all scores",
        "api_description": "Get a paginated list of all scores.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Scores per page. If no value is provided, the default value of `10` will be applied.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "",
            "default": "3"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm planning to add a new post in a specific language. Can you fetch me the details of a language with the ID 5? I would also like to get a paginated list of all posts and the scores associated with each post.",
    "relevant APIs": [
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get language by id"
      },
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get all posts"
      },
      {
        "category_name": "Education",
        "tool_name": "thefluentme",
        "api_name": "Get all scores"
      }
    ],
    "query_id": 62568
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Movie Showtimes",
        "api_name": "/api/all",
        "api_description": "Get all the sessions for all the available movies",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Movie Showtimes",
        "api_name": "/api/information",
        "api_description": "Get the sessions for the specified movie (IMDb id)",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "IMDb movie id",
            "default": "tt6105098"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm organizing a movie-themed party and I need to gather all the available movies and their showtimes at Cinemas NOS. Can you provide me with the sessions for all the movies? Additionally, I would like to get more information about a specific movie with the IMDb id 'tt6105098' to create a movie trivia game.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Movie Showtimes",
        "api_name": "/api/all"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Movie Showtimes",
        "api_name": "/api/information"
      }
    ],
    "query_id": 66018
  },
  {
    "api_list": [
      {
        "category_name": "Communication",
        "tool_name": "Wavecell SMS",
        "api_name": "SMS-MT - Send SMS (GET)",
        "api_description": "Send a SMS message using Wavecell HTTP GET",
        "required_parameters": [
          {
            "name": "password",
            "type": "STRING",
            "description": "Your Wavecell Password",
            "default": ""
          },
          {
            "name": "encoding",
            "type": "STRING",
            "description": "The encoding format of the message",
            "default": "ASCII"
          },
          {
            "name": "subaccountid",
            "type": "STRING",
            "description": "Your Wavecell Sub Account ID",
            "default": ""
          },
          {
            "name": "destination",
            "type": "STRING",
            "description": "The destination phone number (MSISDN) to send to. This must be in international format without \"+\" such as 33123456789. 33 is the country code and 123456789 is the mobile number",
            "default": ""
          },
          {
            "name": "body",
            "type": "STRING",
            "description": "The message text",
            "default": ""
          },
          {
            "name": "source",
            "type": "STRING",
            "description": "This is the sender Id the message will appear from, TPOA. Only available on agreed routes with your account manager.",
            "default": ""
          },
          {
            "name": "accountid",
            "type": "STRING",
            "description": "Your Wavecell Account ID",
            "default": ""
          },
          {
            "name": "scheduleddatetime",
            "type": "STRING",
            "description": "Specify this if you wish to schedule your message up to 7 days in advance, to be specified in UTC Time. Specify this parameter blank if you do not want to schedule your message. SET 0 IF NOT REQUIRED",
            "default": ""
          },
          {
            "name": "umid",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Communication",
        "tool_name": "Wavecell SMS",
        "api_name": "Get delivery status",
        "api_description": "This API should be used to retrieve the current delivery status of a message sent using Wavecell.",
        "required_parameters": [
          {
            "name": "AccountID",
            "type": "STRING",
            "description": "Your Wavecell Accountid",
            "default": ""
          },
          {
            "name": "Subaccountid",
            "type": "STRING",
            "description": "Your Wavecell subaccountid",
            "default": ""
          },
          {
            "name": "Password",
            "type": "STRING",
            "description": "Your Wavecell password",
            "default": ""
          },
          {
            "name": "umid",
            "type": "STRING",
            "description": "The Unique Message ID of the SMS for which you want to retrieve the delivery status",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I would like to send an SMS to my friend +11112222333. The message should say 'Congratulations on your promotion!'. Additionally, I need to schedule this message to be sent next week. Can you please confirm the delivery status of this message using the unique message ID?",
    "relevant APIs": [
      {
        "category_name": "Communication",
        "tool_name": "Wavecell SMS",
        "api_name": "SMS-MT - Send SMS (GET)"
      },
      {
        "category_name": "Communication",
        "tool_name": "Wavecell SMS",
        "api_name": "Get delivery status"
      }
    ],
    "query_id": 67007
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Domain SEO Analysis",
        "api_name": "Domain SEO Analysis",
        "api_description": "Get popular SEO metrics for a given domain name",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": "apify.com"
          }
        ],
        "optional_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "Specify the proxy location for the search. Supported countries. 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'",
            "default": "us"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Domain SEO Analysis",
        "api_name": "SERP Analysis",
        "api_description": "SERP Analysis aka keyword overview. Discover thousands of great keyword ideas, analyze their ranking difficulty and calculate their traffic potential.",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "",
            "default": "prenatal vitamins"
          }
        ],
        "optional_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "Specify the proxy location for the search. Supported countries. 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'",
            "default": "us"
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I'm a blogger and I want to optimize my website for better search engine rankings. Can you analyze the SEO metrics for my blog's domain 'myblogwebsite.com' and suggest some high-performing keywords?",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Domain SEO Analysis",
        "api_name": "Domain SEO Analysis"
      },
      {
        "category_name": "Data",
        "tool_name": "Domain SEO Analysis",
        "api_name": "SERP Analysis"
      }
    ],
    "query_id": 68221
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get districts",
        "api_description": "Get districts by providing the country code, region code and city number\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint\n- city_num can be fetch from the Get Cities endpoint",
        "required_parameters": [
          {
            "name": "city_num",
            "type": "string",
            "description": "",
            "default": "151245"
          },
          {
            "name": "region_code",
            "type": "string",
            "description": "",
            "default": "pam"
          },
          {
            "name": "country_code",
            "type": "string",
            "description": "",
            "default": "ph"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "metadata": {
            "totalCount": "int",
            "country_code": "str",
            "region_code": "str",
            "num_code": "str",
            "region_name": "str",
            "country_name": "str"
          },
          "data": [
            {
              "name": "str",
              "region_code": "str",
              "country_code": "str",
              "num_code": "int",
              "type": "str",
              "_list_length": 33
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get cities",
        "api_description": "Get cities by providing the country code and region code\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint",
        "required_parameters": [
          {
            "name": "region_code",
            "type": "string",
            "description": "",
            "default": "abr"
          },
          {
            "name": "country_code",
            "type": "string",
            "description": "",
            "default": "ph"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get region details",
        "api_description": "Get the region details by providing the country code and region code",
        "required_parameters": [
          {
            "name": "region_code",
            "type": "string",
            "description": "",
            "default": "abr"
          },
          {
            "name": "country_code",
            "type": "string",
            "description": "",
            "default": "ph"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get regions",
        "api_description": "Get regions  per country\n\n- country_code can be fetch from Get Countries endpoint.",
        "required_parameters": [
          {
            "name": "country_code",
            "type": "string",
            "description": "",
            "default": "ph"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get country details",
        "api_description": "Get the country details by providing the country code (2 letter code)",
        "required_parameters": [
          {
            "name": "country_code",
            "type": "string",
            "description": "",
            "default": "ph"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get all countries",
        "api_description": "Get all supported countries",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Health Check",
        "api_description": "Provide a way to test connectivity to API",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I am curious about the Philippines. Can you give me information about the regions in the country? Also, provide the cities in the region of Abra and the districts in the city with the code 151245 in Pamplona. Please include the country code 'ph' in the request.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get regions"
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get cities"
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get districts"
      },
      {
        "category_name": "Data",
        "tool_name": "Gis Engine",
        "api_name": "Get country details"
      }
    ],
    "query_id": 68327
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Quarterly Cash Flow",
        "api_description": "Get Company Quarterly Cash Flow",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "",
            "default": "quarterly"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"netIncomeLoss\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalDepreciationAndAmortization\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"changeInAccountsReceivable\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"changeInInventories\": {\"isMain\": \"b"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Quarterly Balance Sheet",
        "api_description": "Get Company Quarterly Balance Sheet",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "",
            "default": "quarterly"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"cashOnHand\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"receivables\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"inventory\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"prePaidExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"NoneType\", \"fiveYrChage\": \"NoneType\", \"tenYrChange\": \"NoneType\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"totalCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiv"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Quarterly Income Statement",
        "api_description": "Get Company Income Statement",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "",
            "default": "quarterly"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"revenue\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"costOfGoodsSold\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"grossProfit\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"researchAndDevelopmentExpenses\": \"NoneType\", \"sgAndAExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 57}]}, \"otherOperatingIncomeOrExpenses\": \"NoneType\", \"operatingExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_l"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Quarterly  Ratios",
        "api_description": "Get Company Ratios Latest Data",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "",
            "default": "quarterly"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"currentRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"longTermDebtCapital\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"debtEquityRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"grossMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"operatingMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 57}]}, \"EBITMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"f"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Ratios",
        "api_description": "Get Company ratios latest data",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"currentRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"longTermDebtCapital\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"debtEquityRatio\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"grossMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"operatingMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"float\", \"_list_length\": 14}]}, \"EBITMargin\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"f"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Cash Flow",
        "api_description": "Get company cash flow latest data.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"netIncomeLoss\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalDepreciationAndAmortization\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalNonCashItems\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"changeInAccountsReceivable\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"changeInInventories\": {\"isMain\": \"b"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Balance Sheet",
        "api_description": "Get Company latest data for balance sheet",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"cashOnHand\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"receivables\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"inventory\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"prePaidExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"NoneType\", \"fiveYrChage\": \"NoneType\", \"tenYrChange\": \"int\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"NoneType\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"totalCurrentAssets\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveY"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Income Statement",
        "api_description": "Get Company Income Statement",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "",
            "default": "googl"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"id\": \"str\", \"symbol\": \"str\", \"format\": \"str\", \"revenue\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"costOfGoodsSold\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"grossProfit\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"researchAndDevelopmentExpenses\": \"NoneType\", \"sgAndAExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_length\": 14}]}, \"otherOperatingIncomeOrExpenses\": \"NoneType\", \"operatingExpenses\": {\"isMain\": \"bool\", \"twoYrChange\": \"float\", \"fiveYrChage\": \"float\", \"tenYrChange\": \"float\", \"dates\": [{\"date\": \"str\", \"value\": \"int\", \"_list_l"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get All Symbols",
        "api_description": "Get all available symbols in API",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "result": [
            "list of str with length 6387"
          ]
        }
      }
    ],
    "query": "My friend is interested in investing in stocks and wants to know more about Google. Can you fetch the quarterly cash flow, balance sheet, income statement, and ratios for Google? It would be great to have data on net income, total assets, revenue, and current ratio to assess the company's financial health.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Quarterly Cash Flow"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Quarterly Balance Sheet"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finance Data",
        "api_name": "Get Company Quarterly Income Statement"
      }
    ],
    "query_id": 70610
  },
  {
    "api_list": [
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Game Name",
        "api_description": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "xqcow"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Mature Content Status",
        "api_description": "Get Stream Mature Content Status (using username or id)\n( return an empty JSON object if not currently LIVE )",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "julie"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Number of Viewers",
        "api_description": "Get Stream Number of Viewers (using username or id)\n( return an empty JSON object if not currently LIVE )",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "pepipin"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get All Active Stream Infos",
        "api_description": "Get a Stream Informations if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "Username or Id can be used as UserId",
            "default": "asmongold"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Language",
        "api_description": "Get Stream Language (using username or id)\n( return an empty JSON object if not currently LIVE )",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "xqcow"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get All Channel Infos",
        "api_description": "Get Channel Infos (by username or id)",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "samueletienne"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "login": "str",
          "display_name": "str",
          "type": "str",
          "broadcaster_type": "str",
          "description": "str",
          "profile_image_url": "str",
          "offline_image_url": "str",
          "view_count": "int",
          "created_at": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Channel Description",
        "api_description": "Get Channel Description (using username or id)",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "julie"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "description": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Channel Total Views",
        "api_description": "Get Channel Cumulated Views since its creation (using username or id)",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "julie"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "total_views": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Channel Broadcaster Type",
        "api_description": "Get Channel Broadcaster Type (using username or id)",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "julie"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "broadcaster_type": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Title",
        "api_description": "Get Stream Title (using username or id)\n( return an empty JSON object if not currently LIVE )",
        "required_parameters": [
          {
            "name": "userId",
            "type": "string",
            "description": "",
            "default": "xqcow"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm curious about the stream details for asmongold. Can you fetch the stream information including the game name, number of viewers, language, and stream title? Additionally, please let me know if the stream contains mature content.",
    "relevant APIs": [
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get All Active Stream Infos"
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Game Name"
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Number of Viewers"
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Language"
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Mature Content Status"
      },
      {
        "category_name": "Social",
        "tool_name": "gwyo-twitch",
        "api_name": "Get Stream Title"
      }
    ],
    "query_id": 73529
  },
  {
    "api_list": [
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Hashtag by Name",
        "api_description": "Gets a Hashtag by Name",
        "required_parameters": [
          {
            "name": "name",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Location by Id",
        "api_description": "Gets a location by Id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Story by URL",
        "api_description": "Gets a story by URL",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Story by Id",
        "api_description": "Gets a story by Id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Media by URL",
        "api_description": "Get a media by URL",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Media by Code",
        "api_description": "Get a media by code",
        "required_parameters": [
          {
            "name": "code",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Media by Id",
        "api_description": "Get a media by Id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "User by Username",
        "api_description": "Get a user by username",
        "required_parameters": [
          {
            "name": "username",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "User by Id",
        "api_description": "Get user by Id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "detail": "str",
          "exc_type": "str"
        }
      }
    ],
    "query": "Can you provide me with the hashtag details for the hashtag 'foodie'? Additionally, fetch the story associated with the URL 'https://instagram.com/stories/story1'.",
    "relevant APIs": [
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Hashtag by Name"
      },
      {
        "category_name": "Social",
        "tool_name": "Instagram API",
        "api_name": "Story by URL"
      }
    ],
    "query_id": 73762
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Domain Info",
        "api_name": "Full information",
        "api_description": "This endpoint returns the full information on the domain.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "isAvailable": "bool"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Domain Info",
        "api_name": "Check domain info",
        "api_description": "This endpoint returns the domain information.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "isAvailable": "bool"
        }
      }
    ],
    "query": "I need to gather comprehensive information about the domain 'exampledomain.com'. Can you provide me with its availability status and complete details?",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Domain Info",
        "api_name": "Full information"
      },
      {
        "category_name": "Data",
        "tool_name": "Domain Info",
        "api_name": "Check domain info"
      }
    ],
    "query_id": 76957
  },
  {
    "api_list": [
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetRelatedChannels",
        "api_description": "",
        "required_parameters": [
          {
            "name": "category",
            "type": "STRING",
            "description": "Category name",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "json or xml or php",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetVideoFromUser",
        "api_description": "Get all videos credited to a user (both uploaded and appears).",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/xml/php",
            "default": ""
          },
          {
            "name": "user_id",
            "type": "STRING",
            "description": "The ID number or username of the user. A token may be used instead.",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "sort",
            "type": "STRING",
            "description": "Method to sort by: newest, oldest, most_played, most_commented, or most_liked.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "STRING",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          },
          {
            "name": "summary_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back more information.",
            "default": ""
          },
          {
            "name": "full_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back the full video information.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetVideosByTag",
        "api_description": "Get a list of videos that have the specified tag.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/php/xml",
            "default": ""
          },
          {
            "name": "tag",
            "type": "STRING",
            "description": "The tag to get",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Page number to show",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "STRING",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          },
          {
            "name": "summary_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back more information.",
            "default": ""
          },
          {
            "name": "full_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back the full video information.",
            "default": ""
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
            "default": "most_commented"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetAllChannels",
        "api_description": "Get a list of all public channels.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/xml/php",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "STRING",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "sort",
            "type": "STRING",
            "description": "Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated.",
            "default": "most_recently_updated"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetChannelVideos",
        "api_description": "Get a list of the videos in a channel.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/xml/php",
            "default": ""
          },
          {
            "name": "channel_id",
            "type": "STRING",
            "description": "The numeric id of the channel or its url name.",
            "default": ""
          },
          {
            "name": "full_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back the full video information",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "user_id",
            "type": "STRING",
            "description": "The ID number or username of the user. A token may be used instead.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "",
            "default": "Number of items to show on each page. Max 50."
          },
          {
            "name": "summary_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back more information.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetRelatedTags",
        "api_description": "Get a list of related tags for a category.",
        "required_parameters": [
          {
            "name": "category",
            "type": "STRING",
            "description": "The Name of category",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "json or xml or php",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "SearchVideos",
        "api_description": "Search for videos.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/xml/php",
            "default": ""
          },
          {
            "name": "query",
            "type": "STRING",
            "description": "The search terms",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "user_id",
            "type": "STRING",
            "description": "The ID number or username of the user.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          },
          {
            "name": "summary_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back more information.",
            "default": ""
          },
          {
            "name": "full_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back the full video information.",
            "default": ""
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetChannelInfo",
        "api_description": "Get the information on a single channel.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/xml/php",
            "default": ""
          },
          {
            "name": "channel_id",
            "type": "STRING",
            "description": "The numeric id of the channel or its url name.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetRelatedPeople",
        "api_description": "Get a list of related people for a category.",
        "required_parameters": [
          {
            "name": "category",
            "type": "STRING",
            "description": "The name of the category.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "json or xml or php",
            "default": "json"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "generated_in": "str",
          "stat": "str",
          "err": {
            "code": "str",
            "expl": "str",
            "msg": "str"
          }
        }
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetVideosComment",
        "api_description": "Get a list of the comments on a video.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/php/xml",
            "default": ""
          },
          {
            "name": "video_id",
            "type": "STRING",
            "description": "The ID of the video.",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I'm a film student doing research on videos with the tag 'animation'. Can you provide me with videos that have this tag? I would like to see the most commented videos first.",
    "relevant APIs": [
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetVideosByTag"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "SearchVideos"
      }
    ],
    "query_id": 77514
  },
  {
    "api_list": [
      {
        "category_name": "Travel",
        "tool_name": "Airports Finder",
        "api_name": "Get Airports By Coordinates",
        "api_description": "The \"Get Airports By Coordinates\" API enables you to retrieve a list of airports based on specific latitude and longitude coordinates. By providing the latitude and longitude values, this API returns comprehensive details about airports located within that vicinity. This information includes airport names, IATA codes, locations, and additional relevant data.",
        "required_parameters": [
          {
            "name": "lon",
            "type": "string",
            "description": "",
            "default": "-97.0409"
          },
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": "32.9222"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Travel",
        "tool_name": "Airports Finder",
        "api_name": "Get Airports By Country",
        "api_description": "The \"Get Airports By Country\" API allows you to easily retrieve a list of airports based on a specific country. This API provides comprehensive details about airports, including their names, IATA codes, locations, and additional information.",
        "required_parameters": [
          {
            "name": "country",
            "type": "string",
            "description": "",
            "default": "United States"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airports Finder",
        "api_name": "Get Airports By City",
        "api_description": "The \"Get Airports By City\" API enables you to effortlessly retrieve a list of airports based on a specific city. This API provides comprehensive details about airports, including their names, IATA codes, locations, and additional information.",
        "required_parameters": [
          {
            "name": "city",
            "type": "string",
            "description": "",
            "default": "dallas"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airports Finder",
        "api_name": "Get Airport Details By Code",
        "api_description": "The \"Get Airport Details By Code\" API allows you to quickly retrieve comprehensive information about airports based on their IATA codes. Obtain precise details such as airport names, locations, time zones, and more with this efficient and reliable API.",
        "required_parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "",
            "default": "DFW"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My family and I are planning a trip to Dallas and we need to know the airport details for the city. Can you provide us with a list of airports in Dallas along with their names, IATA codes, locations, and additional information? Additionally, we would like to know the details of the airport with the IATA code 'DFW'.",
    "relevant APIs": [
      {
        "category_name": "Travel",
        "tool_name": "Airports Finder",
        "api_name": "Get Airports By City"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airports Finder",
        "api_name": "Get Airport Details By Code"
      }
    ],
    "query_id": 79620
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Extreme Data",
        "api_description": "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL.",
        "required_parameters": [
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "apiKey",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "datum",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Sea-level Data",
        "api_description": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.",
        "required_parameters": [
          {
            "name": "params",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "apiKey",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "datum",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "GET Astronomy Data",
        "api_description": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.",
        "required_parameters": [
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Station Area Data",
        "api_description": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.",
        "required_parameters": [
          {
            "name": "botLng",
            "type": "string",
            "description": "",
            "default": "Bottom right Lng"
          },
          {
            "name": "apiKey",
            "type": "string",
            "description": "",
            "default": "Stormglass API Key"
          },
          {
            "name": "topLng",
            "type": "string",
            "description": "",
            "default": "Top left Lng"
          },
          {
            "name": "topLat",
            "type": "string",
            "description": "",
            "default": "Top left Lat"
          },
          {
            "name": "botLat",
            "type": "string",
            "description": "",
            "default": "Bottom right  Lat"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a beach photographer and I need to plan my shoots based on tides and sunrise/sunset timings. Can you provide me with the tide extreme data and the sunrise and sunset timings for the coordinates 35.6895° N, 139.6917° E for the next week? Additionally, I'd like to retrieve the sea level data for the same location.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Extreme Data"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "GET Astronomy Data"
      }
    ],
    "query_id": 80884
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "[Embedded signing] Get role ids",
        "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It’s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get field and field invite id",
        "api_description": "The endpoint returns field and field invite ids.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "id of the document",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get role ids",
        "api_description": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It’s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
        "required_parameters": [
          {
            "name": "document_id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get signing links",
        "api_description": "The endpoint allows to get all existing signing links and IDs of these signing links.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str",
          "code": "int"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get role ids for template",
        "api_description": "The endpoint allows to get role ids for a template.",
        "required_parameters": [
          {
            "name": "template_id",
            "type": "string",
            "description": "ID of the template.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "404": "str"
        }
      }
    ],
    "query": "I need to retrieve the details of a specific document with the ID 'abc123'. Please provide me with the document metadata, fields, signatures, and invites.",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "[Embedded signing] Get role ids"
      },
      {
        "category_name": "Business",
        "tool_name": "SignNow",
        "api_name": "Get field and field invite id"
      }
    ],
    "query_id": 83742
  },
  {
    "api_list": [
      {
        "category_name": "Food",
        "tool_name": "Nutrition by API-Ninjas",
        "api_name": "/v1/nutrition",
        "api_description": "API Ninjas Nutrition API endpoint.",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "Query text to extract nutrition information (e.g. **bacon and 3 eggs**).",
            "default": "1lb brisket with fries"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "calories": "float",
          "serving_size_g": "float",
          "fat_total_g": "float",
          "fat_saturated_g": "float",
          "protein_g": "float",
          "sodium_mg": "int",
          "potassium_mg": "int",
          "cholesterol_mg": "int",
          "carbohydrates_total_g": "float",
          "fiber_g": "float",
          "sugar_g": "float"
        }
      }
    ],
    "query": "I'm planning a family dinner and I need to know the nutrition information for a recipe. Can you extract the nutrition data for a dish that includes 2 pounds of chicken, 1 cup of rice, and 3 tablespoons of olive oil?",
    "relevant APIs": [
      {
        "category_name": "Food",
        "tool_name": "Nutrition by API-Ninjas",
        "api_name": "/v1/nutrition"
      }
    ],
    "query_id": 88193
  },
  {
    "api_list": [
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "categories/list",
        "api_description": "List categories and their recursive children categories if available",
        "required_parameters": [
          {
            "name": "caid",
            "type": "NUMBER",
            "description": "The value of categoryId fields returned right in this endpoint. The default root category is 214970.",
            "default": "214970"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "reviews/list",
        "api_description": "List reviews relating to specific product",
        "required_parameters": [
          {
            "name": "sku",
            "type": "STRING",
            "description": "The value of sku fields returned in .../products/list or .../products/search endpoint.",
            "default": "W004939121"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "For paging purpose",
            "default": "1"
          },
          {
            "name": "star",
            "type": "STRING",
            "description": "Leave empty or  1 to 5",
            "default": ""
          },
          {
            "name": "sort_order",
            "type": "STRING",
            "description": "One of the following : RELEVANCE|HELPFUL|DATE&#95;ASCENDING|DATE&#95;DESCENDING|IMAGE|RATING&#95;DESCENDING|RATING&#95;ASCENDING",
            "default": "RELEVANCE"
          }
        ],
        "method": "GET",
        "template_response": {
          "summary": {
            "request_id": "str",
            "transaction_id": "str",
            "page_type": "str",
            "response_hash": "str",
            "response_matches_prior_hash": "bool",
            "cache_seconds": "int",
            "cache_always_check_server": "bool",
            "spv_custom_vars": "str"
          },
          "response": {
            "data": {
              "product": {
                "customer_reviews": {
                  "sku": "str",
                  "average_rating_value": "float",
                  "rating_count": "int",
                  "histogram_stats": [
                    {
                      "rating": "int",
                      "count": "int",
                      "_list_length": 5
                    }
                  ],
                  "reviews": [
                    {
                      "is_kit_child": "bool",
                      "review_id": "int",
                      "rating": "int",
                      "date": "str",
                      "has_verified_buyer_status": "bool",
                      "reviewer_name": "str",
                      "reviewer_location": "str",
                      "headline": "str",
                      "product_comments": "str",
                      "has_customer_photos": "bool",
                      "language_code": "str",
                      "review_helpful": "int",
                      "reviewer_badge_id": "int",
                      "reviewer_badge_text": "str",
                      "customer_photos": [
                        {
                          "src": "str",
                          "ire_id": "int",
                          "_list_length": 1
                        }
                      ],
                      "_list_length": 10
                    }
                  ]
                }
              }
            }
          }
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "products/list",
        "api_description": "List products with filters and options",
        "required_parameters": [
          {
            "name": "categoryId",
            "type": "NUMBER",
            "description": "The value of categoryId fields returned in .../categories/list endpoint",
            "default": "45974"
          }
        ],
        "optional_parameters": [
          {
            "name": "currentZipCode",
            "type": "STRING",
            "description": "The postal code to get near available products.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "For paging purpose",
            "default": "1"
          },
          {
            "name": "itemsPerPage",
            "type": "NUMBER",
            "description": "For paging purpose",
            "default": "48"
          },
          {
            "name": "sortId",
            "type": "NUMBER",
            "description": "Check availableSorts field returned right in this endpoint for suitable sortId",
            "default": ""
          },
          {
            "name": "filterStringUnencoded",
            "type": "STRING",
            "description": "The value of filterStringUnencoded fields returned right in this endpoint to filter products, pass this parameter multiple times for multiple filters. Ex : ...&filterStringUnencoded=a1234567890~2147483646&filterStringUnencoded=at&#95;style~Tiffany&...",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"summary\": {\"request_id\": \"str\", \"transaction_id\": \"str\", \"page_type\": \"str\", \"response_hash\": \"str\", \"response_matches_prior_hash\": \"bool\", \"cache_seconds\": \"int\", \"cache_always_check_server\": \"bool\", \"spv_custom_vars\": \"str\"}, \"response\": {\"data\": {\"category\": {\"category_id\": \"str\", \"name\": \"str\", \"class_id\": \"int\", \"browse\": {\"roadsign\": \"str\", \"postalCode\": \"str\", \"pagination\": {\"currentPage\": \"int\", \"totalNumberOfPages\": \"int\"}, \"sort\": {\"appliedSort\": {\"id\": \"int\", \"name\": \"str\"}, \"availableSorts\": [{\"id\": \"int\", \"name\": \"str\", \"_list_length\": 4}]}, \"currentFilterString\": \"str\", \"productCount\": \"int\", \"products\": [{\"sku\": \"str\", \"name\": \"str\", \"url\": \"str\", \"leadImage\": {\"id\": \"int\"}, \"percent_sold\": \"int\", \"promo_text\": \"str\", \"banner_type\": \"int\", \"special_sku_type\": \"int\", \"manufacturer\": {\"name\": \"str\", \"shortName\": \"str\"}, \"hasReturnSale\": \"bool\", \"inventory\": {\"stockStatus\": \"str\"}, \"pricing\": {\"customerPrice\": {\"unitPrice\": {\"value\": \"float\"}, \"appliedPromotion\": \"str\"}, "
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "products/search",
        "api_description": "Search for products by term or phrase",
        "required_parameters": [
          {
            "name": "keyword",
            "type": "STRING",
            "description": "Any term or phrase to look for relating products",
            "default": "light shaded room"
          }
        ],
        "optional_parameters": [
          {
            "name": "filters",
            "type": "STRING",
            "description": "The value of filter&#95;string&#95;unencoded fields returned right in this endpoint to filter products, pass this parameter multiple times for multiple filters. Ex : ...&filters=colorList~White&filters=masterClID~180&...",
            "default": ""
          },
          {
            "name": "curpage",
            "type": "NUMBER",
            "description": "For paging purpose",
            "default": "1"
          },
          {
            "name": "itemsperpage",
            "type": "NUMBER",
            "description": "For paging purpose",
            "default": "48"
          },
          {
            "name": "sortby",
            "type": "NUMBER",
            "description": "The value of sort_value fields returned right in this endpoint. Default is 0",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": "{\"summary\": {\"request_id\": \"str\", \"transaction_id\": \"str\", \"page_type\": \"str\", \"response_hash\": \"str\", \"response_matches_prior_hash\": \"bool\", \"cache_seconds\": \"int\", \"cache_always_check_server\": \"bool\", \"spv_custom_vars\": \"str\"}, \"response\": {\"schema_id\": \"str\", \"keyword\": \"str\", \"product_count\": \"int\", \"product_collection\": [{\"schema_id\": \"str\", \"average_overall_rating\": \"float\", \"is_b2b_exclusive\": \"bool\", \"is_eligible_for_designer_commission\": \"bool\", \"b_has_list_price\": \"bool\", \"is_return_sales\": \"bool\", \"free_ship_text\": \"str\", \"has_stock\": \"bool\", \"image_url\": \"str\", \"selected_image_model\": {\"schema_id\": \"str\", \"id\": \"int\", \"raw_id\": \"int\", \"name\": \"str\", \"width\": \"int\", \"height\": \"int\"}, \"image_resource_id\": \"str\", \"selected_image_id\": \"str\", \"list_price\": \"float\", \"manufacturer_id\": \"int\", \"manufacturer_name\": \"str\", \"name\": \"str\", \"number_of_reviews\": \"int\", \"num_star_ratings\": \"int\", \"option_category_count\": \"int\", \"color_option_count\": \"int\", \"size_option_count\": \"int\", \"oth"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "products/detail",
        "api_description": "Get detail information of specific product",
        "required_parameters": [
          {
            "name": "sku",
            "type": "STRING",
            "description": "The value of sku fields returned in .../products/list or .../products/search endpoint.",
            "default": "W003247135"
          }
        ],
        "optional_parameters": [
          {
            "name": "wfProductOptions",
            "type": "STRING",
            "description": "The value of id fields under relevantAttributes JSON object returned right in this endpoint, pass this parameter multiple time for multiple options. Ex : ...&wfProductOptions=1234567890&wfProductOptions=special_offers&...",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"summary\": {\"request_id\": \"str\", \"transaction_id\": \"str\", \"page_type\": \"str\", \"response_hash\": \"str\", \"response_matches_prior_hash\": \"bool\", \"cache_seconds\": \"int\", \"cache_always_check_server\": \"bool\", \"spv_custom_vars\": \"str\"}, \"response\": {\"data\": {\"product\": {\"hasOptionPartImagery\": \"bool\", \"has_return_sale\": \"bool\", \"is_customized\": \"bool\", \"is_kit\": \"bool\", \"is_composite_sku\": \"bool\", \"sale_banner\": \"str\", \"event_id\": \"NoneType\", \"name\": \"str\", \"isCustomProduct\": \"bool\", \"promo_text\": \"str\", \"special_sku_type\": \"int\", \"price_restriction_text\": \"str\", \"selected_image_model\": {\"image_source\": \"str\", \"product_image_type\": \"int\"}, \"has_price_restriction\": \"bool\", \"is_general_electric_product\": \"bool\", \"inventory\": {\"stockStatus\": \"str\", \"available_quantity\": \"int\", \"display_quantity\": \"int\", \"backInStockDate\": \"str\", \"backInStockText\": \"str\", \"out_of_stock_ordering_mode\": \"str\", \"isCustomLogisticsProduct\": \"bool\"}, \"default_options\": [\"list of int with length 1\"], \"giftWithPurchase\":"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "auto-complete",
        "api_description": "Get auto suggestions by term or phrase",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "Any term or phrase that you are familiar with",
            "default": "red pillow"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "summary": {
            "request_id": "str",
            "transaction_id": "str",
            "page_type": "str",
            "response_hash": "str",
            "response_matches_prior_hash": "bool",
            "cache_seconds": "int",
            "cache_always_check_server": "bool",
            "spv_custom_vars": "str"
          },
          "response": [
            {
              "schema_id": "str",
              "value": "str",
              "type": "str",
              "first_in_section": "bool",
              "is_reform": "bool",
              "keyword": "bool",
              "_list_length": 9
            }
          ]
        }
      }
    ],
    "query": "I'm a blogger and I want to write a detailed review of a specific product with SKU W003247135. Can you provide me with all the information about this product, including images, pricing, and customer reviews?",
    "relevant APIs": [
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "products/detail"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Wayfair",
        "api_name": "reviews/list"
      }
    ],
    "query_id": 1617
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings History",
        "api_description": "Get earnings history.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "29/06/2022": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          },
          "29/09/2022": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          },
          "30/03/2023": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          },
          "30/12/2022": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Estimate",
        "api_description": "Get earnings estimate.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          },
          "Current year (2023)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          },
          "Next qtr. (Sep 2023)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          },
          "Next year (2024)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Revisions",
        "api_description": "Get earnings revisions.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          },
          "Current year (2023)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          },
          "Next qtr. (Sep 2023)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          },
          "Next year (2024)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Trend",
        "api_description": "Get earnings trend.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          },
          "Current year (2023)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          },
          "Next qtr. (Sep 2023)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          },
          "Next year (2024)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Growth Estimate",
        "api_description": "Get growth estimate.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "AAPL": {
            "Current qtr.": "str",
            "Current year": "str",
            "Next 5 years (per annum)": "str",
            "Next qtr.": "str",
            "Next year": "str",
            "Past 5 years (per annum)": "str"
          },
          "Industry": {
            "Current qtr.": "float",
            "Current year": "float",
            "Next 5 years (per annum)": "float",
            "Next qtr.": "float",
            "Next year": "float",
            "Past 5 years (per annum)": "float"
          },
          "S&P 500": {
            "Current qtr.": "float",
            "Current year": "float",
            "Next 5 years (per annum)": "float",
            "Next qtr.": "float",
            "Next year": "float",
            "Past 5 years (per annum)": "float"
          },
          "Sector(s)": {
            "Current qtr.": "float",
            "Current year": "float",
            "Next 5 years (per annum)": "float",
            "Next qtr.": "float",
            "Next year": "float",
            "Past 5 years (per annum)": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Key Statistics",
        "api_description": "Get key statistics.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"% held by insiders \": {\"Value\": \"str\"}, \"% held by institutions \": {\"Value\": \"str\"}, \"200-day moving average \": {\"Value\": \"str\"}, \"5-year average dividend yield \": {\"Value\": \"str\"}, \"50-day moving average \": {\"Value\": \"str\"}, \"52-week change \": {\"Value\": \"str\"}, \"52-week high \": {\"Value\": \"str\"}, \"52-week low \": {\"Value\": \"str\"}, \"Avg vol (10-day) \": {\"Value\": \"str\"}, \"Avg vol (3-month) \": {\"Value\": \"str\"}, \"Beta (5Y monthly)\": {\"Value\": \"str\"}, \"Book value per share (mrq)\": {\"Value\": \"str\"}, \"Current ratio (mrq)\": {\"Value\": \"str\"}, \"Diluted EPS (ttm)\": {\"Value\": \"str\"}, \"Dividend date \": {\"Value\": \"str\"}, \"EBITDA\": {\"Value\": \"str\"}, \"Enterprise value\": {\"Value\": \"str\"}, \"Enterprise value/EBITDA\": {\"Value\": \"str\"}, \"Enterprise value/revenue\": {\"Value\": \"str\"}, \"Ex-dividend date \": {\"Value\": \"str\"}, \"Fiscal year ends\": {\"Value\": \"str\"}, \"Float \": {\"Value\": \"str\"}, \"Forward P/E\": {\"Value\": \"str\"}, \"Forward annual dividend rate \": {\"Value\": \"str\"}, \"Forward annual dividend yield \": {\"Va"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Revenue Estimate",
        "api_description": "Get revenue estimate.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          },
          "Current year (2023)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          },
          "Next qtr. (Sep 2023)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          },
          "Next year (2024)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Company Description",
        "api_description": "Get company description.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I work for a finance company and we need to analyze the earnings history and estimate for a particular stock. Can you provide us with the earnings history and estimate for the ticker symbol 'AAPL'?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings History"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Estimate"
      }
    ],
    "query_id": 3007
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/index-trend",
        "api_description": "Get index trend earnings history information for a particular stock",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/cashflow-statement",
        "api_description": "Get stock cash flow statements.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/profile",
        "api_description": "Get stock profile information such as company name, descriptions, website, etc...",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/calendar-events",
        "api_description": "Get stock calendar events.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/balance-sheet",
        "api_description": "Get stock balance sheet data.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/recommendation-trend",
        "api_description": "Get stock recommendations and trends.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/net-share-purchase-activity",
        "api_description": "Get net share purchase activity information for a particular stock",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/institution-ownership",
        "api_description": "Get stock institution ownership.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/sec-filings",
        "api_description": "Get stock SEC filings.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/earnings",
        "api_description": "Get earnings information for a particular stock",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "Let's say I'm a financial consultant working with a client who wants to invest in Apple Inc. I need to provide them with a comprehensive overview of the company's financials. Can you assist me by gathering the asset profile, recommendation trends, net share purchase activity, and earnings information for Apple Inc.?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/profile"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/recommendation-trend"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/net-share-purchase-activity"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/earnings"
      }
    ],
    "query_id": 3221
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Nearby - (ArcGIS)",
        "api_description": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50.",
        "required_parameters": [
          {
            "name": "lng",
            "type": "NUMBER",
            "description": "Longitude",
            "default": "-123.0413988"
          },
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "Latitude",
            "default": "49.2803703"
          }
        ],
        "optional_parameters": [
          {
            "name": "radius",
            "type": "NUMBER",
            "description": "**Meters**\nDefault: 200\nMaximum: 50000",
            "default": "500"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Default: 'coffee shop'",
            "default": "coffee shop"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "results": [
            {
              "location": {
                "lat": "str",
                "lng": "str"
              },
              "name": "str",
              "address": "str",
              "phone": "str",
              "distanceMeter": "str",
              "_list_length": 3
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Nearby - (Google)",
        "api_description": "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20.",
        "required_parameters": [
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "Latitude",
            "default": "49.283030"
          },
          {
            "name": "lng",
            "type": "NUMBER",
            "description": "Longitude",
            "default": "-123.118990"
          }
        ],
        "optional_parameters": [
          {
            "name": "type",
            "type": "STRING",
            "description": "Default is **cafe**.",
            "default": "cafe"
          },
          {
            "name": "radius",
            "type": "NUMBER",
            "description": "**Meters**\nDefault: 200\nMax: 50000",
            "default": "200"
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "place_id": "str",
          "location": {
            "lat": "float",
            "lng": "float"
          },
          "address": "str",
          "rating": "int",
          "distanceMeter": "float"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Types - (Google)",
        "api_description": "Get a list of establishment types.\n\nThese types will only work with **/nearby (Google)**.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Random (Google)",
        "api_description": "Return a random place nearby.",
        "required_parameters": [
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "Latitude",
            "default": "49.2803703"
          },
          {
            "name": "lng",
            "type": "NUMBER",
            "description": "Longitude",
            "default": "-123.0413988"
          }
        ],
        "optional_parameters": [
          {
            "name": "type",
            "type": "STRING",
            "description": "Default: 'cafe'",
            "default": "cafe"
          },
          {
            "name": "radius",
            "type": "NUMBER",
            "description": "**Meters**\nDefault: 200\nMax: 50000\n",
            "default": "500"
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "place_id": "str",
          "location": {
            "lat": "float",
            "lng": "float"
          },
          "rating": "float",
          "address": "str",
          "distanceMeter": "float"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Place Details - (Google)",
        "api_description": "Get contact and opening hours for a place.\n\nRequires a **place id** provided by **/nearby (Google)**.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Place ID.\nThis value can be retrieved from */nearby* or */random* endpoints.",
            "default": "ChIJCxzX9tpwhlQRIFVwULOI2FM"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "place_id": "str",
          "location": {
            "lat": "float",
            "lng": "float"
          },
          "address": "str",
          "types": [
            "list of str with length 5"
          ],
          "map_url": "str",
          "phone": "str",
          "opening_hours": {
            "open_now": "bool",
            "periods": [
              {
                "close": {
                  "day": "int",
                  "time": "str"
                },
                "open": {
                  "day": "int",
                  "time": "str"
                },
                "_list_length": 4
              }
            ],
            "weekday_text": [
              "list of str with length 7"
            ]
          },
          "website": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Types - (ArcGIS)",
        "api_description": "Types (categories) of establishments. These types will only work with **/v2/nearby (ArcGIS)**.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I'm organizing a company team-building event and we need to find nearby places to engage in outdoor activities. Please fetch a list of parks, sports complexes, and adventure centers within a 1-kilometer radius of our office. It would be great if you could include their names, addresses, and distance from our location.",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Nearby - (ArcGIS)"
      },
      {
        "category_name": "Location",
        "tool_name": "Nearby Places",
        "api_name": "Nearby - (Google)"
      }
    ],
    "query_id": 14198
  },
  {
    "api_list": [
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "OfferInfo",
        "api_description": "get offer data",
        "required_parameters": [
          {
            "name": "joburl",
            "type": "STRING",
            "description": "",
            "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "SearchOffers",
        "api_description": "get all offers url",
        "required_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "Secretary"
          },
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "Frankfurt"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "nextOffset": "int",
          "currentOffset": "str",
          "offers": [
            "list of str with length 10"
          ]
        }
      }
    ],
    "query": "I'm planning to relocate to Frankfurt and I'm looking for a job as a Secretary. Can you provide me with a list of job offers in Frankfurt? Also, could you give me more details about a specific job offer using its URL?",
    "relevant APIs": [
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "SearchOffers"
      },
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "OfferInfo"
      }
    ],
    "query_id": 15058
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "Ticketbud",
        "api_name": "Tickets for an Event",
        "api_description": "All tickets for an event that you have access to",
        "required_parameters": [
          {
            "name": "event_id",
            "type": "STRING",
            "description": "The unique identifier of the event.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Ticketbud",
        "api_name": "A Single Ticket",
        "api_description": "Information about a single ticket.",
        "required_parameters": [
          {
            "name": "event_id",
            "type": "STRING",
            "description": "Unique identifier of the event.",
            "default": ""
          },
          {
            "name": "id",
            "type": "STRING",
            "description": "Unique identifier of the ticket.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Ticketbud",
        "api_name": "A Single Event",
        "api_description": "Information about a single event you have access to",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "The unique identifier of the event",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Ticketbud",
        "api_name": "Your Events",
        "api_description": "A list of events owned or accessible by the current token holder",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Ticketbud",
        "api_name": "Me",
        "api_description": "Information about the current token holder",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "user": "NoneType"
        }
      }
    ],
    "query": "I would like to know more details about an event with the ID 'EVT12345'. Could you provide me with information about the event and all the tickets available for purchase?",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "Ticketbud",
        "api_name": "A Single Event"
      },
      {
        "category_name": "Business",
        "tool_name": "Ticketbud",
        "api_name": "Tickets for an Event"
      }
    ],
    "query_id": 16700
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "Get forecastdata by lat/lon",
        "api_description": "get forecast for 14 days for the location Lat/Lon",
        "required_parameters": [
          {
            "name": "LAT",
            "type": "NUMBER",
            "description": "Latitude",
            "default": "51.5"
          },
          {
            "name": "LON",
            "type": "NUMBER",
            "description": "Longitude",
            "default": "-0.6"
          }
        ],
        "optional_parameters": [
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,de,nl,fr,pl,gr,it,cn,ru,cz,pt,es]",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": {
            "city": "str",
            "country": "str",
            "country_name": "str",
            "tz_long": "str",
            "lat": "str",
            "lon": "str",
            "wmo": "str",
            "SI": "str",
            "SIU": "str",
            "CEL": "str"
          },
          "ActualsYesterday": [
            {
              "Tmax": "str",
              "Tmin": "str",
              "sunshine_hours": "str",
              "symbol": "str",
              "symbol_text": "str",
              "TIME": {
                "year": "str",
                "mon": "str",
                "mday": "str",
                "weekday": "str"
              },
              "_list_length": 1
            }
          ],
          "6_hourly_forecast": [
            {
              "FCTTIME": "str",
              "symbol": "str",
              "symbol_text": "str",
              "temp": "str",
              "tdew": "str",
              "rh": "str",
              "pres": "str",
              "wind_bft": "str",
              "wind": "str",
              "wind_direction": "str",
              "wind_direction_dez": "str",
              "wind_gust": "str",
              "rain": "str",
              "rain_chance_0.3mm": "str",
              "_list_length": 57
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "List of all Countries",
        "api_description": "List of all Countries",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,fr,de,nl,es,pt,pl,tr,gr,tr,cn]",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "Countries": [
            {
              "COUNTRY": "str",
              "name": "str",
              "_list_length": 278
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "List of cities in one Country",
        "api_description": "List of cities in one Country",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,fr,pl,pt,es,it,gr,tr,ru,cn,cz]",
            "default": "en"
          },
          {
            "name": "COUNTRY",
            "type": "STRING",
            "description": "Country",
            "default": "UK"
          }
        ],
        "method": "GET",
        "template_response": {
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": {
            "country": "str",
            "countryname": "str",
            "NumberOfCity": "str"
          },
          "Cities": [
            {
              "wmo": "str",
              "name": "str",
              "latitude": "str",
              "longitude": "str",
              "countryCode": "str",
              "_list_length": 700
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "Search location by Name or zip code",
        "api_description": "Search location by Name or zip code and get the key for the forecast",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "ZIPCODE",
            "type": "STRING",
            "description": "zip code of the city",
            "default": ""
          },
          {
            "name": "LANG",
            "type": "STRING",
            "description": "language [en,fr,nl,es,pt,it,tr,gr,cz,pl,ru,cn]",
            "default": "en"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "name of a city",
            "default": "New York"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": [
            {
              "wmo": "str",
              "city": "str",
              "country": "str",
              "country_name": "str",
              "_list_length": 2
            }
          ]
        }
      }
    ],
    "query": "I'm a travel blogger and I want to provide my readers with the most accurate weather information for their upcoming trips. Can you help me find the 14-day weather forecast for a specific city? The city's name is Paris and its zip code is 75000.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "Get forecastdata by lat/lon"
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "Search location by Name or zip code"
      }
    ],
    "query_id": 21785
  },
  {
    "api_list": [
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist featuring",
        "api_description": "Artist featuring",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Artist ID",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "artist": {
              "id": "str",
              "uri": "str",
              "profile": {
                "name": "str"
              },
              "relatedContent": {
                "featuring": {
                  "totalCount": "int",
                  "items": [
                    {
                      "uri": "str",
                      "id": "str",
                      "owner": {
                        "name": "str"
                      },
                      "name": "str",
                      "description": "str",
                      "images": {
                        "totalCount": "int",
                        "items": [
                          {
                            "sources": [
                              {
                                "url": "str",
                                "width": "NoneType",
                                "height": "NoneType",
                                "_list_length": 1
                              }
                            ],
                            "_list_length": 1
                          }
                        ]
                      },
                      "_list_length": 8
                    }
                  ]
                }
              }
            }
          },
          "extensions": "empty list"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist discovered on",
        "api_description": "Artist discovered on playlists (max 50)",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Artist ID",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "artist": {
              "id": "str",
              "uri": "str",
              "profile": {
                "name": "str"
              },
              "relatedContent": {
                "discoveredOn": {
                  "totalCount": "int",
                  "items": [
                    {
                      "uri": "str",
                      "id": "str",
                      "owner": {
                        "name": "str"
                      },
                      "name": "str",
                      "description": "str",
                      "images": {
                        "totalCount": "int",
                        "items": [
                          {
                            "sources": [
                              {
                                "url": "str",
                                "width": "NoneType",
                                "height": "NoneType",
                                "_list_length": 1
                              }
                            ],
                            "_list_length": 1
                          }
                        ]
                      },
                      "_list_length": 50
                    }
                  ]
                }
              }
            }
          },
          "extensions": "empty list"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist appears on",
        "api_description": "Get artist appears on albums (max 50)",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Artist ID",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "artist": {
              "id": "str",
              "uri": "str",
              "profile": {
                "name": "str"
              },
              "relatedContent": {
                "appearsOn": {
                  "totalCount": "int",
                  "items": [
                    {
                      "releases": {
                        "totalCount": "int",
                        "items": [
                          {
                            "uri": "str",
                            "id": "str",
                            "name": "str",
                            "artists": {
                              "items": [
                                {
                                  "uri": "str",
                                  "profile": {
                                    "name": "str"
                                  },
                                  "_list_length": 1
                                }
                              ]
                            },
                            "coverArt": {
                              "sources": [
                                {
                                  "url": "str",
                                  "width": "int",
                                  "height": "int",
                                  "_list_length": 3
                                }
                              ]
                            },
                            "sharingInfo": {
                              "shareId": "str",
                              "shareUrl": "str"
                            },
                            "_list_length": 1
                          }
                        ]
                      },
                      "_list_length": 50
                    }
                  ]
                }
              }
            }
          },
          "extensions": "empty list"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist singles",
        "api_description": "Get artist singles",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Artist ID",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": "0"
          },
          {
            "name": "limit",
            "type": "STRING",
            "description": "",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "artist": {
              "discography": {
                "singles": {
                  "totalCount": "int",
                  "items": [
                    {
                      "releases": {
                        "items": [
                          {
                            "id": "str",
                            "uri": "str",
                            "name": "str",
                            "type": "str",
                            "date": {
                              "year": "int",
                              "isoString": "str"
                            },
                            "coverArt": {
                              "sources": [
                                {
                                  "url": "str",
                                  "width": "int",
                                  "height": "int",
                                  "_list_length": 3
                                }
                              ]
                            },
                            "playability": {
                              "playable": "bool",
                              "reason": "str"
                            },
                            "sharingInfo": {
                              "shareId": "str",
                              "shareUrl": "str"
                            },
                            "tracks": {
                              "totalCount": "int"
                            },
                            "_list_length": 1
                          }
                        ]
                      },
                      "_list_length": 20
                    }
                  ]
                }
              }
            }
          },
          "extensions": "empty list"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist albums",
        "api_description": "Get artist albums",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Artist ID",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": "100"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "artist": {
              "discography": {
                "albums": {
                  "totalCount": "int",
                  "items": [
                    {
                      "releases": {
                        "items": [
                          {
                            "id": "str",
                            "uri": "str",
                            "name": "str",
                            "type": "str",
                            "date": {
                              "year": "int",
                              "isoString": "str"
                            },
                            "coverArt": {
                              "sources": [
                                {
                                  "url": "str",
                                  "width": "int",
                                  "height": "int",
                                  "_list_length": 3
                                }
                              ]
                            },
                            "playability": {
                              "playable": "bool",
                              "reason": "str"
                            },
                            "sharingInfo": {
                              "shareId": "str",
                              "shareUrl": "str"
                            },
                            "tracks": {
                              "totalCount": "int"
                            },
                            "_list_length": 1
                          }
                        ]
                      },
                      "_list_length": 11
                    }
                  ]
                }
              }
            }
          },
          "extensions": "empty list"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist discography overview",
        "api_description": "Get artist discography overview",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Artist ID",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "artist": {
              "id": "str",
              "uri": "str",
              "profile": {
                "name": "str"
              },
              "discography": {
                "albums": {
                  "totalCount": "int"
                },
                "singles": {
                  "totalCount": "int"
                },
                "compilations": {
                  "totalCount": "int"
                }
              }
            }
          },
          "extensions": "empty list"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist overview",
        "api_description": "Get artist overview",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"data\": {\"artist\": {\"id\": \"str\", \"uri\": \"str\", \"following\": \"bool\", \"sharingInfo\": {\"shareUrl\": \"str\", \"shareId\": \"str\"}, \"profile\": {\"name\": \"str\", \"verified\": \"bool\", \"pinnedItem\": {\"comment\": \"str\", \"type\": \"str\", \"item\": {\"uri\": \"str\", \"name\": \"str\", \"images\": {\"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\", \"_list_length\": 1}], \"_list_length\": 1}]}}}, \"biography\": {\"text\": \"str\"}, \"externalLinks\": {\"items\": [{\"name\": \"str\", \"url\": \"str\", \"_list_length\": 4}]}, \"playlists\": {\"totalCount\": \"int\", \"items\": [{\"uri\": \"str\", \"name\": \"str\", \"description\": \"str\", \"owner\": {\"name\": \"str\"}, \"images\": {\"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\", \"_list_length\": 1}], \"_list_length\": 1}]}, \"_list_length\": 8}]}}, \"visuals\": {\"gallery\": {\"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 1}], \"_list_length\": 5}]}, \"avatarImage\": {\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_"
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Get artists",
        "api_description": "Get one or more artists",
        "required_parameters": [
          {
            "name": "ids",
            "type": "STRING",
            "description": "Artist IDs (you can use commas)",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "artists": [
            {
              "external_urls": {
                "spotify": "str"
              },
              "followers": {
                "href": "NoneType",
                "total": "int"
              },
              "genres": [
                "list of str with length 3"
              ],
              "id": "str",
              "images": [
                {
                  "height": "int",
                  "url": "str",
                  "width": "int",
                  "_list_length": 3
                }
              ],
              "name": "str",
              "popularity": "int",
              "type": "str",
              "uri": "str",
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Album metadata",
        "api_description": "Get album metadata",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Album ID",
            "default": "3IBcauSj5M2A6lTeffJzdv"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"data\": {\"album\": {\"uri\": \"str\", \"name\": \"str\", \"artists\": {\"totalCount\": \"int\", \"items\": [{\"uri\": \"str\", \"profile\": {\"name\": \"str\"}, \"visuals\": {\"avatarImage\": {\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}}, \"sharingInfo\": {\"shareUrl\": \"str\"}, \"_list_length\": 1}]}, \"coverArt\": {\"extractedColors\": {\"colorRaw\": {\"hex\": \"str\"}}, \"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}, \"discs\": {\"totalCount\": \"int\", \"items\": [{\"number\": \"int\", \"tracks\": {\"totalCount\": \"int\"}, \"_list_length\": 1}]}, \"tracks\": {\"totalCount\": \"int\", \"items\": [{\"track\": {\"playability\": {\"playable\": \"bool\", \"reason\": \"str\"}, \"duration\": {\"totalMilliseconds\": \"int\"}}, \"_list_length\": 10}]}, \"releases\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"type\": \"str\", \"date\": {\"isoString\": \"str\", \"precision\": \"str\"}, \"playability\": {\"playable\": \"bool\", \"reason\": \"str\"}, \"label\": \"str\", \"copyright\": {\"totalCount\": \"int\", \"items\": [{\"type\": \"str\", \"text\": \"st"
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Album tracks",
        "api_description": "Get album tracks",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Album ID",
            "default": "3IBcauSj5M2A6lTeffJzdv"
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": "300"
          },
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "album": {
              "playability": {
                "playable": "bool"
              },
              "tracks": {
                "totalCount": "int",
                "items": [
                  {
                    "uid": "str",
                    "track": {
                      "saved": "bool",
                      "uri": "str",
                      "name": "str",
                      "playcount": "str",
                      "discNumber": "int",
                      "trackNumber": "int",
                      "contentRating": {
                        "label": "str"
                      },
                      "relinkingInformation": "NoneType",
                      "duration": {
                        "totalMilliseconds": "int"
                      },
                      "playability": {
                        "playable": "bool"
                      },
                      "artists": {
                        "items": [
                          {
                            "uri": "str",
                            "profile": {
                              "name": "str"
                            },
                            "_list_length": 1
                          }
                        ]
                      }
                    },
                    "_list_length": 10
                  }
                ]
              }
            }
          },
          "extensions": "empty list"
        }
      }
    ],
    "query": "I'm planning a party and I want to create a playlist with songs featuring my favorite artist. Can you provide me with a list of songs that feature the artist with ID '2w9zwq3AktTeYYMuhMjju8'? I would like the songs to have their names, descriptions, and images.",
    "relevant APIs": [
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist featuring"
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Get artists"
      }
    ],
    "query_id": 24777
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "KVStore",
        "api_name": "Collection List",
        "api_description": "Get the list of all collections",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "KVStore",
        "api_name": "Get a value",
        "api_description": "Read the value",
        "required_parameters": [
          {
            "name": "collection",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "key",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "KVStore",
        "api_name": "Get Collection info",
        "api_description": "Get information about the Collection",
        "required_parameters": [
          {
            "name": "collection",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "KVStore",
        "api_name": "Get items",
        "api_description": "Get <key,value> pairs ordered by DESC creation time",
        "required_parameters": [
          {
            "name": "collection",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "The number of items to be returned (max. 100)",
            "default": "10"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "the sort type (asc = ascending, desc = descending)",
            "default": "asc"
          },
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "This parameter is used to skip items from the result. An item is returned if created_at < offset (descending order) or created_at > offset (ascending order)",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "KVStore",
        "api_name": "Get storage info",
        "api_description": "Show the user's storage status and information",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "Could you fetch the key-value pairs from my KVStore collection? I would like to get the items ordered by creation time in descending order, with a limit of 50. Additionally, provide me with the storage status and information.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "KVStore",
        "api_name": "Get items"
      },
      {
        "category_name": "Data",
        "tool_name": "KVStore",
        "api_name": "Get storage info"
      }
    ],
    "query_id": 26542
  },
  {
    "api_list": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Supported Currencies",
        "api_description": "get a list of currencies we support",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert",
        "api_description": "Convert from one currency toanother",
        "required_parameters": [
          {
            "name": "from",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "amount",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "to",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to convert 50 EUR to USD. Please provide me with the current exchange rate and the equivalent amount in US dollars.",
    "relevant APIs": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Supported Currencies"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert"
      }
    ],
    "query_id": 26820
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "stocks_archive",
        "api_name": "ping",
        "api_description": "Check that server is still alive",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "datetime": "str",
          "version": "str",
          "uptime": "float"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "stocks_archive",
        "api_name": "tickerData",
        "api_description": "Returns a list of ticker records",
        "required_parameters": [
          {
            "name": "period",
            "type": "STRING",
            "description": "Ticker period",
            "default": "1h"
          },
          {
            "name": "startDate",
            "type": "STRING",
            "description": "Start date",
            "default": "2010-04-12T14:30"
          },
          {
            "name": "tickerName",
            "type": "STRING",
            "description": "Ticker name",
            "default": "gold"
          },
          {
            "name": "endDate",
            "type": "STRING",
            "description": "End date",
            "default": "2010-04-20T12:30"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "records": [
            {
              "closeDateTime": "str",
              "open": "float",
              "close": "float",
              "high": "float",
              "low": "float",
              "volume": "int",
              "_list_length": 142
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "stocks_archive",
        "api_name": "tickersList",
        "api_description": "Returns a list of available tickers",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm interested in analyzing the stock market performance of the gold ticker from April 12, 2010, at 14:30 to April 20, 2010, at 12:30. Please provide the close date-time, open price, close price, highest price, lowest price, and volume for each ticker record. Additionally, fetch the list of available tickers and provide their short and long names. My company's financial advisors require this data to make informed investment decisions.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "stocks_archive",
        "api_name": "tickerData"
      },
      {
        "category_name": "Finance",
        "tool_name": "stocks_archive",
        "api_name": "tickersList"
      }
    ],
    "query_id": 36378
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings History",
        "api_description": "Get earnings history.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "29/06/2022": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          },
          "29/09/2022": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          },
          "30/03/2023": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          },
          "30/12/2022": {
            "Actual EPS": "str",
            "Difference": "str",
            "Est. EPS": "str",
            "Surprise %": "str"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Estimate",
        "api_description": "Get earnings estimate.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          },
          "Current year (2023)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          },
          "Next qtr. (Sep 2023)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          },
          "Next year (2024)": {
            "Avg. Estimate": "float",
            "High estimate": "float",
            "Low estimate": "float",
            "No. of analysts": "float",
            "Year ago EPS": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Revisions",
        "api_description": "Get earnings revisions.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          },
          "Current year (2023)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          },
          "Next qtr. (Sep 2023)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          },
          "Next year (2024)": {
            "Down last 30 days": "float",
            "Down last 7 days": "float",
            "Up last 30 days": "float",
            "Up last 7 days": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Trend",
        "api_description": "Get earnings trend.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          },
          "Current year (2023)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          },
          "Next qtr. (Sep 2023)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          },
          "Next year (2024)": {
            "30 days ago": "float",
            "60 days ago": "float",
            "7 days ago": "float",
            "90 days ago": "float",
            "Current estimate": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Growth Estimate",
        "api_description": "Get growth estimate.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "AAPL": {
            "Current qtr.": "str",
            "Current year": "str",
            "Next 5 years (per annum)": "str",
            "Next qtr.": "str",
            "Next year": "str",
            "Past 5 years (per annum)": "str"
          },
          "Industry": {
            "Current qtr.": "float",
            "Current year": "float",
            "Next 5 years (per annum)": "float",
            "Next qtr.": "float",
            "Next year": "float",
            "Past 5 years (per annum)": "float"
          },
          "S&P 500": {
            "Current qtr.": "float",
            "Current year": "float",
            "Next 5 years (per annum)": "float",
            "Next qtr.": "float",
            "Next year": "float",
            "Past 5 years (per annum)": "float"
          },
          "Sector(s)": {
            "Current qtr.": "float",
            "Current year": "float",
            "Next 5 years (per annum)": "float",
            "Next qtr.": "float",
            "Next year": "float",
            "Past 5 years (per annum)": "float"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Key Statistics",
        "api_description": "Get key statistics.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"% held by insiders \": {\"Value\": \"str\"}, \"% held by institutions \": {\"Value\": \"str\"}, \"200-day moving average \": {\"Value\": \"str\"}, \"5-year average dividend yield \": {\"Value\": \"str\"}, \"50-day moving average \": {\"Value\": \"str\"}, \"52-week change \": {\"Value\": \"str\"}, \"52-week high \": {\"Value\": \"str\"}, \"52-week low \": {\"Value\": \"str\"}, \"Avg vol (10-day) \": {\"Value\": \"str\"}, \"Avg vol (3-month) \": {\"Value\": \"str\"}, \"Beta (5Y monthly)\": {\"Value\": \"str\"}, \"Book value per share (mrq)\": {\"Value\": \"str\"}, \"Current ratio (mrq)\": {\"Value\": \"str\"}, \"Diluted EPS (ttm)\": {\"Value\": \"str\"}, \"Dividend date \": {\"Value\": \"str\"}, \"EBITDA\": {\"Value\": \"str\"}, \"Enterprise value\": {\"Value\": \"str\"}, \"Enterprise value/EBITDA\": {\"Value\": \"str\"}, \"Enterprise value/revenue\": {\"Value\": \"str\"}, \"Ex-dividend date \": {\"Value\": \"str\"}, \"Fiscal year ends\": {\"Value\": \"str\"}, \"Float \": {\"Value\": \"str\"}, \"Forward P/E\": {\"Value\": \"str\"}, \"Forward annual dividend rate \": {\"Value\": \"str\"}, \"Forward annual dividend yield \": {\"Va"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Revenue Estimate",
        "api_description": "Get revenue estimate.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Current qtr. (Jun 2023)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          },
          "Current year (2023)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          },
          "Next qtr. (Sep 2023)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          },
          "Next year (2024)": {
            "Avg. Estimate": "str",
            "High estimate": "str",
            "Low estimate": "str",
            "No. of analysts": "str",
            "Sales growth (year/est)": "str",
            "Year ago sales": "str"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Company Description",
        "api_description": "Get company description.",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I work for a financial institution and I am researching a company's financials. Can you give me the earnings trend, growth estimate, and key statistics for the company with the ticker symbol AAPL? It would also be helpful to have the company's description.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Earnings Trend"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Growth Estimate"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Key Statistics"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stock Analysis",
        "api_name": "Company Description"
      }
    ],
    "query_id": 36687
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "historical_weather",
        "api_description": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.",
        "required_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "The UTC day of the data in the past in `YYYY-MM-DD` format.",
            "default": "2021-08-24"
          }
        ],
        "optional_parameters": [
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "37.81021"
          },
          {
            "name": "place_id",
            "type": "STRING",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`°C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`°F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
            "default": "auto"
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "-122.42282"
          }
        ],
        "method": "GET",
        "template_response": {
          "lat": "str",
          "lon": "str",
          "elevation": "int",
          "timezone": "str",
          "units": "str",
          "data": [
            {
              "date": "str",
              "weather": "str",
              "icon": "int",
              "temperature": "float",
              "feels_like": "float",
              "wind_chill": "float",
              "dew_point": "float",
              "wind": {
                "speed": "float",
                "gusts": "float",
                "angle": "int",
                "dir": "str"
              },
              "cloud_cover": "int",
              "pressure": "float",
              "precipitation": {
                "total": "float",
                "type": "str"
              },
              "ozone": "int",
              "humidity": "float",
              "_list_length": 24
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "weather_statistics",
        "api_description": "Get average weather: **long-term normals** for a given place for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "units",
            "type": "STRING",
            "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`°C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`°F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
            "default": "auto"
          },
          {
            "name": "place_id",
            "type": "STRING",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
            "default": ""
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "-122.42282"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "37.81021"
          }
        ],
        "method": "GET",
        "template_response": {
          "lat": "str",
          "lon": "str",
          "elevation": "int",
          "units": "str",
          "statistics": {
            "data": [
              {
                "day": "str",
                "temperature": {
                  "avg": "float",
                  "avg_min": "float",
                  "avg_max": "float",
                  "record_min": "float",
                  "record_max": "float"
                },
                "wind": {
                  "avg_speed": "float",
                  "avg_angle": "int",
                  "avg_dir": "str",
                  "max_speed": "float",
                  "max_gust": "float"
                },
                "precipitation": {
                  "avg": "float",
                  "probability": "int"
                },
                "_list_length": 30
              }
            ]
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "hourly",
        "api_description": "**Hourly weather** forecast for the next 5 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "-122.42282"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "37.81021"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
            "default": "en"
          },
          {
            "name": "place_id",
            "type": "STRING",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`°C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`°F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
            "default": "auto"
          },
          {
            "name": "timezone",
            "type": "STRING",
            "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
            "default": "auto"
          }
        ],
        "method": "GET",
        "template_response": {
          "lat": "str",
          "lon": "str",
          "elevation": "int",
          "timezone": "str",
          "units": "str",
          "hourly": {
            "data": [
              {
                "date": "str",
                "weather": "str",
                "icon": "int",
                "summary": "str",
                "temperature": "float",
                "feels_like": "float",
                "wind_chill": "float",
                "dew_point": "float",
                "wind": {
                  "speed": "float",
                  "gusts": "float",
                  "dir": "str",
                  "angle": "int"
                },
                "cloud_cover": "int",
                "pressure": "float",
                "precipitation": {
                  "total": "float",
                  "type": "str"
                },
                "probability": {
                  "precipitation": "int",
                  "storm": "float",
                  "freeze": "float"
                },
                "ozone": "float",
                "uv_index": "float",
                "humidity": "int",
                "visibility": "float",
                "_list_length": 120
              }
            ]
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "current",
        "api_description": "**Current weather** conditions based on weather stations around the world.  Updated every 10 minutes. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
            "default": "en"
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`°C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`°F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.",
            "default": "auto"
          },
          {
            "name": "place_id",
            "type": "STRING",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
            "default": ""
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "-122.42282"
          },
          {
            "name": "timezone",
            "type": "STRING",
            "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
            "default": "auto"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "37.81021"
          }
        ],
        "method": "GET",
        "template_response": {
          "lat": "str",
          "lon": "str",
          "elevation": "int",
          "timezone": "str",
          "units": "str",
          "current": {
            "icon": "str",
            "icon_num": "int",
            "summary": "str",
            "temperature": "float",
            "feels_like": "float",
            "wind_chill": "float",
            "dew_point": "float",
            "wind": {
              "speed": "float",
              "gusts": "float",
              "angle": "int",
              "dir": "str"
            },
            "precipitation": {
              "total": "float",
              "type": "str"
            },
            "cloud_cover": "int",
            "ozone": "float",
            "pressure": "float",
            "uv_index": "float",
            "humidity": "int",
            "visibility": "float"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "daily",
        "api_description": "**Daily weather** forecast for the next 21 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
            "default": "en"
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`°C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`°F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
            "default": "auto"
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "-122.42282"
          },
          {
            "name": "place_id",
            "type": "STRING",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
            "default": ""
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "37.81021"
          }
        ],
        "method": "GET",
        "template_response": {
          "lat": "str",
          "lon": "str",
          "elevation": "int",
          "units": "str",
          "daily": {
            "data": [
              {
                "day": "str",
                "weather": "str",
                "icon": "int",
                "summary": "str",
                "predictability": "int",
                "temperature": "float",
                "temperature_min": "float",
                "temperature_max": "float",
                "feels_like": "float",
                "feels_like_min": "float",
                "feels_like_max": "float",
                "wind_chill": "float",
                "wind_chill_min": "float",
                "wind_chill_max": "float",
                "dew_point": "float",
                "dew_point_min": "float",
                "dew_point_max": "float",
                "wind": {
                  "speed": "float",
                  "gusts": "float",
                  "dir": "str",
                  "angle": "int"
                },
                "cloud_cover": "int",
                "pressure": "float",
                "precipitation": {
                  "total": "float",
                  "type": "str"
                },
                "probability": {
                  "precipitation": "int",
                  "storm": "float",
                  "freeze": "float"
                },
                "ozone": "float",
                "humidity": "int",
                "visibility": "float",
                "_list_length": 21
              }
            ]
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "minutely",
        "api_description": "**Minute-by-minute** precipitation forecast for the next 60 minutes. Updated in **real-time** based on our **AI nowcasting models**. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "place_id",
            "type": "STRING",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
            "default": ""
          },
          {
            "name": "timezone",
            "type": "STRING",
            "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
            "default": "auto"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "37.81021"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
            "default": "en"
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`°C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`°F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
            "default": "auto"
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "-122.42282"
          }
        ],
        "method": "GET",
        "template_response": {
          "lat": "str",
          "lon": "str",
          "elevation": "int",
          "timezone": "str",
          "units": "str",
          "minutely": {
            "summary": "str",
            "data": [
              {
                "date": "str",
                "precipitation": "float",
                "_list_length": 60
              }
            ]
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "alerts",
        "api_description": "**Severe weather alerts** for the USA, Europe, and Canada. **Define your location** using GPS coordinates or `place_id` from `Location` endpoints.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "place_id",
            "type": "STRING",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
            "default": ""
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "45.74846"
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
            "default": "4.84671"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
            "default": "en"
          },
          {
            "name": "timezone",
            "type": "STRING",
            "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
            "default": "auto"
          }
        ],
        "method": "GET",
        "template_response": {
          "lat": "str",
          "lon": "str",
          "elevation": "int",
          "timezone": "str",
          "alerts": {
            "data": "empty list"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "find_places",
        "api_description": "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc.",
        "required_parameters": [
          {
            "name": "text",
            "type": "STRING",
            "description": "Place name to search for",
            "default": "fishermans wharf"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "place_id": "str",
          "adm_area1": "str",
          "adm_area2": "str",
          "country": "str",
          "lat": "str",
          "lon": "str",
          "timezone": "str",
          "type": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "find_places_prefix",
        "api_description": "**Search places by beginning of the name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places* endpoint, you can specify only the prefix of the place you are looking for. You can search for cities, mountains, lakes, countries, etc.",
        "required_parameters": [
          {
            "name": "text",
            "type": "STRING",
            "description": "Place name prefix to search for",
            "default": "fishermans wh"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n\n",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "place_id": "str",
          "adm_area1": "str",
          "adm_area2": "str",
          "country": "str",
          "lat": "str",
          "lon": "str",
          "timezone": "str",
          "type": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "nearest_place",
        "api_description": "Use this endpoint to search for the **nearest named place** (village/town/city) from a given GPS coordinates. You will get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information**.\n\n*Note: If you specify coordinates of a secluded place (e.g. middle of the ocean), the nearest point can be very far from the coordinates.*",
        "required_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4",
            "default": "-122.42282"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4",
            "default": "37.81021"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n\n",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "place_id": "str",
          "adm_area1": "str",
          "adm_area2": "str",
          "country": "str",
          "lat": "str",
          "lon": "str",
          "timezone": "str",
          "type": "str"
        }
      }
    ],
    "query": "I am a gardener and I need to know the hourly weather forecast for the next 3 days. Can you give me information on temperature, precipitation, wind speed, and cloud cover? I want to plan my watering schedule accordingly.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "hourly"
      },
      {
        "category_name": "Weather",
        "tool_name": "AI Weather by Meteosource",
        "api_name": "find_places"
      }
    ],
    "query_id": 38414
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Directions Between 2 Locations",
        "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**",
        "required_parameters": [
          {
            "name": "start_lon",
            "type": "NUMBER",
            "description": "Longitude of the starting point (required)",
            "default": "-16.0755888102153"
          },
          {
            "name": "end_lon",
            "type": "NUMBER",
            "description": "Longitude of the ending point (required)",
            "default": "-17.447938"
          },
          {
            "name": "end_lat",
            "type": "NUMBER",
            "description": "Latitude of the ending point (required)",
            "default": "14.693425"
          },
          {
            "name": "start_lat",
            "type": "NUMBER",
            "description": "Latitude of the starting point (required)",
            "default": "14.14129815"
          }
        ],
        "optional_parameters": [
          {
            "name": "distance_unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "steps": [
            {
              "direction": "str",
              "distance": "str",
              "duration": "str",
              "instruction": "str",
              "location": [
                "list of float with length 2"
              ],
              "_list_length": 15
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Measure Distance",
        "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**",
        "required_parameters": [
          {
            "name": "lon2",
            "type": "NUMBER",
            "description": "Longitude of the second location (required)",
            "default": "-17.447938"
          },
          {
            "name": "lat2",
            "type": "NUMBER",
            "description": "Latitude of the second location (required)",
            "default": "14.693425"
          },
          {
            "name": "lon1",
            "type": "NUMBER",
            "description": "Longitude of the first location (required)",
            "default": "-16.0755888102153"
          },
          {
            "name": "lat1",
            "type": "NUMBER",
            "description": "Latitude of the first location (required)",
            "default": "14.14129815"
          }
        ],
        "optional_parameters": [
          {
            "name": "unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "unit": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Reverse Geocode",
        "api_description": "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
        "required_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "The longitude of the location.",
            "default": "-17.447938"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "The latitude of the location.",
            "default": "14.693425"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "amenity": "str",
          "boundingbox": [
            "list of str with length 4"
          ],
          "category": "str",
          "city": "str",
          "country": "str",
          "display_name": "str",
          "region": "str",
          "suburb": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Facilities Lookup",
        "api_description": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "The region where the facility is located",
            "default": "Dakar"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
            "default": "hospital"
          }
        ],
        "optional_parameters": [
          {
            "name": "city",
            "type": "STRING",
            "description": "The city where the facility is located",
            "default": "Touba"
          },
          {
            "name": "limit",
            "type": "STRING",
            "description": "The number of facilities to query.",
            "default": "10"
          }
        ],
        "method": "GET",
        "template_response": {
          "hospital": [
            {
              "ISO3166-2-lvl4": "str",
              "address": "str",
              "amenity": "str",
              "country_code": "str",
              "county": "str",
              "display_name": "str",
              "latitude": "str",
              "longitude": "str",
              "postcode": "str",
              "region": "str",
              "road": "str",
              "suburb": "str",
              "village": "str",
              "website": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Geocode",
        "api_description": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "he name of the location to look up.",
            "default": "Dakar"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "display_name": "str",
          "latitude": "str",
          "longitude": "str"
        }
      }
    ],
    "query": "I am planning a family trip to Senegal and I need to find the distance and duration between two locations. Please provide me with the directions from Dakar to Saly Portudal. Also, I would like to know the facilities available in the region of Mbour. Can you give me a list of hospitals and colleges in that area?",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Directions Between 2 Locations"
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Facilities Lookup"
      }
    ],
    "query_id": 39392
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Directions Between 2 Locations",
        "api_description": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**",
        "required_parameters": [
          {
            "name": "start_lon",
            "type": "NUMBER",
            "description": "Longitude of the starting point (required)",
            "default": "-16.0755888102153"
          },
          {
            "name": "end_lon",
            "type": "NUMBER",
            "description": "Longitude of the ending point (required)",
            "default": "-17.447938"
          },
          {
            "name": "end_lat",
            "type": "NUMBER",
            "description": "Latitude of the ending point (required)",
            "default": "14.693425"
          },
          {
            "name": "start_lat",
            "type": "NUMBER",
            "description": "Latitude of the starting point (required)",
            "default": "14.14129815"
          }
        ],
        "optional_parameters": [
          {
            "name": "distance_unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "steps": [
            {
              "direction": "str",
              "distance": "str",
              "duration": "str",
              "instruction": "str",
              "location": [
                "list of float with length 2"
              ],
              "_list_length": 15
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Measure Distance",
        "api_description": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**",
        "required_parameters": [
          {
            "name": "lon2",
            "type": "NUMBER",
            "description": "Longitude of the second location (required)",
            "default": "-17.447938"
          },
          {
            "name": "lat2",
            "type": "NUMBER",
            "description": "Latitude of the second location (required)",
            "default": "14.693425"
          },
          {
            "name": "lon1",
            "type": "NUMBER",
            "description": "Longitude of the first location (required)",
            "default": "-16.0755888102153"
          },
          {
            "name": "lat1",
            "type": "NUMBER",
            "description": "Latitude of the first location (required)",
            "default": "14.14129815"
          }
        ],
        "optional_parameters": [
          {
            "name": "unit",
            "type": "STRING",
            "description": "Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n",
            "default": "km"
          }
        ],
        "method": "GET",
        "template_response": {
          "distance": "str",
          "duration": "str",
          "unit": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Reverse Geocode",
        "api_description": "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
        "required_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "The longitude of the location.",
            "default": "-17.447938"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "The latitude of the location.",
            "default": "14.693425"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "amenity": "str",
          "boundingbox": [
            "list of str with length 4"
          ],
          "category": "str",
          "city": "str",
          "country": "str",
          "display_name": "str",
          "region": "str",
          "suburb": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Facilities Lookup",
        "api_description": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "The region where the facility is located",
            "default": "Dakar"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity)",
            "default": "hospital"
          }
        ],
        "optional_parameters": [
          {
            "name": "city",
            "type": "STRING",
            "description": "The city where the facility is located",
            "default": "Touba"
          },
          {
            "name": "limit",
            "type": "STRING",
            "description": "The number of facilities to query.",
            "default": "10"
          }
        ],
        "method": "GET",
        "template_response": {
          "hospital": [
            {
              "ISO3166-2-lvl4": "str",
              "address": "str",
              "amenity": "str",
              "country_code": "str",
              "county": "str",
              "display_name": "str",
              "latitude": "str",
              "longitude": "str",
              "postcode": "str",
              "region": "str",
              "road": "str",
              "suburb": "str",
              "village": "str",
              "website": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Geocode",
        "api_description": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "he name of the location to look up.",
            "default": "Dakar"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "display_name": "str",
          "latitude": "str",
          "longitude": "str"
        }
      }
    ],
    "query": "I am organizing a business event in Senegal and I need to calculate the distance between two locations. Please provide me with the distance and duration from Dakar to Thies. Additionally, I would like to know the facilities available in Dakar. Can you give me a list of restaurants and banks in the city?",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Measure Distance"
      },
      {
        "category_name": "Location",
        "tool_name": "Senegal API",
        "api_name": "Facilities Lookup"
      }
    ],
    "query_id": 39393
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "transactions",
        "api_description": "Show transactions given a zipcode. The API returns 50 records each time in descending order by date and supports pagination. This API requires a subscription cost.\n\nThe returned data shows the summary of information. To get further detail (such as the unit of a building that posts the most recent transaction, use summary API.\n\nSample data of the API when query zipcode 10019 is:\n \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"310\",\n        \"STREET\": \"W 56th St\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL COOP UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-07-21T00:00:00.000Z\",\n      \"lastSalesAmount\": 514000,\n      \"maxSalesAmount\": 1359000,\n      \"TotalRecords\": 74\n    },",
        "required_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "",
            "default": "10019"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "count": "int",
          "data": [
            {
              "_id": {
                "STREET_NUMBER": "str",
                "STREET": "str",
                "PROPERTY_TYPE": "str",
                "ZIPCODE": "str",
                "STATE": "str"
              },
              "lastSalesDate": "str",
              "lastSalesAmount": "int",
              "maxSalesAmount": "int",
              "TotalRecords": "int",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "detail",
        "api_description": "Return all detailed historical transactions of a given address. To call this API, it requires to call summary API first using address information. Then use the Id value returned from the summary API and call this API with the same Id. This API requires a subscription cost.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "6144a05f3afc5ca06e88a2ab"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "data": "empty list"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "summary",
        "api_description": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
        "required_parameters": [
          {
            "name": "number",
            "type": "STRING",
            "description": "",
            "default": "220"
          },
          {
            "name": "street",
            "type": "STRING",
            "description": "",
            "default": "Central Park S"
          }
        ],
        "optional_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "",
            "default": "10019"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "count": "int",
          "data": [
            {
              "_id": {
                "id": "str",
                "Loc": {
                  "coordinates": [
                    "list of float with length 2"
                  ],
                  "type": "str"
                },
                "STREET_NUMBER": "str",
                "STREET": "str",
                "UNIT": "str",
                "PROPERTY_TYPE": "str",
                "ZIPCODE": "str",
                "STATE": "str"
              },
              "lastSalesDate": "str",
              "lastSalesAmount": "int",
              "maxSalesAmount": "int",
              "SQFT": "int",
              "TotalRecords": "int",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "address",
        "api_description": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
        "required_parameters": [
          {
            "name": "street",
            "type": "STRING",
            "description": "",
            "default": "Central Park S"
          },
          {
            "name": "number",
            "type": "STRING",
            "description": "",
            "default": "220"
          }
        ],
        "optional_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "",
            "default": "10019"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "data": [
            {
              "_id": {
                "STREET_NUMBER": "str",
                "STREET": "str",
                "PROPERTY_TYPE": "str",
                "ZIPCODE": "str",
                "STATE": "str"
              },
              "Location": {
                "coordinates": [
                  "list of float with length 2"
                ],
                "type": "str"
              },
              "lastSalesDate": "str",
              "lastSalesAmount": "int",
              "maxSalesAmount": "int",
              "TotalRecords": "int",
              "_list_length": 5
            }
          ]
        }
      }
    ],
    "query": "I'm interested in buying a property in New York City. Please show me the transactions for the zipcode 10011, starting from page 1. Also, provide me with the summary of property records for the address 321 Oak Lane, including the last sales date and amount.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "transactions"
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "summary"
      }
    ],
    "query_id": 42077
  },
  {
    "api_list": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Supported Currencies",
        "api_description": "get a list of currencies we support",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert",
        "api_description": "Convert from one currency toanother",
        "required_parameters": [
          {
            "name": "from",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "amount",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "to",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My friend is traveling to Japan and wants to know the exchange rate between USD and JPY. Can you help him convert 1000 USD to Japanese yen? He also needs a list of all the supported currencies.",
    "relevant APIs": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Supported Currencies"
      }
    ],
    "query_id": 43585
  },
  {
    "api_list": [
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_search",
        "api_description": "Returns the list of products based on keyword.",
        "required_parameters": [
          {
            "name": "store_id",
            "type": "STRING",
            "description": "",
            "default": "1122"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "womens shoes"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": "0"
          },
          {
            "name": "count",
            "type": "STRING",
            "description": "maximum 25",
            "default": "25"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_details",
        "api_description": "Returns detailed product information.\nIncluding:\n```\nproduct variants (with different dimension like size, color and etc.\nratings and reviews\nitem images/videos\nprice\npromotion\nchild products\n```",
        "required_parameters": [
          {
            "name": "store_id",
            "type": "STRING",
            "description": "The id of the store which product details data is being retrieved from. (optional)\nValue comes from nearby store API.",
            "default": "3330"
          },
          {
            "name": "tcin",
            "type": "STRING",
            "description": "Target product id.\nValue comes from product search API.",
            "default": "16251811"
          }
        ],
        "optional_parameters": [
          {
            "name": "longitude",
            "type": "STRING",
            "description": "User's longitude information. (optional)",
            "default": "-122.200"
          },
          {
            "name": "latitude",
            "type": "STRING",
            "description": "User's latitude information. (optional)",
            "default": "37.820"
          },
          {
            "name": "zip",
            "type": "STRING",
            "description": "User's zipcode. (optional)",
            "default": "94611"
          },
          {
            "name": "state",
            "type": "STRING",
            "description": "State code of user's location. (optional)",
            "default": "CA"
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"item\": {\"enrichment\": {\"images\": {\"primary_image\": \"str\", \"alternate_image_urls\": [\"list of str with length 7\"], \"content_labels\": [{\"image_url\": \"str\", \"_list_length\": 9}], \"alternate_images\": [\"list of str with length 7\"], \"primary_image_url\": \"str\", \"base_url\": \"str\", \"swatch_image\": \"str\", \"swatch_image_url\": \"str\"}, \"return_policies\": [{\"user_type\": \"str\", \"day_count\": \"int\", \"_list_length\": 2}], \"buy_url\": \"str\", \"size_chart_fragment_url\": \"str\", \"videos\": [{\"video_title\": \"str\", \"video_poster_image\": \"str\", \"video_captions\": [{\"caption_url\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"video_files\": [{\"video_url\": \"str\", \"video_height_pixels\": \"str\", \"mime_type\": \"str\", \"_list_length\": 1}], \"video_length_seconds\": \"str\", \"_list_length\": 1}]}, \"is_limited_time_offer\": \"bool\", \"relationship_type_code\": \"str\", \"primary_brand\": {\"linking_id\": \"str\", \"name\": \"str\", \"canonical_url\": \"str\"}, \"handling\": {\"import_designation_description\": \"str\"},"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "nearby_stores",
        "api_description": "Returns the list of stores near to specified ZIP code.",
        "required_parameters": [
          {
            "name": "place",
            "type": "STRING",
            "description": "",
            "default": "10010"
          }
        ],
        "optional_parameters": [
          {
            "name": "within",
            "type": "STRING",
            "description": "Radius of searching distance in miles",
            "default": "100"
          },
          {
            "name": "limit",
            "type": "STRING",
            "description": "",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "nearby_stores": {
              "stores": [
                {
                  "store_id": "str",
                  "mailing_address": {
                    "country_code": "str",
                    "address_line1": "str",
                    "city": "str",
                    "state": "str",
                    "region": "str",
                    "postal_code": "str"
                  },
                  "location_name": "str",
                  "main_voice_phone_number": "str",
                  "distance": "float",
                  "rolling_operating_hours": {
                    "main_hours": {
                      "days": [
                        {
                          "date": "str",
                          "hours": [
                            {
                              "end_date": "str",
                              "end_time": "str",
                              "begin_time": "str",
                              "_list_length": 1
                            }
                          ],
                          "day_name": "str",
                          "is_open": "bool",
                          "_list_length": 14
                        }
                      ]
                    }
                  },
                  "status": "str",
                  "_list_length": 20
                }
              ],
              "count": "int"
            }
          }
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_fulfillment",
        "api_description": "Returns product fulfillment information.",
        "required_parameters": [
          {
            "name": "tcin",
            "type": "STRING",
            "description": "Target product id.\nValue comes from product search API.\n",
            "default": "51952757"
          }
        ],
        "optional_parameters": [
          {
            "name": "zip",
            "type": "STRING",
            "description": "The zipcode of user's search location.\n(optional)",
            "default": "94611"
          },
          {
            "name": "state",
            "type": "STRING",
            "description": "State code where is user is located at. (optional)",
            "default": "CA"
          },
          {
            "name": "longitude",
            "type": "STRING",
            "description": "User's longitude Information (optional)",
            "default": "-122.200"
          },
          {
            "name": "store_id",
            "type": "STRING",
            "description": "The id of the Target store from which the fulfillment information is being retrieved.\nValue comes from nearby stores api.\n(optional)",
            "default": "3330"
          },
          {
            "name": "latitude",
            "type": "STRING",
            "description": "User's longitude Information (optional)",
            "default": "37.820"
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"__typename\": \"str\", \"fulfillment\": {\"scheduled_delivery\": {\"availability_status\": \"str\", \"location_available_to_promise_quantity\": \"float\"}, \"is_out_of_stock_in_all_store_locations\": \"bool\", \"product_id\": \"str\", \"shipping_options\": {\"availability_status\": \"str\", \"available_to_promise_quantity\": \"float\", \"services\": [{\"max_delivery_date\": \"str\", \"shipping_method_id\": \"str\", \"min_delivery_date\": \"str\", \"shipping_method_short_description\": \"str\", \"cutoff\": \"str\", \"is_base_shipping_method\": \"bool\", \"service_level_description\": \"str\", \"is_two_day_shipping\": \"bool\", \"_list_length\": 1}], \"loyalty_availability_status\": \"str\"}, \"store_options\": [{\"location_available_to_promise_quantity\": \"float\", \"order_pickup\": {\"availability_status\": \"str\"}, \"in_store_only\": {\"availability_status\": \"str\"}, \"search_response_store_type\": \"str\", \"store\": {\"mailing_address\": {\"address_line1\": \"str\", \"city\": \"str\", \"state\": \"str\", \"postal_code\": \"str\"}, \"location_name\": \"str\"}"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "search_autocomplete",
        "api_description": "Product autocompletion based on search keyword.",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "tv"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm currently at home in zip code 94611 and looking for nearby Target stores. Can you fetch a list of stores near me and provide details like store name, address, and operating hours? Additionally, I'd like to see the product fulfillment information for a specific product with the TCIN '51952757'.",
    "relevant APIs": [
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "nearby_stores"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_fulfillment"
      }
    ],
    "query_id": 43933
  },
  {
    "api_list": [
      {
        "category_name": "Sports",
        "tool_name": "Betcity",
        "api_name": "Odds",
        "api_description": "Latest Odds by Betcity",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "Betcity",
        "api_name": "Matches",
        "api_description": "Latest matches by Betcity",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I am curious about the odds for the upcoming boxing matches. Can you provide me with the latest odds for the Tyson Fury vs. Anthony Joshua and Canelo Alvarez vs. Gennady Golovkin fights? Additionally, I would like to see the latest matches in the boxing world.",
    "relevant APIs": [
      {
        "category_name": "Sports",
        "tool_name": "Betcity",
        "api_name": "Odds"
      },
      {
        "category_name": "Sports",
        "tool_name": "Betcity",
        "api_name": "Matches"
      }
    ],
    "query_id": 44066
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndAddress",
        "api_description": "Get powerplants which have address falling into a specific radius",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          }
        ],
        "optional_parameters": [
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "default value is 100 km (100)",
            "default": ""
          },
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "q": "str",
          "total_count": "int",
          "total_pages": "int",
          "current_page": "int",
          "curent_page_count": "int",
          "data": [
            {
              "country_name": "str",
              "latitude": "float",
              "longitude": "float",
              "pp_name": "str",
              "pp_capacity": "float",
              "fuel_primary": "str",
              "fuel_secondary": "str",
              "fuel_tertiary": "str",
              "fuel_other": "str",
              "pp_commissioned": "str",
              "pp_estimated_generation": "float",
              "distance": "float",
              "clean_energy": "str",
              "_list_length": 15
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndGps",
        "api_description": "Get powerplants which have coordinate points falling into a specific radius",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "27.6"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "78.5"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "default value is 100 km (100)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "q": "str",
          "total_count": "int",
          "total_pages": "int",
          "current_page": "int",
          "curent_page_count": "int",
          "data": [
            {
              "country_name": "str",
              "latitude": "float",
              "longitude": "float",
              "pp_name": "str",
              "pp_capacity": "float",
              "fuel_primary": "str",
              "fuel_secondary": "str",
              "fuel_tertiary": "str",
              "fuel_other": "str",
              "pp_commissioned": "float",
              "pp_estimated_generation": "str",
              "distance": "float",
              "clean_energy": "str",
              "_list_length": 2
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterByRadiusAndAddress",
        "api_description": "Get disasters which have address falling into a specific radius for a specific date range",
        "required_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          }
        ],
        "optional_parameters": [
          {
            "name": "radius_km",
            "type": "STRING",
            "description": "Default value: 100",
            "default": "100"
          },
          {
            "name": "page_number",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterByRadiusAndGps",
        "api_description": "Get disasters which have coordinate points falling into a specific radius for a specific date range",
        "required_parameters": [
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "138.89"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "34.23"
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "Default value: 100",
            "default": "100"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetCityExposedByDisasterId",
        "api_description": "Get affected city along with informations by disaster id",
        "required_parameters": [
          {
            "name": "disaster_id",
            "type": "STRING",
            "description": "",
            "default": "FL1101125"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterTypeByDateAndStatus",
        "api_description": "Get disaster by status within a time range",
        "required_parameters": [
          {
            "name": "disaster_status",
            "type": "NUMBER",
            "description": "0 : Past Disaster\n1 : Ongoing Disaster",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterTypeByDate",
        "api_description": "Get disaster by type within a time range",
        "required_parameters": [
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "1 : Earthquake\n2 : Tropical Cyclone\n3 : Floods\n4 : Volcano\n5 : Drought\n6 : WildFire",
            "default": ""
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByGps",
        "api_description": "Get climate score for a specific location mapped to some industries/disasters with a given gps position.",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "48.856613"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "2.352222"
          },
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire",
            "default": ""
          },
          {
            "name": "activity_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByAddress",
        "api_description": "Get climate score for a specific location mapped to some industries/disasters with a given address.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          },
          {
            "name": "activity_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation",
            "default": ""
          },
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to know the climate risk assessment score for the coordinates 48.856613, 2.352222. Can you provide me with the score for all industries and disasters? Additionally, I need the list of power plants within a 100 km radius of these coordinates. Please include their capacity, fuel type, and estimated generation.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByGps"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndGps"
      }
    ],
    "query_id": 44793
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Dividend",
        "api_description": "Contains the annual dividends (split-adjusted without special dividend)\n\nAPI_Dividend\nSyntax:\n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
        "required_parameters": [
          {
            "name": "from",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "1962-01-01"
          },
          {
            "name": "shareuid",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          },
          {
            "name": "API_Dividend",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          },
          {
            "name": "to",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-03-31"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "year": "str",
          "dividend": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Index_Isin",
        "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nisin = search shareuid with ISIN",
        "required_parameters": [
          {
            "name": "API_Index",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          },
          {
            "name": "isin",
            "type": "STRING",
            "description": "",
            "default": "US4592001014"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "shareuid": "str",
          "isin": "str",
          "wkn": "str",
          "currency": "str",
          "shortname": "str",
          "name": "str",
          "country": "str",
          "indizes": "str",
          "sector": "str",
          "lastbalanceupdate": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Index_Name",
        "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name",
        "required_parameters": [
          {
            "name": "name",
            "type": "STRING",
            "description": "",
            "default": "ibm"
          },
          {
            "name": "API_Index",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "shareuid": "str",
          "isin": "str",
          "wkn": "str",
          "currency": "str",
          "shortname": "str",
          "name": "str",
          "country": "str",
          "indizes": "str",
          "sector": "str",
          "lastbalanceupdate": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Index_Wkn",
        "api_description": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nwkn = search shareuid with WKN",
        "required_parameters": [
          {
            "name": "wkn",
            "type": "STRING",
            "description": "",
            "default": "851399"
          },
          {
            "name": "API_Index",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "shareuid": "str",
          "isin": "str",
          "wkn": "str",
          "currency": "str",
          "shortname": "str",
          "name": "str",
          "country": "str",
          "indizes": "str",
          "sector": "str",
          "lastbalanceupdate": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Pricetobook",
        "api_description": "contains the price-book ratio (P / B ratio) for each past trading day",
        "required_parameters": [
          {
            "name": "API_Pricetobook",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          },
          {
            "name": "shareuid",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          },
          {
            "name": "to",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-03-15"
          },
          {
            "name": "from",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2019-12-15"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "date": "str",
          "pb": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Pricetocashflow",
        "api_description": "Contains the price-cash-flow ratio (P / C ratio) for each past trading day\n\nAPI_Pricetocashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
        "required_parameters": [
          {
            "name": "to",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-03-15"
          },
          {
            "name": "from",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-01-06"
          },
          {
            "name": "shareuid",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          },
          {
            "name": "API_Pricetocashflow",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Pricetoearning",
        "api_description": "Contains the price-earnings ratio (P / E ratio) for each past trading day\n\nAPI_Pricetoearning\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
        "required_parameters": [
          {
            "name": "to",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-05-15"
          },
          {
            "name": "API_Pricetoearning",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          },
          {
            "name": "from",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-04-15"
          },
          {
            "name": "shareuid",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Pricetosales",
        "api_description": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
        "required_parameters": [
          {
            "name": "shareuid",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          },
          {
            "name": "to",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-06-08"
          },
          {
            "name": "API_Pricetosales",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          },
          {
            "name": "from",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-05-15"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Roa",
        "api_description": "Contains the profitability (ROA ratio) for the financial year.\n\nAPI_Roa\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
        "required_parameters": [
          {
            "name": "API_Roa",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          },
          {
            "name": "to",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-06-08"
          },
          {
            "name": "from",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2018-05-15"
          },
          {
            "name": "shareuid",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Roe",
        "api_description": "Contains the equity ratio (ROE ratio) for the financial year.\n\nAPI_Roe\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
        "required_parameters": [
          {
            "name": "from",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2018-05-08"
          },
          {
            "name": "shareuid",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          },
          {
            "name": "to",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": "2020-06-08"
          },
          {
            "name": "API_Roe",
            "type": "BOOLEAN",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "Retrieve the shareuid for a company named 'Microsoft Corporation' in order to access its fundamental data. Also, find the price-earnings ratio (P/E ratio) for the share with ISIN US5949181045 from 2020-01-01 to 2021-01-01.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Index_Name"
      },
      {
        "category_name": "Finance",
        "tool_name": "Finanzoo API_Fundamentals",
        "api_name": "API_Pricetoearning"
      }
    ],
    "query_id": 44845
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/index-trend",
        "api_description": "Get index trend earnings history information for a particular stock",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/cashflow-statement",
        "api_description": "Get stock cash flow statements.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/profile",
        "api_description": "Get stock profile information such as company name, descriptions, website, etc...",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/calendar-events",
        "api_description": "Get stock calendar events.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/balance-sheet",
        "api_description": "Get stock balance sheet data.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/recommendation-trend",
        "api_description": "Get stock recommendations and trends.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/net-share-purchase-activity",
        "api_description": "Get net share purchase activity information for a particular stock",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/institution-ownership",
        "api_description": "Get stock institution ownership.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/sec-filings",
        "api_description": "Get stock SEC filings.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/earnings",
        "api_description": "Get earnings information for a particular stock",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "A single symbol",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to analyze the financial performance of Apple Inc. Can you provide me with the stock profile, balance sheet data, cash flow statements, and recommendation trends for AAPL?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/profile"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/balance-sheet"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/cashflow-statement"
      },
      {
        "category_name": "Finance",
        "tool_name": "Yahoo Finance_v2",
        "api_name": "stock/recommendation-trend"
      }
    ],
    "query_id": 45418
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Funds",
        "api_name": "v1GetFundLatestPrice",
        "api_description": "Get fund latest price",
        "required_parameters": [
          {
            "name": "isin",
            "type": "STRING",
            "description": "Fund's ISIN",
            "default": "LU0690375182"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "market": "str",
          "price": "float",
          "humanDate": "str",
          "epochSecs": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Funds",
        "api_name": "v1GetFundHistoricalPrices",
        "api_description": "Get fund's historical prices",
        "required_parameters": [
          {
            "name": "isin",
            "type": "STRING",
            "description": "Fund's ISIN",
            "default": "LU0690375182"
          }
        ],
        "optional_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "Finishing date. Format YYYY-MM-DD.",
            "default": "2020-12-31"
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "Starting date. Format YYYY-MM-DD.",
            "default": "2015-01-25"
          }
        ],
        "method": "GET",
        "template_response": {
          "humanDate": "str",
          "epochSecs": "int",
          "price": "float"
        }
      }
    ],
    "query": "I need to analyze the performance of a mutual fund. Could you fetch the latest price and historical prices of the fund with ISIN LU0690375182? It would be great if you could provide the prices from 2015-01-25 to 2020-12-31.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Funds",
        "api_name": "v1GetFundLatestPrice"
      },
      {
        "category_name": "Finance",
        "tool_name": "Funds",
        "api_name": "v1GetFundHistoricalPrices"
      }
    ],
    "query_id": 45533
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "Get forecastdata by lat/lon",
        "api_description": "get forecast for 14 days for the location Lat/Lon",
        "required_parameters": [
          {
            "name": "LAT",
            "type": "NUMBER",
            "description": "Latitude",
            "default": "51.5"
          },
          {
            "name": "LON",
            "type": "NUMBER",
            "description": "Longitude",
            "default": "-0.6"
          }
        ],
        "optional_parameters": [
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,de,nl,fr,pl,gr,it,cn,ru,cz,pt,es]",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": {
            "city": "str",
            "country": "str",
            "country_name": "str",
            "tz_long": "str",
            "lat": "str",
            "lon": "str",
            "wmo": "str",
            "SI": "str",
            "SIU": "str",
            "CEL": "str"
          },
          "ActualsYesterday": [
            {
              "Tmax": "str",
              "Tmin": "str",
              "sunshine_hours": "str",
              "symbol": "str",
              "symbol_text": "str",
              "TIME": {
                "year": "str",
                "mon": "str",
                "mday": "str",
                "weekday": "str"
              },
              "_list_length": 1
            }
          ],
          "6_hourly_forecast": [
            {
              "FCTTIME": "str",
              "symbol": "str",
              "symbol_text": "str",
              "temp": "str",
              "tdew": "str",
              "rh": "str",
              "pres": "str",
              "wind_bft": "str",
              "wind": "str",
              "wind_direction": "str",
              "wind_direction_dez": "str",
              "wind_gust": "str",
              "rain": "str",
              "rain_chance_0.3mm": "str",
              "_list_length": 57
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "List of all Countries",
        "api_description": "List of all Countries",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,fr,de,nl,es,pt,pl,tr,gr,tr,cn]",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "Countries": [
            {
              "COUNTRY": "str",
              "name": "str",
              "_list_length": 278
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "List of cities in one Country",
        "api_description": "List of cities in one Country",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,fr,pl,pt,es,it,gr,tr,ru,cn,cz]",
            "default": "en"
          },
          {
            "name": "COUNTRY",
            "type": "STRING",
            "description": "Country",
            "default": "UK"
          }
        ],
        "method": "GET",
        "template_response": {
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": {
            "country": "str",
            "countryname": "str",
            "NumberOfCity": "str"
          },
          "Cities": [
            {
              "wmo": "str",
              "name": "str",
              "latitude": "str",
              "longitude": "str",
              "countryCode": "str",
              "_list_length": 700
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "Search location by Name or zip code",
        "api_description": "Search location by Name or zip code and get the key for the forecast",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "ZIPCODE",
            "type": "STRING",
            "description": "zip code of the city",
            "default": ""
          },
          {
            "name": "LANG",
            "type": "STRING",
            "description": "language [en,fr,nl,es,pt,it,tr,gr,cz,pl,ru,cn]",
            "default": "en"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "name of a city",
            "default": "New York"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": [
            {
              "wmo": "str",
              "city": "str",
              "country": "str",
              "country_name": "str",
              "_list_length": 2
            }
          ]
        }
      }
    ],
    "query": "Could you please provide me with the weather forecast for the next 14 days in London, United Kingdom? I would like to know the temperature, humidity, wind speed, and chance of rain for each day.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "Get forecastdata by lat/lon"
      },
      {
        "category_name": "Weather",
        "tool_name": "weather forecast 14 days",
        "api_name": "List of cities in one Country"
      }
    ],
    "query_id": 47032
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "DomainStatus",
        "api_description": "Returns domain status if is webmail or disposable.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "email",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "errors": {
            "status": "bool",
            "code": "int",
            "message": "str"
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "Enrichment",
        "api_description": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person’s name, location and social handles from an email",
        "required_parameters": [
          {
            "name": "email",
            "type": "STRING",
            "description": "",
            "default": "b.mohamed@tomba.io"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "website_url": "str",
            "accept_all": "NoneType",
            "email": "str",
            "first_name": "str",
            "last_name": "str",
            "country": "NoneType",
            "gender": "str",
            "phone_number": "NoneType",
            "position": "str",
            "twitter": "NoneType",
            "linkedin": "str",
            "disposable": "bool",
            "webmail": "bool",
            "full_name": "str",
            "company": "str",
            "score": "int",
            "verification": {
              "date": "str",
              "status": "str"
            },
            "sources": [
              {
                "uri": "str",
                "website_url": "str",
                "extracted_on": "str",
                "last_seen_on": "str",
                "still_on_page": "bool",
                "_list_length": 20
              }
            ]
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "DomainSearch",
        "api_description": "You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user /account/sessions endpoint. Use width, height and quality arguments to change the output settings.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "Domain name from which you want to find the email addresses. For example, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stripe.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
            "default": "stripe.com"
          }
        ],
        "optional_parameters": [
          {
            "name": "department",
            "type": "STRING",
            "description": "Get only email addresses for people working in the selected department(s).",
            "default": "pr"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Specifies the number of email addresses to skip. The default is 1.",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"organization\": {\"location\": {\"country\": \"str\", \"city\": \"str\", \"state\": \"str\", \"street_address\": \"str\"}, \"social_links\": {\"twitter_url\": \"str\", \"facebook_url\": \"str\", \"linkedin_url\": \"str\"}, \"disposable\": \"bool\", \"webmail\": \"bool\", \"website_url\": \"str\", \"phone_number\": \"str\", \"industries\": \"str\", \"postal_code\": \"str\", \"employee_count\": \"int\", \"founded\": \"str\", \"company_size\": \"str\", \"last_updated\": \"str\", \"revenue\": \"str\", \"accept_all\": \"bool\", \"description\": \"str\", \"pattern\": \"str\", \"domain_score\": \"int\", \"organization\": \"str\", \"whois\": {\"registrar_name\": \"str\", \"created_date\": \"str\", \"referral_url\": \"str\"}}, \"emails\": [{\"email\": \"str\", \"first_name\": \"str\", \"last_name\": \"str\", \"full_name\": \"str\", \"gender\": \"str\", \"phone_number\": \"NoneType\", \"type\": \"str\", \"country\": \"str\", \"position\": \"str\", \"department\": \"str\", \"seniority\": \"str\", \"twitter\": \"NoneType\", \"linkedin\": \"str\", \"accept_all\": \"bool\", \"pattern\": \"str\", \"score\": \"int\", \"verification\": {\"date\": \"NoneType\", \"status\": "
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "LinkedinFinder",
        "api_description": "This API endpoint generates or retrieves the most likely email address from a Linkedin URL.",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "The URL of the Linkedin. For example, \"https://www.linkedin.com/in/alex-maccaw-ab592978\".",
            "default": "https://www.linkedin.com/in/alex-maccaw-ab592978"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "website_url": "str",
            "accept_all": "bool",
            "email": "str",
            "first_name": "str",
            "last_name": "str",
            "country": "str",
            "gender": "str",
            "phone_number": "bool",
            "position": "str",
            "twitter": "str",
            "linkedin": "str",
            "disposable": "bool",
            "webmail": "bool",
            "full_name": "str",
            "company": "str",
            "score": "int",
            "verification": {
              "date": "NoneType",
              "status": "NoneType"
            },
            "sources": [
              {
                "uri": "str",
                "website_url": "str",
                "extracted_on": "str",
                "last_seen_on": "str",
                "still_on_page": "bool",
                "_list_length": 2
              }
            ]
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "EmailVerifier",
        "api_description": "verify the deliverability of an email address.",
        "required_parameters": [
          {
            "name": "email",
            "type": "STRING",
            "description": "The email address you want to verify.",
            "default": "b.mohamed@tomba.io"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "email": {
              "mx_records": "bool",
              "smtp_server": "bool",
              "smtp_check": "bool",
              "accept_all": "bool",
              "block": "bool",
              "email": "str",
              "gibberish": "bool",
              "disposable": "bool",
              "webmail": "bool",
              "regex": "bool",
              "whois": {
                "registrar_name": "str",
                "created_date": "str",
                "referral_url": "str"
              },
              "status": "str",
              "result": "str",
              "score": "int"
            },
            "sources": [
              {
                "uri": "str",
                "website_url": "str",
                "extracted_on": "str",
                "last_seen_on": "str",
                "still_on_page": "bool",
                "_list_length": 20
              }
            ]
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "EmailFinder",
        "api_description": "generates or retrieves the most likely email address from a domain name, a first name and a last name.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "Domain name from which you want to find the email addresses. For example, \"stripe.com\"",
            "default": "stripe.com"
          },
          {
            "name": "first_name",
            "type": "STRING",
            "description": "The person's first name. It doesn't need to be in lowercase.",
            "default": "Moskoz"
          },
          {
            "name": "last_name",
            "type": "STRING",
            "description": "The person's last name. It doesn't need to be in lowercase.",
            "default": "Dustin"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "website_url": "str",
            "accept_all": "bool",
            "email": "str",
            "first_name": "str",
            "last_name": "str",
            "country": "str",
            "gender": "str",
            "phone_number": "bool",
            "position": "str",
            "twitter": "NoneType",
            "linkedin": "str",
            "full_name": "str",
            "company": "str",
            "score": "int",
            "verification": {
              "date": "str",
              "status": "str"
            },
            "sources": "empty list"
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "AuthorFinder",
        "api_description": "This API endpoint generates or retrieves the most likely email address from a blog post url.",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "The URL of the article. For example, \"https://clearbit.com/blog/company-name-to-domain-api\".",
            "default": "https://clearbit.com/blog/company-name-to-domain-api"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "website_url": "str",
            "accept_all": "bool",
            "email": "str",
            "first_name": "str",
            "last_name": "str",
            "country": "str",
            "gender": "str",
            "phone_number": "NoneType",
            "position": "str",
            "twitter": "str",
            "linkedin": "str",
            "disposable": "bool",
            "webmail": "bool",
            "full_name": "str",
            "company": "str",
            "score": "int",
            "verification": {
              "date": "str",
              "status": "str"
            },
            "sources": [
              {
                "uri": "str",
                "website_url": "str",
                "extracted_on": "str",
                "last_seen_on": "str",
                "still_on_page": "bool",
                "_list_length": 20
              }
            ],
            "info": {
              "title": "str",
              "description": "str"
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "EmailCount",
        "api_description": "Domain name from which you want to find the email addresses.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "The email address you want to find sources.",
            "default": "tomba.io"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "total": "int",
            "personal_emails": "int",
            "generic_emails": "int",
            "department": {
              "engineering": "int",
              "finance": "int",
              "hr": "int",
              "it": "int",
              "marketing": "int",
              "operations": "int",
              "management": "int",
              "sales": "int",
              "legal": "int",
              "support": "int",
              "communication": "int",
              "executive": "int"
            },
            "seniority": {
              "junior": "int",
              "senior": "int",
              "executive": "int"
            }
          }
        }
      }
    ],
    "query": "I need to verify if the domain 'example.com' is a webmail or disposable. Also, retrieve the person and company data based on the email 'john.doe@example.com'.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "DomainStatus"
      },
      {
        "category_name": "Data",
        "tool_name": "Tomba",
        "api_name": "Enrichment"
      }
    ],
    "query_id": 50984
  },
  {
    "api_list": [
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_search",
        "api_description": "Returns the list of products based on keyword.",
        "required_parameters": [
          {
            "name": "store_id",
            "type": "STRING",
            "description": "",
            "default": "1122"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "womens shoes"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": "0"
          },
          {
            "name": "count",
            "type": "STRING",
            "description": "maximum 25",
            "default": "25"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_details",
        "api_description": "Returns detailed product information.\nIncluding:\n```\nproduct variants (with different dimension like size, color and etc.\nratings and reviews\nitem images/videos\nprice\npromotion\nchild products\n```",
        "required_parameters": [
          {
            "name": "store_id",
            "type": "STRING",
            "description": "The id of the store which product details data is being retrieved from. (optional)\nValue comes from nearby store API.",
            "default": "3330"
          },
          {
            "name": "tcin",
            "type": "STRING",
            "description": "Target product id.\nValue comes from product search API.",
            "default": "16251811"
          }
        ],
        "optional_parameters": [
          {
            "name": "longitude",
            "type": "STRING",
            "description": "User's longitude information. (optional)",
            "default": "-122.200"
          },
          {
            "name": "latitude",
            "type": "STRING",
            "description": "User's latitude information. (optional)",
            "default": "37.820"
          },
          {
            "name": "zip",
            "type": "STRING",
            "description": "User's zipcode. (optional)",
            "default": "94611"
          },
          {
            "name": "state",
            "type": "STRING",
            "description": "State code of user's location. (optional)",
            "default": "CA"
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"item\": {\"enrichment\": {\"images\": {\"primary_image\": \"str\", \"alternate_image_urls\": [\"list of str with length 7\"], \"content_labels\": [{\"image_url\": \"str\", \"_list_length\": 9}], \"alternate_images\": [\"list of str with length 7\"], \"primary_image_url\": \"str\", \"base_url\": \"str\", \"swatch_image\": \"str\", \"swatch_image_url\": \"str\"}, \"return_policies\": [{\"user_type\": \"str\", \"day_count\": \"int\", \"_list_length\": 2}], \"buy_url\": \"str\", \"size_chart_fragment_url\": \"str\", \"videos\": [{\"video_title\": \"str\", \"video_poster_image\": \"str\", \"video_captions\": [{\"caption_url\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"video_files\": [{\"video_url\": \"str\", \"video_height_pixels\": \"str\", \"mime_type\": \"str\", \"_list_length\": 1}], \"video_length_seconds\": \"str\", \"_list_length\": 1}]}, \"is_limited_time_offer\": \"bool\", \"relationship_type_code\": \"str\", \"primary_brand\": {\"linking_id\": \"str\", \"name\": \"str\", \"canonical_url\": \"str\"}, \"handling\": {\"import_designation_description\": \"str\"},"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "nearby_stores",
        "api_description": "Returns the list of stores near to specified ZIP code.",
        "required_parameters": [
          {
            "name": "place",
            "type": "STRING",
            "description": "",
            "default": "10010"
          }
        ],
        "optional_parameters": [
          {
            "name": "within",
            "type": "STRING",
            "description": "Radius of searching distance in miles",
            "default": "100"
          },
          {
            "name": "limit",
            "type": "STRING",
            "description": "",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "nearby_stores": {
              "stores": [
                {
                  "store_id": "str",
                  "mailing_address": {
                    "country_code": "str",
                    "address_line1": "str",
                    "city": "str",
                    "state": "str",
                    "region": "str",
                    "postal_code": "str"
                  },
                  "location_name": "str",
                  "main_voice_phone_number": "str",
                  "distance": "float",
                  "rolling_operating_hours": {
                    "main_hours": {
                      "days": [
                        {
                          "date": "str",
                          "hours": [
                            {
                              "end_date": "str",
                              "end_time": "str",
                              "begin_time": "str",
                              "_list_length": 1
                            }
                          ],
                          "day_name": "str",
                          "is_open": "bool",
                          "_list_length": 14
                        }
                      ]
                    }
                  },
                  "status": "str",
                  "_list_length": 20
                }
              ],
              "count": "int"
            }
          }
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_fulfillment",
        "api_description": "Returns product fulfillment information.",
        "required_parameters": [
          {
            "name": "tcin",
            "type": "STRING",
            "description": "Target product id.\nValue comes from product search API.\n",
            "default": "51952757"
          }
        ],
        "optional_parameters": [
          {
            "name": "zip",
            "type": "STRING",
            "description": "The zipcode of user's search location.\n(optional)",
            "default": "94611"
          },
          {
            "name": "state",
            "type": "STRING",
            "description": "State code where is user is located at. (optional)",
            "default": "CA"
          },
          {
            "name": "longitude",
            "type": "STRING",
            "description": "User's longitude Information (optional)",
            "default": "-122.200"
          },
          {
            "name": "store_id",
            "type": "STRING",
            "description": "The id of the Target store from which the fulfillment information is being retrieved.\nValue comes from nearby stores api.\n(optional)",
            "default": "3330"
          },
          {
            "name": "latitude",
            "type": "STRING",
            "description": "User's longitude Information (optional)",
            "default": "37.820"
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"product\": {\"tcin\": \"str\", \"__typename\": \"str\", \"fulfillment\": {\"scheduled_delivery\": {\"availability_status\": \"str\", \"location_available_to_promise_quantity\": \"float\"}, \"is_out_of_stock_in_all_store_locations\": \"bool\", \"product_id\": \"str\", \"shipping_options\": {\"availability_status\": \"str\", \"available_to_promise_quantity\": \"float\", \"services\": [{\"max_delivery_date\": \"str\", \"shipping_method_id\": \"str\", \"min_delivery_date\": \"str\", \"shipping_method_short_description\": \"str\", \"cutoff\": \"str\", \"is_base_shipping_method\": \"bool\", \"service_level_description\": \"str\", \"is_two_day_shipping\": \"bool\", \"_list_length\": 1}], \"loyalty_availability_status\": \"str\"}, \"store_options\": [{\"location_available_to_promise_quantity\": \"float\", \"order_pickup\": {\"availability_status\": \"str\"}, \"in_store_only\": {\"availability_status\": \"str\"}, \"search_response_store_type\": \"str\", \"store\": {\"mailing_address\": {\"address_line1\": \"str\", \"city\": \"str\", \"state\": \"str\", \"postal_code\": \"str\"}, \"location_name\": \"str\"}"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "search_autocomplete",
        "api_description": "Product autocompletion based on search keyword.",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "tv"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I am planning a family vacation to New York City. Can you provide me with a list of nearby stores in the 10010 ZIP code? Additionally, I would like to search for women's shoes and get detailed product information, including images, prices, and reviews.",
    "relevant APIs": [
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "nearby_stores"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_search"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Target.com Shopping - API",
        "api_name": "product_details"
      }
    ],
    "query_id": 52332
  },
  {
    "api_list": [
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing Availability",
        "api_description": "Retrieve listing availability and stay length rules for the requested month.\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.",
        "required_parameters": [
          {
            "name": "year",
            "type": "NUMBER",
            "description": "the year",
            "default": "2024"
          },
          {
            "name": "id",
            "type": "STRING",
            "description": "the listing id\n",
            "default": "619966061834034729"
          },
          {
            "name": "month",
            "type": "NUMBER",
            "description": "the month",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing status Full",
        "api_description": "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "the listing id",
            "default": "619966061834034729"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing Prices",
        "api_description": "Retrieve listing prices for the requested month",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "the listing id\n",
            "default": "619966061834034729"
          },
          {
            "name": "month",
            "type": "STRING",
            "description": "the month",
            "default": "1"
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "the year",
            "default": "2024"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing status",
        "api_description": "Retrieve the calculated status (available/not available for stay) of a listing based on previous and following days stay rules.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "the listing id",
            "default": "619966061834034729"
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "the year",
            "default": "2024"
          },
          {
            "name": "month",
            "type": "NUMBER",
            "description": "the month",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Prices and Availability by administrative divisions",
        "api_description": "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in an geographical administrative division. Geographic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Can be filtered on bedrooms and max guest capacity.",
        "required_parameters": [
          {
            "name": "month",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "country_code",
            "type": "STRING",
            "description": "",
            "default": "IT"
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "",
            "default": "2024"
          }
        ],
        "optional_parameters": [
          {
            "name": "admin3",
            "type": "STRING",
            "description": "",
            "default": "Roma"
          },
          {
            "name": "bedrooms",
            "type": "STRING",
            "description": "",
            "default": "2"
          },
          {
            "name": "admin1",
            "type": "STRING",
            "description": "",
            "default": "Lazio"
          },
          {
            "name": "admin2",
            "type": "STRING",
            "description": "",
            "default": "Citta metropolitana di Roma Capitale"
          },
          {
            "name": "maxGuestCapacity",
            "type": "NUMBER",
            "description": "",
            "default": "4"
          },
          {
            "name": "place",
            "type": "STRING",
            "description": "",
            "default": "Trastevere"
          },
          {
            "name": "admin4",
            "type": "STRING",
            "description": "",
            "default": "Municipio Roma I"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Get administrative divisions",
        "api_description": "Retrieve geographical admin names to be used in Listing by georef endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie cities with the same name but in different countries). Returns 50 results",
        "required_parameters": [
          {
            "name": "countrycode",
            "type": "STRING",
            "description": "",
            "default": "IT"
          }
        ],
        "optional_parameters": [
          {
            "name": "admin2",
            "type": "STRING",
            "description": "",
            "default": "RM"
          },
          {
            "name": "admin1",
            "type": "STRING",
            "description": "",
            "default": "07"
          },
          {
            "name": "admin4",
            "type": "STRING",
            "description": "",
            "default": "05809101"
          },
          {
            "name": "admin3",
            "type": "STRING",
            "description": "",
            "default": "058091"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Prices and Availability by lat lng",
        "api_description": "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in a range from a given geographical point. Max range is 20000 meters. Can be filtered on bedrooms and max guest capacity.",
        "required_parameters": [
          {
            "name": "year",
            "type": "NUMBER",
            "description": "the year",
            "default": "2024"
          },
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "latitude",
            "default": "28.0852473"
          },
          {
            "name": "lng",
            "type": "NUMBER",
            "description": "longitude",
            "default": "-16.7349705"
          },
          {
            "name": "range",
            "type": "NUMBER",
            "description": "range in meters from latitude and longitude point",
            "default": "500"
          },
          {
            "name": "month",
            "type": "STRING",
            "description": "the month",
            "default": "1"
          }
        ],
        "optional_parameters": [
          {
            "name": "bedrooms",
            "type": "NUMBER",
            "description": "number of bedrooms",
            "default": "1"
          },
          {
            "name": "maxGuestCapacity",
            "type": "NUMBER",
            "description": "Max guest the listing can accomodate",
            "default": "2"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Amenities",
        "api_description": "Retrieves amenities ids And descriptions. Returns 50 results",
        "required_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "index to start from",
            "default": "0"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Markets",
        "api_description": "Retrieve Market names to be used in Listing by market endpoint. Returns 50 results",
        "required_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "index to start from",
            "default": "0"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Connect test",
        "api_description": "No parameters needed. Useful to test connectivity and authentication",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a travel enthusiast and I want to know the availability and stay length rules for a specific Airbnb listing in Rome. Can you retrieve this information for me? The listing ID is 619966061834034729 and the month is January 2024.",
    "relevant APIs": [
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing Availability"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing status"
      }
    ],
    "query_id": 53959
  },
  {
    "api_list": [
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "OfferInfo",
        "api_description": "get offer data",
        "required_parameters": [
          {
            "name": "joburl",
            "type": "STRING",
            "description": "",
            "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "SearchOffers",
        "api_description": "get all offers url",
        "required_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "Secretary"
          },
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "Frankfurt"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "nextOffset": "int",
          "currentOffset": "str",
          "offers": [
            "list of str with length 10"
          ]
        }
      }
    ],
    "query": "My company is expanding its team in Frankfurt. Can you find the job offers for the keyword 'Developer'? Additionally, provide the job details for the first offer on the list.",
    "relevant APIs": [
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "SearchOffers"
      },
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "OfferInfo"
      }
    ],
    "query_id": 56737
  },
  {
    "api_list": [
      {
        "category_name": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "Face Animer",
        "api_name": "Get Result",
        "api_description": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.",
        "required_parameters": [
          {
            "name": "taskId",
            "type": "STRING",
            "description": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data. ",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "int",
          "data": "NoneType",
          "msg": "str",
          "time": "int",
          "requestId": "str"
        }
      },
      {
        "category_name": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "Face Animer",
        "api_name": "Create Job ID",
        "api_description": "Create Job ID",
        "required_parameters": [
          {
            "name": "templateId",
            "type": "STRING",
            "description": "templateId could be from 0 to 21 (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)",
            "default": ""
          },
          {
            "name": "imageUrl",
            "type": "STRING",
            "description": "Enter valid image url",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "int",
          "data": "NoneType",
          "msg": "str",
          "time": "int",
          "requestId": "str"
        }
      }
    ],
    "query": "My company is developing a project that requires facial animation effects. Can you generate a job ID for an image with the URL 'https://example.com/character.png' using template ID 19? After creating the job ID, we need to retrieve the result using the provided task ID.",
    "relevant APIs": [
      {
        "category_name": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "Face Animer",
        "api_name": "Create Job ID"
      },
      {
        "category_name": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "Face Animer",
        "api_name": "Get Result"
      }
    ],
    "query_id": 58412
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "transactions",
        "api_description": "Show transactions given a zipcode. The API returns 50 records each time in descending order by date and supports pagination. This API requires a subscription cost.\n\nThe returned data shows the summary of information. To get further detail (such as the unit of a building that posts the most recent transaction, use summary API.\n\nSample data of the API when query zipcode 10019 is:\n \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"310\",\n        \"STREET\": \"W 56th St\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL COOP UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-07-21T00:00:00.000Z\",\n      \"lastSalesAmount\": 514000,\n      \"maxSalesAmount\": 1359000,\n      \"TotalRecords\": 74\n    },",
        "required_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "",
            "default": "10019"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "count": "int",
          "data": [
            {
              "_id": {
                "STREET_NUMBER": "str",
                "STREET": "str",
                "PROPERTY_TYPE": "str",
                "ZIPCODE": "str",
                "STATE": "str"
              },
              "lastSalesDate": "str",
              "lastSalesAmount": "int",
              "maxSalesAmount": "int",
              "TotalRecords": "int",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "detail",
        "api_description": "Return all detailed historical transactions of a given address. To call this API, it requires to call summary API first using address information. Then use the Id value returned from the summary API and call this API with the same Id. This API requires a subscription cost.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "6144a05f3afc5ca06e88a2ab"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "data": "empty list"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "summary",
        "api_description": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
        "required_parameters": [
          {
            "name": "number",
            "type": "STRING",
            "description": "",
            "default": "220"
          },
          {
            "name": "street",
            "type": "STRING",
            "description": "",
            "default": "Central Park S"
          }
        ],
        "optional_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "",
            "default": "10019"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "count": "int",
          "data": [
            {
              "_id": {
                "id": "str",
                "Loc": {
                  "coordinates": [
                    "list of float with length 2"
                  ],
                  "type": "str"
                },
                "STREET_NUMBER": "str",
                "STREET": "str",
                "UNIT": "str",
                "PROPERTY_TYPE": "str",
                "ZIPCODE": "str",
                "STATE": "str"
              },
              "lastSalesDate": "str",
              "lastSalesAmount": "int",
              "maxSalesAmount": "int",
              "SQFT": "int",
              "TotalRecords": "int",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "address",
        "api_description": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
        "required_parameters": [
          {
            "name": "street",
            "type": "STRING",
            "description": "",
            "default": "Central Park S"
          },
          {
            "name": "number",
            "type": "STRING",
            "description": "",
            "default": "220"
          }
        ],
        "optional_parameters": [
          {
            "name": "zipcode",
            "type": "STRING",
            "description": "",
            "default": "10019"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "err": "NoneType",
          "data": [
            {
              "_id": {
                "STREET_NUMBER": "str",
                "STREET": "str",
                "PROPERTY_TYPE": "str",
                "ZIPCODE": "str",
                "STATE": "str"
              },
              "Location": {
                "coordinates": [
                  "list of float with length 2"
                ],
                "type": "str"
              },
              "lastSalesDate": "str",
              "lastSalesAmount": "int",
              "maxSalesAmount": "int",
              "TotalRecords": "int",
              "_list_length": 5
            }
          ]
        }
      }
    ],
    "query": "As a real estate developer, I'm interested in analyzing the market trends for a specific area. Can you provide me with a summary of property records and transactions for an address on Central Park S in zipcode 10019? Additionally, I would like to see the detailed historical transactions for that address.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "summary"
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "transactions"
      },
      {
        "category_name": "Data",
        "tool_name": "Real Estate Records",
        "api_name": "detail"
      }
    ],
    "query_id": 58705
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Rentalizer",
        "api_description": "Rental Property Calculator by address",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "458 19th St, Santa Monica, CA 90402"
          }
        ],
        "optional_parameters": [
          {
            "name": "bathrooms",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          },
          {
            "name": "accommodates",
            "type": "STRING",
            "description": "",
            "default": "2"
          },
          {
            "name": "bedrooms",
            "type": "NUMBER",
            "description": "",
            "default": "2"
          },
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"comps\": [{\"accommodates\": \"float\", \"airbnb_property_id\": \"str\", \"bathrooms\": \"float\", \"bedrooms\": \"float\", \"cover_img\": \"str\", \"distance_meters\": \"int\", \"listing_url\": \"str\", \"location\": {\"lat\": \"float\", \"lng\": \"float\"}, \"platforms\": {\"airbnb_property_id\": \"NoneType\", \"vrbo_property_id\": \"str\"}, \"property_type\": \"str\", \"rating\": \"float\", \"reviews\": \"int\", \"room_type\": \"str\", \"stats\": {\"adr\": {\"ltm\": \"int\"}, \"days_available\": {\"ltm\": \"int\"}, \"occupancy\": {\"ltm\": \"float\"}, \"revenue\": {\"ltm\": \"int\"}, \"revenue_potential\": {\"ltm\": \"int\"}}, \"title\": \"str\", \"_list_length\": 12}], \"load_city\": \"NoneType\", \"property_details\": {\"accommodates\": \"int\", \"address\": \"str\", \"address_city_id\": \"int\", \"address_lookup\": \"str\", \"address_region_id\": [\"list of int with length 1\"], \"bathrooms\": \"float\", \"bedrooms\": \"int\", \"currency_symbol\": \"str\", \"location\": {\"lat\": \"float\", \"lng\": \"float\"}, \"property_value\": \"int\", \"zipcode\": \"str\"}, \"property_stats\": {\"adr\": {\"2023\": {\"10\": \"float\", \"11\": \"float"
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Property listings",
        "api_description": "Get rental properties of Airbnb and Vrbo by location and date.",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "room_types",
            "type": "STRING",
            "description": "You can choose multiple by separating by comma.\nPossible values : **(entire_home, private_room, shared_room)**.\n",
            "default": ""
          },
          {
            "name": "number_of_months",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "bedrooms_max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "accommodates_max",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "start_month",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "bedrooms_min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "show_regions",
            "type": "BOOLEAN",
            "description": "",
            "default": ""
          },
          {
            "name": "accommodates_min",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": "native"
          },
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Rental ratings",
        "api_description": "Returns rental ratings",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Suggest region",
        "api_description": "Returns suggested regions by keyword",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Active listings",
        "api_description": "Returns active rentals",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          },
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "",
            "default": "2019"
          },
          {
            "name": "start_month",
            "type": "NUMBER",
            "description": "",
            "default": "5"
          },
          {
            "name": "number_of_months",
            "type": "NUMBER",
            "description": "",
            "default": "36"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Top property managers",
        "api_description": "Returns the largest property managers",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Rental amenities",
        "api_description": "Returns rental amenities",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Rental settings",
        "api_description": "Returns rental settings.",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Overview",
        "api_description": "Returns overview stats (ADR, OCC ,Revenue ..) of a location rental data",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "santa monica"
          }
        ],
        "optional_parameters": [
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "My friend is looking for rental properties in Santa Monica. Can you provide me with a list of rental properties in Santa Monica, including their amenities? It would be great if you could also include the rental prices and currency.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Property listings"
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Rental amenities"
      },
      {
        "category_name": "Data",
        "tool_name": "Airdna",
        "api_name": "Rental settings"
      }
    ],
    "query_id": 58826
  },
  {
    "api_list": [
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User By Rest ID",
        "api_description": "User By Rest ID",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID",
            "default": "44196397"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "Tweet Retweeters",
        "api_description": "Tweet Retweeters",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Tweet ID",
            "default": "1485953263040188416"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "Tweet Favoriters",
        "api_description": "Tweet Favoriters",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Tweet ID",
            "default": "1485953263040188416"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User Media",
        "api_description": "User Media",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User By Screen Name",
        "api_description": "User By Screen Name",
        "required_parameters": [
          {
            "name": "username",
            "type": "STRING",
            "description": "Username",
            "default": "elonmusk"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User Followers",
        "api_description": "User Followers",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User Likes",
        "api_description": "User Likes",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User Tweets & Replies",
        "api_description": "User Tweets & Replies",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "40"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "v2 / User Tweets & Replies",
        "api_description": "v2 / User Tweets & Replies",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "40"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "Tweet Detail & Conversation",
        "api_description": "Tweet Detail & Conversation",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Tweet ID",
            "default": "1485953263040188416"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET"
      }
    ],
    "query": "Help me find the followers of a user with the Twitter ID 44196397. I would like to know the usernames and follower counts of each follower. Please include a cursor for other results if available.",
    "relevant APIs": [
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User Followers"
      },
      {
        "category_name": "Social",
        "tool_name": "Twitter_v4",
        "api_name": "User By Rest ID"
      }
    ],
    "query_id": 64662
  },
  {
    "api_list": [
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "OfferInfo",
        "api_description": "get offer data",
        "required_parameters": [
          {
            "name": "joburl",
            "type": "STRING",
            "description": "",
            "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "SearchOffers",
        "api_description": "get all offers url",
        "required_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "Secretary"
          },
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "Frankfurt"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "nextOffset": "int",
          "currentOffset": "str",
          "offers": [
            "list of str with length 10"
          ]
        }
      }
    ],
    "query": "Can you help me search for job offers in Frankfurt? I am interested in the URLs of the latest offers. Additionally, please fetch the details of each offer, including the job description, requirements, and company information.",
    "relevant APIs": [
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "SearchOffers"
      },
      {
        "category_name": "Search",
        "tool_name": "Google Jobs",
        "api_name": "OfferInfo"
      }
    ],
    "query_id": 65119
  },
  {
    "api_list": [
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get content",
        "api_description": "Gets image, video, and audio data sent by users.",
        "required_parameters": [
          {
            "name": "messageId",
            "type": "STRING",
            "description": "Message ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get rich menu ID of user",
        "api_description": "Gets the ID of the rich menu linked to a user.",
        "required_parameters": [
          {
            "name": "userId",
            "type": "STRING",
            "description": "User ID. Found in the source object of webhook event objects. Do not use the LINE ID used in LINE.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Download rich menu image",
        "api_description": "Downloads an image associated with a rich menu.",
        "required_parameters": [
          {
            "name": "richMenuId",
            "type": "STRING",
            "description": "ID of the rich menu with the image to be downloaded",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get rich menu list",
        "api_description": "Gets a list of all uploaded rich menus.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get rich menu",
        "api_description": "Gets a rich menu via a rich menu ID.",
        "required_parameters": [
          {
            "name": "richMenuId",
            "type": "STRING",
            "description": "ID of an uploaded rich menu",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get profile",
        "api_description": "Gets user profile information.",
        "required_parameters": [
          {
            "name": "userId",
            "type": "STRING",
            "description": "User ID that is returned in a webhook event object. Do not use the LINE ID found on LINE.",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get default rich menu ID",
        "api_description": "Gets the ID of the default rich menu set with the Messaging API.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get number of sent reply messages",
        "api_description": "Gets the number of messages sent with the /bot/message/reply endpoint.",
        "required_parameters": [
          {
            "name": "date\t",
            "type": "STRING",
            "description": "Date the messages were sent. Format: yyyyMMdd (Example: 20191231) Timezone: UTC+9",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "Could you please provide me with the ID of the rich menu linked to the user with the ID '12345'? Furthermore, I would like to download the image associated with the rich menu having the ID '67890'.",
    "relevant APIs": [
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Get rich menu ID of user"
      },
      {
        "category_name": "Communication",
        "tool_name": "LINE Messaging",
        "api_name": "Download rich menu image"
      }
    ],
    "query_id": 66927
  },
  {
    "api_list": [
      {
        "category_name": "Sports",
        "tool_name": "Betbro Sportbook",
        "api_name": "/fixture_tree/InPlay/sport/{sport_id}",
        "api_description": "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures.\n",
        "required_parameters": [
          {
            "name": "sport_id",
            "type": "NUMBER",
            "description": "",
            "default": 1
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "Betbro Sportbook",
        "api_name": "/fixture_tree/PreGame/sport/{sport_id}",
        "api_description": "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures.\n",
        "required_parameters": [
          {
            "name": "sport_id",
            "type": "NUMBER",
            "description": "",
            "default": 1
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Sports",
        "tool_name": "Betbro Sportbook",
        "api_name": "/fixture/{fixture_id}",
        "api_description": "Get full fixture SportBook\nwhat the fuck is going on !\n",
        "required_parameters": [
          {
            "name": "fixture_id",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a sports enthusiast and I want to stay updated on upcoming football matches. Can you provide me with a tree list of fixtures suitable for constructing a SportBook navigation side menu? I'm specifically interested in fixtures for sport ID 1.",
    "relevant APIs": [
      {
        "category_name": "Sports",
        "tool_name": "Betbro Sportbook",
        "api_name": "/fixture_tree/InPlay/sport/{sport_id}"
      },
      {
        "category_name": "Sports",
        "tool_name": "Betbro Sportbook",
        "api_name": "/fixture_tree/PreGame/sport/{sport_id}"
      }
    ],
    "query_id": 69717
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndAddress",
        "api_description": "Get powerplants which have address falling into a specific radius",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          }
        ],
        "optional_parameters": [
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "default value is 100 km (100)",
            "default": ""
          },
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "q": "str",
          "total_count": "int",
          "total_pages": "int",
          "current_page": "int",
          "curent_page_count": "int",
          "data": [
            {
              "country_name": "str",
              "latitude": "float",
              "longitude": "float",
              "pp_name": "str",
              "pp_capacity": "float",
              "fuel_primary": "str",
              "fuel_secondary": "str",
              "fuel_tertiary": "str",
              "fuel_other": "str",
              "pp_commissioned": "str",
              "pp_estimated_generation": "float",
              "distance": "float",
              "clean_energy": "str",
              "_list_length": 15
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndGps",
        "api_description": "Get powerplants which have coordinate points falling into a specific radius",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "27.6"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "78.5"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "default value is 100 km (100)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "q": "str",
          "total_count": "int",
          "total_pages": "int",
          "current_page": "int",
          "curent_page_count": "int",
          "data": [
            {
              "country_name": "str",
              "latitude": "float",
              "longitude": "float",
              "pp_name": "str",
              "pp_capacity": "float",
              "fuel_primary": "str",
              "fuel_secondary": "str",
              "fuel_tertiary": "str",
              "fuel_other": "str",
              "pp_commissioned": "float",
              "pp_estimated_generation": "str",
              "distance": "float",
              "clean_energy": "str",
              "_list_length": 2
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterByRadiusAndAddress",
        "api_description": "Get disasters which have address falling into a specific radius for a specific date range",
        "required_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          }
        ],
        "optional_parameters": [
          {
            "name": "radius_km",
            "type": "STRING",
            "description": "Default value: 100",
            "default": "100"
          },
          {
            "name": "page_number",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterByRadiusAndGps",
        "api_description": "Get disasters which have coordinate points falling into a specific radius for a specific date range",
        "required_parameters": [
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "138.89"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "34.23"
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "Default value: 100",
            "default": "100"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetCityExposedByDisasterId",
        "api_description": "Get affected city along with informations by disaster id",
        "required_parameters": [
          {
            "name": "disaster_id",
            "type": "STRING",
            "description": "",
            "default": "FL1101125"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterTypeByDateAndStatus",
        "api_description": "Get disaster by status within a time range",
        "required_parameters": [
          {
            "name": "disaster_status",
            "type": "NUMBER",
            "description": "0 : Past Disaster\n1 : Ongoing Disaster",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterTypeByDate",
        "api_description": "Get disaster by type within a time range",
        "required_parameters": [
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "1 : Earthquake\n2 : Tropical Cyclone\n3 : Floods\n4 : Volcano\n5 : Drought\n6 : WildFire",
            "default": ""
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByGps",
        "api_description": "Get climate score for a specific location mapped to some industries/disasters with a given gps position.",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "48.856613"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "2.352222"
          },
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire",
            "default": ""
          },
          {
            "name": "activity_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByAddress",
        "api_description": "Get climate score for a specific location mapped to some industries/disasters with a given address.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          },
          {
            "name": "activity_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation",
            "default": ""
          },
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to assess the climate risks of a specific location using GPS coordinates. Can you give me the climate score for the coordinates (40.7128, -74.0060) and also provide me with the list of power plants within a 50 km radius?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByGps"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndGps"
      }
    ],
    "query_id": 69972
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndAddress",
        "api_description": "Get powerplants which have address falling into a specific radius",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          }
        ],
        "optional_parameters": [
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "default value is 100 km (100)",
            "default": ""
          },
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "q": "str",
          "total_count": "int",
          "total_pages": "int",
          "current_page": "int",
          "curent_page_count": "int",
          "data": [
            {
              "country_name": "str",
              "latitude": "float",
              "longitude": "float",
              "pp_name": "str",
              "pp_capacity": "float",
              "fuel_primary": "str",
              "fuel_secondary": "str",
              "fuel_tertiary": "str",
              "fuel_other": "str",
              "pp_commissioned": "str",
              "pp_estimated_generation": "float",
              "distance": "float",
              "clean_energy": "str",
              "_list_length": 15
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndGps",
        "api_description": "Get powerplants which have coordinate points falling into a specific radius",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "27.6"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "78.5"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "default value is 100 km (100)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "q": "str",
          "total_count": "int",
          "total_pages": "int",
          "current_page": "int",
          "curent_page_count": "int",
          "data": [
            {
              "country_name": "str",
              "latitude": "float",
              "longitude": "float",
              "pp_name": "str",
              "pp_capacity": "float",
              "fuel_primary": "str",
              "fuel_secondary": "str",
              "fuel_tertiary": "str",
              "fuel_other": "str",
              "pp_commissioned": "float",
              "pp_estimated_generation": "str",
              "distance": "float",
              "clean_energy": "str",
              "_list_length": 2
            }
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterByRadiusAndAddress",
        "api_description": "Get disasters which have address falling into a specific radius for a specific date range",
        "required_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          }
        ],
        "optional_parameters": [
          {
            "name": "radius_km",
            "type": "STRING",
            "description": "Default value: 100",
            "default": "100"
          },
          {
            "name": "page_number",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterByRadiusAndGps",
        "api_description": "Get disasters which have coordinate points falling into a specific radius for a specific date range",
        "required_parameters": [
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "138.89"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "34.23"
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "radius_km",
            "type": "NUMBER",
            "description": "Default value: 100",
            "default": "100"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetCityExposedByDisasterId",
        "api_description": "Get affected city along with informations by disaster id",
        "required_parameters": [
          {
            "name": "disaster_id",
            "type": "STRING",
            "description": "",
            "default": "FL1101125"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterTypeByDateAndStatus",
        "api_description": "Get disaster by status within a time range",
        "required_parameters": [
          {
            "name": "disaster_status",
            "type": "NUMBER",
            "description": "0 : Past Disaster\n1 : Ongoing Disaster",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetDisasterTypeByDate",
        "api_description": "Get disaster by type within a time range",
        "required_parameters": [
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "1 : Earthquake\n2 : Tropical Cyclone\n3 : Floods\n4 : Volcano\n5 : Drought\n6 : WildFire",
            "default": ""
          },
          {
            "name": "end_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "",
            "default": "DD-MM-YYYY"
          }
        ],
        "optional_parameters": [
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByGps",
        "api_description": "Get climate score for a specific location mapped to some industries/disasters with a given gps position.",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "48.856613"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "2.352222"
          },
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire",
            "default": ""
          },
          {
            "name": "activity_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByAddress",
        "api_description": "Get climate score for a specific location mapped to some industries/disasters with a given address.",
        "required_parameters": [
          {
            "name": "address",
            "type": "STRING",
            "description": "",
            "default": "Paris,France"
          },
          {
            "name": "activity_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation",
            "default": ""
          },
          {
            "name": "disaster_type_number",
            "type": "NUMBER",
            "description": "0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm planning to relocate to a new city and I want to assess the climate risks. Can you give me the climate score for the coordinates (37.7749, -122.4194) and also provide me with information about power plants within a 100 km radius?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetClimateScoreByGps"
      },
      {
        "category_name": "Finance",
        "tool_name": "Rankiteo Climate Risk Assessment",
        "api_name": "GetPowerplantByRadiusAndGps"
      }
    ],
    "query_id": 69973
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Financial Modeling Prep",
        "api_name": "Companies balance sheet statements",
        "api_description": "Returns companies balance sheet statements.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "symbol name",
            "default": "AAPL"
          },
          {
            "name": "apikey",
            "type": "STRING",
            "description": "",
            "default": "rapid_api"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Error Message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Financial Modeling Prep",
        "api_name": "Companies Profile",
        "api_description": "This API returns companies profile (Price,Beta,Volume Average, Market Capitalisation, Last Dividend, 52 week range, stock price change, stock price change in percentage, Company Name, Exchange, Description, Industry,Sector,CEO,Website and image).",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "symbol names",
            "default": "AAPL"
          },
          {
            "name": "apikey",
            "type": "STRING",
            "description": "",
            "default": "rapid_api"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Error Message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Financial Modeling Prep",
        "api_name": "Stock Quote Price",
        "api_description": "This API returns stock price in real time",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "symbol names",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [
          {
            "name": "apikey",
            "type": "STRING",
            "description": "",
            "default": "rapidapi"
          }
        ],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "name": "str",
          "price": "float",
          "changesPercentage": "float",
          "change": "float",
          "dayLow": "float",
          "dayHigh": "float",
          "yearHigh": "float",
          "yearLow": "float",
          "marketCap": "int",
          "priceAvg50": "float",
          "priceAvg200": "float",
          "exchange": "str",
          "volume": "int",
          "avgVolume": "int",
          "open": "float",
          "previousClose": "float",
          "eps": "float",
          "pe": "float",
          "earningsAnnouncement": "str",
          "sharesOutstanding": "int",
          "timestamp": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Financial Modeling Prep",
        "api_name": "Earning Call Transcript API PREMIUM",
        "api_description": "Analyzing Earnings Conference Call With NLP",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "symbol name",
            "default": "AAPL"
          },
          {
            "name": "apikey",
            "type": "STRING",
            "description": "",
            "default": "rapid_api"
          }
        ],
        "optional_parameters": [
          {
            "name": "quarter",
            "type": "NUMBER",
            "description": "",
            "default": "4"
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "Error Message": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Financial Modeling Prep",
        "api_name": "Companies cash flow statements",
        "api_description": "Returns companies cash flow statements",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "string",
            "description": "symbol name",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [
          {
            "name": "apikey",
            "type": "STRING",
            "description": "",
            "default": "rapid_api"
          }
        ],
        "method": "GET",
        "template_response": {
          "Error Message": "str"
        }
      }
    ],
    "query": "I'm interested in the profile of Apple Inc. Please provide me with information about the company's industry, CEO, website, and description. Additionally, I would like to know the stock price and volume for the company.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Financial Modeling Prep",
        "api_name": "Companies Profile"
      },
      {
        "category_name": "Finance",
        "tool_name": "Financial Modeling Prep",
        "api_name": "Stock Quote Price"
      }
    ],
    "query_id": 70158
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert",
        "api_description": "Convert between Currencies.",
        "required_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "Currency to which you are converting.",
            "default": "BRL"
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "Currency from which you are converting.",
            "default": "USD"
          }
        ],
        "optional_parameters": [
          {
            "name": "amount",
            "type": "NUMBER",
            "description": "(Optional) Amount value in From Currency. Default value is 1.",
            "default": "1"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "List",
        "api_description": "List of Supported Currencies",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I am a cryptocurrency investor and I need to convert the value of my Bitcoin holdings to USD. Can you assist me with the currency conversion? I would like to convert 1 Bitcoin to USD.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert"
      },
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "List"
      }
    ],
    "query_id": 70359
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "History Prices",
        "api_description": "This gives you the Date, Open, High, Low, Close, Adj Close, Volume prices of the stock\n\nQUERY PARAMETER: symbol the ticker symbol of the company you want to see.\n\nQUERY PARAMETER: range = ['1y', '5y', 'max']",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "range",
            "type": "STRING",
            "description": "",
            "default": "1y"
          },
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "TSLA"
          }
        ],
        "method": "GET",
        "template_response": {
          "Message": "str",
          "Date": [
            "list of str with length 252"
          ],
          "Open": [
            "list of float with length 252"
          ],
          "High": [
            "list of float with length 252"
          ],
          "Low": [
            "list of float with length 252"
          ],
          "Close": [
            "list of float with length 252"
          ],
          "Adj Close": [
            "list of float with length 252"
          ],
          "Volume": [
            "list of int with length 252"
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Cash Statement",
        "api_description": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "AMZN"
          }
        ],
        "optional_parameters": [
          {
            "name": "formstyle",
            "type": "STRING",
            "description": "",
            "default": "dataframe"
          },
          {
            "name": "freq",
            "type": "STRING",
            "description": "",
            "default": "Q"
          }
        ],
        "method": "GET",
        "template_response": "{\"Years\": [\"list of str with length 57\"], \"Net-Income/Loss\": [\"list of float with length 57\"], \"Total-Depreciation-And-Amortization---Cash-Flow\": [\"list of float with length 57\"], \"Other-Non-Cash-Items\": [\"list of float with length 57\"], \"Total-Non-Cash-Items\": [\"list of float with length 57\"], \"Change-In-Accounts-Receivable\": [\"list of float with length 57\"], \"Change-In-Inventories\": [\"list of float with length 57\"], \"Change-In-Accounts-Payable\": [\"list of float with length 57\"], \"Change-In-Assets/Liabilities\": [\"list of float with length 57\"], \"Total-Change-In-Assets/Liabilities\": [\"list of float with length 57\"], \"Cash-Flow-From-Operating-Activities\": [\"list of float with length 57\"], \"Net-Change-In-Property,-Plant,-And-Equipment\": [\"list of float with length 57\"], \"Net-Change-In-Intangible-Assets\": [\"list of int with length 57\"], \"Net-Acquisitions/Divestitures\": [\"list of float with length 57\"], \"Net-Change-In-Short-term-Investments\": [\"list of int with length 57\"], \"Net-Change-In-"
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Income Statement",
        "api_description": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [
          {
            "name": "formstyle",
            "type": "STRING",
            "description": "",
            "default": "dataframe"
          },
          {
            "name": "freq",
            "type": "STRING",
            "description": "",
            "default": "Q"
          }
        ],
        "method": "GET",
        "template_response": "{\"Years\": [\"list of str with length 57\"], \"Revenue\": [\"list of float with length 57\"], \"Cost-Of-Goods-Sold\": [\"list of float with length 57\"], \"Gross-Profit\": [\"list of float with length 57\"], \"Research-And-Development-Expenses\": [\"list of float with length 57\"], \"SG&A-Expenses\": [\"list of float with length 57\"], \"Other-Operating-Income-Or-Expenses\": [\"list of int with length 57\"], \"Operating-Expenses\": [\"list of float with length 57\"], \"Operating-Income\": [\"list of float with length 57\"], \"Total-Non-Operating-Income/Expense\": [\"list of float with length 57\"], \"Pre-Tax-Income\": [\"list of float with length 57\"], \"Income-Taxes\": [\"list of float with length 57\"], \"Income-After-Taxes\": [\"list of float with length 57\"], \"Other-Income\": [\"list of int with length 57\"], \"Income-From-Continuous-Operations\": [\"list of float with length 57\"], \"Income-From-Discontinued-Operations\": [\"list of int with length 57\"], \"Net-Income\": [\"list of float with length 57\"], \"EBITDA\": [\"list of float with length"
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Balance Sheet",
        "api_description": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "MSFT"
          }
        ],
        "optional_parameters": [
          {
            "name": "formstyle",
            "type": "STRING",
            "description": "",
            "default": "dataframe"
          },
          {
            "name": "freq",
            "type": "STRING",
            "description": "",
            "default": "Q"
          }
        ],
        "method": "GET",
        "template_response": "{\"Years\": [\"list of str with length 57\"], \"Cash-On-Hand\": [\"list of float with length 57\"], \"Receivables\": [\"list of float with length 57\"], \"Inventory\": [\"list of float with length 57\"], \"Pre-Paid-Expenses\": [\"list of int with length 57\"], \"Other-Current-Assets\": [\"list of float with length 57\"], \"Total-Current-Assets\": [\"list of float with length 57\"], \"Property,-Plant,-And-Equipment\": [\"list of float with length 57\"], \"Long-Term-Investments\": [\"list of float with length 57\"], \"Goodwill-And-Intangible-Assets\": [\"list of float with length 57\"], \"Other-Long-Term-Assets\": [\"list of float with length 57\"], \"Total-Long-Term-Assets\": [\"list of float with length 57\"], \"Total-Assets\": [\"list of float with length 57\"], \"Total-Current-Liabilities\": [\"list of float with length 57\"], \"Long-Term-Debt\": [\"list of float with length 57\"], \"Other-Non-Current-Liabilities\": [\"list of float with length 57\"], \"Total-Long-Term-Liabilities\": [\"list of float with length 57\"], \"Total-Liabilities\": [\"list of "
      }
    ],
    "query": "Can you fetch the financial income statement for Apple for the past 10 years? I want to analyze the revenue, cost of goods sold, gross profit, research and development expenses, operating income, income taxes, net income, and EBITDA. Additionally, provide me with the balance sheet data for Microsoft for the past 10 years. I'm interested in the cash on hand, receivables, inventory, property, plant, and equipment, long-term investments, and total assets.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Income Statement"
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Balance Sheet"
      }
    ],
    "query_id": 70672
  },
  {
    "api_list": [
      {
        "category_name": "Business_Software",
        "tool_name": "fomoAPI",
        "api_name": "Get Campaign From URL",
        "api_description": "Get lead from Specific website  Campaign",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "Lead"
          }
        ],
        "optional_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "gogofodo.com"
          }
        ],
        "method": "GET",
        "template_response": {
          "list_complete": "bool",
          "keys": "empty list"
        }
      },
      {
        "category_name": "Business_Software",
        "tool_name": "fomoAPI",
        "api_name": "Get Campaign  Lead From ID",
        "api_description": "Get ALL Lead From Your Campaign Social Proof",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "Lead"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "list_complete": "bool",
          "keys": "empty list"
        }
      }
    ],
    "query": "I run an e-commerce website and I want to track the leads generated from a specific campaign on my website. Can you provide me with the list of leads and their metadata for the campaign with the ID 'abc123'? Additionally, it would be helpful to know the country, region, and city for each lead.",
    "relevant APIs": [
      {
        "category_name": "Business_Software",
        "tool_name": "fomoAPI",
        "api_name": "Get Campaign From URL"
      },
      {
        "category_name": "Business_Software",
        "tool_name": "fomoAPI",
        "api_name": "Get Campaign  Lead From ID"
      }
    ],
    "query_id": 72773
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "house-prices/get-points-of-interest",
        "api_description": "Get nearest points of interest",
        "required_parameters": [
          {
            "name": "property_id",
            "type": "NUMBER",
            "description": "The value of property_id field returned in .../house-prices/estimate endpoint.",
            "default": "27175510"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "house-prices/estimate",
        "api_description": "Returned list of estimated house prices",
        "required_parameters": [
          {
            "name": "area",
            "type": "STRING",
            "description": "The value of suggestions/value json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value  returned by the endpoint.",
            "default": "Greenwich Close, Crawley RH11"
          }
        ],
        "optional_parameters": [
          {
            "name": "property_type",
            "type": "STRING",
            "description": "One of the following detached|flat|terraced|semi&#95;detached",
            "default": ""
          },
          {
            "name": "page_number",
            "type": "NUMBER",
            "description": "The page index for paging purpose",
            "default": "1"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "One of the following price&#95;paid|last&#95;sold|address|estimated&#95;value",
            "default": "address"
          },
          {
            "name": "page_size",
            "type": "NUMBER",
            "description": "The number of items per response (max 40)",
            "default": "40"
          },
          {
            "name": "ordering",
            "type": "STRING",
            "description": "One of the following ascending|descending",
            "default": "descending"
          },
          {
            "name": "identifier",
            "type": "STRING",
            "description": "The value of suggestions/identifier json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value returned by the endpoint.",
            "default": "west-sussex/crawley/greenwich-close"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "properties/get-broadband",
        "api_description": "Get broadband information",
        "required_parameters": [
          {
            "name": "listing_id",
            "type": "NUMBER",
            "description": "The value of listing_id field returned in .../properties/list endpoint",
            "default": "56354192"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "properties/get-running-costs",
        "api_description": "Get running costs",
        "required_parameters": [
          {
            "name": "listing_id",
            "type": "NUMBER",
            "description": "The value of listing_id field returned in .../properties/list endpoint",
            "default": "56354192"
          }
        ],
        "optional_parameters": [
          {
            "name": "category",
            "type": "STRING",
            "description": "One of the following residential|commercial",
            "default": "residential"
          },
          {
            "name": "section",
            "type": "STRING",
            "description": "One of the following for-sale|to-rent",
            "default": "to-rent"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "properties/get-area-stats",
        "api_description": "Get area stats",
        "required_parameters": [
          {
            "name": "listing_id",
            "type": "NUMBER",
            "description": "The value of listing_id field returned in .../properties/list endpoint",
            "default": "56354192"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "properties/get-nearby",
        "api_description": "Get nearest points of interest",
        "required_parameters": [
          {
            "name": "listing_id",
            "type": "NUMBER",
            "description": "The value of listing_id field returned in .../properties/list endpoint",
            "default": "56354192"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "auto-complete",
        "api_description": "Get auto complete suggestion by term or phrase",
        "required_parameters": [
          {
            "name": "search_term",
            "type": "STRING",
            "description": "",
            "default": "greenwich"
          }
        ],
        "optional_parameters": [
          {
            "name": "search_type",
            "type": "STRING",
            "description": "One of the following properties|listings. Use  listings value to get suggestion for .../properties/list endpoint. Use properties value to get suggestion for .../house-prices/estimate endpoint.",
            "default": "listings"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "house-prices/get-sales-history",
        "api_description": "Get sales history",
        "required_parameters": [
          {
            "name": "property_id",
            "type": "NUMBER",
            "description": "The value of property_id field returned in .../house-prices/estimate endpoint.",
            "default": "27175510"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "house-prices/get-running-costs",
        "api_description": "Get running costs",
        "required_parameters": [
          {
            "name": "property_id",
            "type": "NUMBER",
            "description": "The value of property_id field returned in .../house-prices/estimate endpoint.",
            "default": "27175510"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "house-prices/get-market-activity",
        "api_description": "Get market activity in an area",
        "required_parameters": [
          {
            "name": "area",
            "type": "STRING",
            "description": "The value of suggestions/value json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value  returned by the endpoint.",
            "default": "Greenwich Close, Crawley RH11"
          }
        ],
        "optional_parameters": [
          {
            "name": "identifier",
            "type": "STRING",
            "description": "The value of suggestions/identifier json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value returned by the endpoint.",
            "default": "west-sussex/crawley/greenwich-close"
          }
        ],
        "method": "GET"
      }
    ],
    "query": "My family is planning to move to Crawley, and we need information on the running costs of residential properties in the area. Can you provide us with the estimated house prices, along with the running costs and nearby points of interest? It would be helpful to know the broadband information as well.",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "house-prices/estimate"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "properties/get-running-costs"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "house-prices/get-points-of-interest"
      },
      {
        "category_name": "Business",
        "tool_name": "Zoopla_v2",
        "api_name": "properties/get-broadband"
      }
    ],
    "query_id": 75659
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "users-by-rest-ids",
        "api_description": "users-by-rest-ids",
        "required_parameters": [
          {
            "name": "ids",
            "type": "STRING",
            "description": "Users IDs (you can separate with commas)",
            "default": "44196397,155659213"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"data\": {\"users\": [{\"result\": {\"__typename\": \"str\", \"id\": \"str\", \"rest_id\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"url\": {\"urlType\": \"str\", \"url\": \"str\"}, \"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"userLabelType\": \"str\"}}, \"has_nft_avatar\": \"bool\", \"legacy\": {\"created_at\": \"str\", \"default_profile\": \"bool\", \"default_profile_image\": \"bool\", \"description\": \"str\", \"entities\": {\"description\": {\"urls\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favourites_count\": \"int\", \"followers_count\": \"int\", \"friends_count\": \"int\", \"has_custom_timelines\": \"bool\", \"is_translator\": \"bool\", \"listed_count\": \"int\", \"location\": \"str\", \"media_count\": \"int\", \"name\": \"str\", \"normal_followers_count\": \"int\", \"pinned_tweet_ids_str\": \"empty list\", \"profile_banner_url\": \"str\", \"profile_image_url_https\": \"str\", \"profile_interstitial_type\": \"str\", \"protected\": \"bool\", \"screen_name\": \"str\", \"statuses_count\": \"int\", \"translator_type\": \"str\", \"verified\": \"bool\", \"withheld_in_countries\": \"empty list\"}"
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-tweets",
        "api_description": "user-tweets",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "40"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "user": {
              "result": {
                "__typename": "str",
                "timeline": {
                  "timeline": {
                    "instructions": [
                      {
                        "type": "str",
                        "_list_length": 2
                      }
                    ],
                    "responseObjects": {
                      "feedbackActions": "empty list",
                      "immediateReactions": "empty list"
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-likes",
        "api_description": "user-likes",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"user\": {\"result\": {\"__typename\": \"str\", \"timeline_v2\": {\"timeline\": {\"instructions\": [{\"type\": \"str\", \"entries\": [{\"entryId\": \"str\", \"sortIndex\": \"str\", \"content\": {\"entryType\": \"str\", \"itemContent\": {\"itemType\": \"str\", \"tweet_results\": {\"result\": {\"__typename\": \"str\", \"rest_id\": \"str\", \"core\": {\"user_results\": {\"result\": {\"__typename\": \"str\", \"id\": \"str\", \"rest_id\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"url\": {\"urlType\": \"str\", \"url\": \"str\"}, \"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"userLabelType\": \"str\"}}, \"has_nft_avatar\": \"bool\", \"legacy\": {\"blocked_by\": \"bool\", \"blocking\": \"bool\", \"can_dm\": \"bool\", \"can_media_tag\": \"bool\", \"created_at\": \"str\", \"default_profile\": \"bool\", \"default_profile_image\": \"bool\", \"description\": \"str\", \"entities\": {\"description\": {\"urls\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favourites_count\": \"int\", \"follow_request_sent\": \"bool\", \"followed_by\": \"bool\", \"followers_count\": \"int\", \"following\": \"bool\", \"friends_count\": \""
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-media",
        "api_description": "user-media",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": "{\"data\": {\"user\": {\"result\": {\"__typename\": \"str\", \"timeline_v2\": {\"timeline\": {\"instructions\": [{\"type\": \"str\", \"entries\": [{\"entryId\": \"str\", \"sortIndex\": \"str\", \"content\": {\"entryType\": \"str\", \"itemContent\": {\"itemType\": \"str\", \"tweet_results\": {\"result\": {\"__typename\": \"str\", \"rest_id\": \"str\", \"core\": {\"user_results\": {\"result\": {\"__typename\": \"str\", \"id\": \"str\", \"rest_id\": \"str\", \"affiliates_highlighted_label\": {\"label\": {\"url\": {\"urlType\": \"str\", \"url\": \"str\"}, \"badge\": {\"url\": \"str\"}, \"description\": \"str\", \"userLabelType\": \"str\"}}, \"has_nft_avatar\": \"bool\", \"legacy\": {\"created_at\": \"str\", \"default_profile\": \"bool\", \"default_profile_image\": \"bool\", \"description\": \"str\", \"entities\": {\"description\": {\"urls\": \"empty list\"}}, \"fast_followers_count\": \"int\", \"favourites_count\": \"int\", \"followers_count\": \"int\", \"friends_count\": \"int\", \"has_custom_timelines\": \"bool\", \"is_translator\": \"bool\", \"listed_count\": \"int\", \"location\": \"str\", \"media_count\": \"int\", \"name\": \"str\", \"normal_followers_"
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-followers",
        "api_description": "user-followers",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "user": {
              "result": {
                "__typename": "str",
                "timeline": {
                  "timeline": {
                    "instructions": [
                      {
                        "type": "str",
                        "_list_length": 3
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-tweets-and-replies",
        "api_description": "user-tweets-and-replies",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "40"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "user": {
              "result": {
                "__typename": "str",
                "timeline": {
                  "timeline": {
                    "instructions": [
                      {
                        "type": "str",
                        "_list_length": 2
                      }
                    ],
                    "metadata": {
                      "scribeConfig": {
                        "page": "str"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-following",
        "api_description": "user-following",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "user": {
              "result": {
                "__typename": "str",
                "timeline": {
                  "timeline": {
                    "instructions": [
                      {
                        "type": "str",
                        "_list_length": 3
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "v2/user-tweets-and-replies",
        "api_description": "v2/user-tweets-and-replies",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID\n\nUse the User By Screen Name endpoint to find the ID from a username.",
            "default": "44196397"
          }
        ],
        "optional_parameters": [
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of results",
            "default": "40"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "user": {
              "result": {
                "__typename": "str",
                "timeline_v2": {
                  "timeline": {
                    "instructions": [
                      {
                        "type": "str",
                        "_list_length": 2
                      }
                    ],
                    "metadata": {
                      "scribeConfig": {
                        "page": "str"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "search",
        "api_description": "search",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "Search query\n\nYou can use advanced search queries. E.g. dogecoin (from:elonmusk) Check out for more information: https://twitter.com/search-advanced",
            "default": "dogecoin"
          }
        ],
        "optional_parameters": [
          {
            "name": "result_filter",
            "type": "ENUM",
            "description": "Result filter",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor for other results",
            "default": ""
          },
          {
            "name": "tweet_search_mode",
            "type": "ENUM",
            "description": "Popular (default) or latest (live) tweets",
            "default": ""
          },
          {
            "name": "count",
            "type": "NUMBER",
            "description": "Number of Tweet results",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": "{\"globalObjects\": {\"tweets\": {\"1668216093213638659\": {\"created_at\": \"str\", \"id\": \"int\", \"id_str\": \"str\", \"full_text\": \"str\", \"truncated\": \"bool\", \"display_text_range\": [\"list of int with length 2\"], \"entities\": {\"hashtags\": [{\"text\": \"str\", \"indices\": [\"list of int with length 2\"], \"_list_length\": 7}], \"symbols\": \"empty list\", \"user_mentions\": \"empty list\", \"urls\": [{\"url\": \"str\", \"expanded_url\": \"str\", \"display_url\": \"str\", \"indices\": [\"list of int with length 2\"], \"_list_length\": 1}], \"media\": [{\"id\": \"int\", \"id_str\": \"str\", \"indices\": [\"list of int with length 2\"], \"media_url\": \"str\", \"media_url_https\": \"str\", \"url\": \"str\", \"display_url\": \"str\", \"expanded_url\": \"str\", \"type\": \"str\", \"original_info\": {\"width\": \"int\", \"height\": \"int\", \"focus_rects\": [{\"x\": \"int\", \"y\": \"int\", \"h\": \"int\", \"w\": \"int\", \"_list_length\": 5}]}, \"sizes\": {\"thumb\": {\"w\": \"int\", \"h\": \"int\", \"resize\": \"str\"}, \"large\": {\"w\": \"int\", \"h\": \"int\", \"resize\": \"str\"}, \"medium\": {\"w\": \"int\", \"h\": \"int\", \"resize\": \"str\"}, "
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "auto-complete",
        "api_description": "auto-complete",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "Search query",
            "default": "Elon"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"num_results\": \"int\", \"users\": [{\"id\": \"int\", \"id_str\": \"str\", \"verified\": \"bool\", \"ext_is_blue_verified\": \"bool\", \"badges\": \"empty list\", \"is_dm_able\": \"bool\", \"is_secret_dm_able\": \"bool\", \"is_blocked\": \"bool\", \"name\": \"str\", \"screen_name\": \"str\", \"profile_image_url\": \"str\", \"profile_image_url_https\": \"str\", \"location\": \"str\", \"is_protected\": \"bool\", \"rounded_score\": \"int\", \"social_proof\": \"int\", \"connecting_user_count\": \"int\", \"connecting_user_ids\": \"empty list\", \"social_proofs_ordered\": \"empty list\", \"social_context\": {\"following\": \"bool\", \"followed_by\": \"bool\"}, \"tokens\": \"empty list\", \"inline\": \"bool\", \"_list_length\": 10}], \"topics\": [{\"topic\": \"str\", \"rounded_score\": \"int\", \"tokens\": \"empty list\", \"inline\": \"bool\", \"result_context\": {\"display_string\": \"str\", \"types\": [{\"type\": \"str\", \"_list_length\": 1}]}, \"_list_length\": 3}], \"events\": [{\"topic\": \"str\", \"rounded_score\": \"int\", \"tokens\": \"empty list\", \"topic_type\": \"str\", \"inline\": \"bool\", \"url\": \"str\", \"supporting_text\": \"str\", "
      }
    ],
    "query": "As a social media manager, I need to analyze user engagement. Retrieve the tweets and replies for a specific user with the ID 44196397. Also, fetch their likes, media, and followers.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-tweets-and-replies"
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-likes"
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-media"
      },
      {
        "category_name": "Data",
        "tool_name": "Twitter Data",
        "api_name": "user-followers"
      }
    ],
    "query_id": 76740
  },
  {
    "api_list": [
      {
        "category_name": "Data",
        "tool_name": "Free stopwords",
        "api_name": "Categories",
        "api_description": "Will list all available word categories. Check this before calling /stopwords",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "category_id": "str",
          "category_name": "str",
          "category_description": "str",
          "parent_category": "str",
          "words": "str"
        }
      },
      {
        "category_name": "Data",
        "tool_name": "Free stopwords",
        "api_name": "Stopwords",
        "api_description": "Will return the exact extract words to use in your data analysis or application",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "langs",
            "type": "STRING",
            "description": "Comma seperated list of language isocodes",
            "default": ""
          },
          {
            "name": "details",
            "type": "BOOLEAN",
            "description": "Boolean (1 or 0) indication weather you want details about each word",
            "default": "0"
          },
          {
            "name": "categories",
            "type": "STRING",
            "description": "Comma seperated list of categories. Use /categories to get ID's",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Data",
        "tool_name": "Free stopwords",
        "api_name": "Languages",
        "api_description": "Will list all available stopword languages including how many words each language contains.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "language_isocode2": "str",
          "language_isocode3": "str",
          "language_name": "str",
          "words": "str"
        }
      }
    ],
    "query": "I am developing a text analysis tool and I need a list of stopwords for different languages. Can you provide me with stopwords for English, German, and Spanish? It would be helpful if you could also include details about each word.",
    "relevant APIs": [
      {
        "category_name": "Data",
        "tool_name": "Free stopwords",
        "api_name": "Stopwords"
      },
      {
        "category_name": "Data",
        "tool_name": "Free stopwords",
        "api_name": "Languages"
      }
    ],
    "query_id": 76966
  },
  {
    "api_list": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v3",
        "api_name": "converter",
        "api_description": "This endpoint is used to perform currency conversion between multiple currencies. The endpoint accepts input parameters in the form of the amount of money, source currency, and one or more target currencies.",
        "required_parameters": [
          {
            "name": "target",
            "type": "STRING",
            "description": "This parameter specifies the currency code of the currency that you want to convert to. It is a mandatory parameter and should be a valid three-letter currency code. If there are multiple target currencies, they should be separated by a comma (',') .",
            "default": "EUR,INR,JPY"
          },
          {
            "name": "source",
            "type": "STRING",
            "description": "This parameter represents the currency from which you want to convert. It is a mandatory parameter and should be a valid three-letter currency code, such as USD (United States Dollar) or EUR (Euro) or many others.",
            "default": "USD"
          }
        ],
        "optional_parameters": [
          {
            "name": "amount",
            "type": "NUMBER",
            "description": "This parameter represents the amount that you want to convert from the source currency to the target currency. It is an optional parameter, and if not provided, the default value will be set to 1",
            "default": "1"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v3",
        "api_name": "currencies",
        "api_description": "Endpoint to retrieve all supported currencies.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I need to convert 2000 USD to EUR, INR, and JPY. Can you perform the currency conversion for me? Please provide the converted amounts in each target currency.",
    "relevant APIs": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v3",
        "api_name": "converter"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v3",
        "api_name": "currencies"
      }
    ],
    "query_id": 77375
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert",
        "api_description": "Convert between Currencies.",
        "required_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "Currency to which you are converting.",
            "default": "BRL"
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "Currency from which you are converting.",
            "default": "USD"
          }
        ],
        "optional_parameters": [
          {
            "name": "amount",
            "type": "NUMBER",
            "description": "(Optional) Amount value in From Currency. Default value is 1.",
            "default": "1"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "List",
        "api_description": "List of Supported Currencies",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a travel blogger and I want to display currency conversion rates on my website. Can you provide me with a list of supported currencies and the current exchange rate from USD to EUR, GBP, and AUD?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert"
      },
      {
        "category_name": "Finance",
        "tool_name": "Currency Converter_v2",
        "api_name": "List"
      }
    ],
    "query_id": 78994
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Exchange Rate Provider",
        "api_name": "Get Foreign Exchange Rates for other major currencies",
        "api_description": "Get Foreign Exchange Rates for other major currencies. At the moment only GBP and USD are available. More will be added with future updates.\n\nSo as `currencyId` please **use only** `/gbp` or `/usd`.",
        "required_parameters": [
          {
            "name": "currencyId",
            "type": "string",
            "description": "",
            "default": "gbp"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Finance",
        "tool_name": "Exchange Rate Provider",
        "api_name": "Get EUR Foreign Exchange Rates",
        "api_description": "Get Foreign Exchange Rates for default currency EUR.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I am a financial analyst and I need to keep track of the foreign exchange rates. Can you provide me with the latest rates for GBP and USD? I need this information to analyze the impact of currency fluctuations on international investments. It would be great if you could also give me the rates for EUR, JPY, and AUD.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Exchange Rate Provider",
        "api_name": "Get Foreign Exchange Rates for other major currencies"
      },
      {
        "category_name": "Finance",
        "tool_name": "Exchange Rate Provider",
        "api_name": "Get EUR Foreign Exchange Rates"
      }
    ],
    "query_id": 79240
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "History Prices",
        "api_description": "This gives you the Date, Open, High, Low, Close, Adj Close, Volume prices of the stock\n\nQUERY PARAMETER: symbol the ticker symbol of the company you want to see.\n\nQUERY PARAMETER: range = ['1y', '5y', 'max']",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "range",
            "type": "STRING",
            "description": "",
            "default": "1y"
          },
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "TSLA"
          }
        ],
        "method": "GET",
        "template_response": {
          "Message": "str",
          "Date": [
            "list of str with length 252"
          ],
          "Open": [
            "list of float with length 252"
          ],
          "High": [
            "list of float with length 252"
          ],
          "Low": [
            "list of float with length 252"
          ],
          "Close": [
            "list of float with length 252"
          ],
          "Adj Close": [
            "list of float with length 252"
          ],
          "Volume": [
            "list of int with length 252"
          ]
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Cash Statement",
        "api_description": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "AMZN"
          }
        ],
        "optional_parameters": [
          {
            "name": "formstyle",
            "type": "STRING",
            "description": "",
            "default": "dataframe"
          },
          {
            "name": "freq",
            "type": "STRING",
            "description": "",
            "default": "Q"
          }
        ],
        "method": "GET",
        "template_response": "{\"Years\": [\"list of str with length 57\"], \"Net-Income/Loss\": [\"list of float with length 57\"], \"Total-Depreciation-And-Amortization---Cash-Flow\": [\"list of float with length 57\"], \"Other-Non-Cash-Items\": [\"list of float with length 57\"], \"Total-Non-Cash-Items\": [\"list of float with length 57\"], \"Change-In-Accounts-Receivable\": [\"list of float with length 57\"], \"Change-In-Inventories\": [\"list of float with length 57\"], \"Change-In-Accounts-Payable\": [\"list of float with length 57\"], \"Change-In-Assets/Liabilities\": [\"list of float with length 57\"], \"Total-Change-In-Assets/Liabilities\": [\"list of float with length 57\"], \"Cash-Flow-From-Operating-Activities\": [\"list of float with length 57\"], \"Net-Change-In-Property,-Plant,-And-Equipment\": [\"list of float with length 57\"], \"Net-Change-In-Intangible-Assets\": [\"list of int with length 57\"], \"Net-Acquisitions/Divestitures\": [\"list of float with length 57\"], \"Net-Change-In-Short-term-Investments\": [\"list of int with length 57\"], \"Net-Change-In-"
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Income Statement",
        "api_description": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "AAPL"
          }
        ],
        "optional_parameters": [
          {
            "name": "formstyle",
            "type": "STRING",
            "description": "",
            "default": "dataframe"
          },
          {
            "name": "freq",
            "type": "STRING",
            "description": "",
            "default": "Q"
          }
        ],
        "method": "GET",
        "template_response": "{\"Years\": [\"list of str with length 57\"], \"Revenue\": [\"list of float with length 57\"], \"Cost-Of-Goods-Sold\": [\"list of float with length 57\"], \"Gross-Profit\": [\"list of float with length 57\"], \"Research-And-Development-Expenses\": [\"list of float with length 57\"], \"SG&A-Expenses\": [\"list of float with length 57\"], \"Other-Operating-Income-Or-Expenses\": [\"list of int with length 57\"], \"Operating-Expenses\": [\"list of float with length 57\"], \"Operating-Income\": [\"list of float with length 57\"], \"Total-Non-Operating-Income/Expense\": [\"list of float with length 57\"], \"Pre-Tax-Income\": [\"list of float with length 57\"], \"Income-Taxes\": [\"list of float with length 57\"], \"Income-After-Taxes\": [\"list of float with length 57\"], \"Other-Income\": [\"list of int with length 57\"], \"Income-From-Continuous-Operations\": [\"list of float with length 57\"], \"Income-From-Discontinued-Operations\": [\"list of int with length 57\"], \"Net-Income\": [\"list of float with length 57\"], \"EBITDA\": [\"list of float with length"
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Balance Sheet",
        "api_description": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "MSFT"
          }
        ],
        "optional_parameters": [
          {
            "name": "formstyle",
            "type": "STRING",
            "description": "",
            "default": "dataframe"
          },
          {
            "name": "freq",
            "type": "STRING",
            "description": "",
            "default": "Q"
          }
        ],
        "method": "GET",
        "template_response": "{\"Years\": [\"list of str with length 57\"], \"Cash-On-Hand\": [\"list of float with length 57\"], \"Receivables\": [\"list of float with length 57\"], \"Inventory\": [\"list of float with length 57\"], \"Pre-Paid-Expenses\": [\"list of int with length 57\"], \"Other-Current-Assets\": [\"list of float with length 57\"], \"Total-Current-Assets\": [\"list of float with length 57\"], \"Property,-Plant,-And-Equipment\": [\"list of float with length 57\"], \"Long-Term-Investments\": [\"list of float with length 57\"], \"Goodwill-And-Intangible-Assets\": [\"list of float with length 57\"], \"Other-Long-Term-Assets\": [\"list of float with length 57\"], \"Total-Long-Term-Assets\": [\"list of float with length 57\"], \"Total-Assets\": [\"list of float with length 57\"], \"Total-Current-Liabilities\": [\"list of float with length 57\"], \"Long-Term-Debt\": [\"list of float with length 57\"], \"Other-Non-Current-Liabilities\": [\"list of float with length 57\"], \"Total-Long-Term-Liabilities\": [\"list of float with length 57\"], \"Total-Liabilities\": [\"list of "
      }
    ],
    "query": "I am a data scientist and I need to analyze the historical prices and financial statements of various stocks. Retrieve the Date, Open, High, Low, Close, Adj Close, and Volume prices for the tickers TSLA, AAPL, MSFT, and AMZN for the last 5 years. Additionally, fetch the Financial Income Statement and Financial Balance Sheet for the same companies.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "History Prices"
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Income Statement"
      },
      {
        "category_name": "Finance",
        "tool_name": "MacroTrends Finance",
        "api_name": "Financial Balance Sheet"
      }
    ],
    "query_id": 79359
  },
  {
    "api_list": [
      {
        "category_name": "Business",
        "tool_name": "VAT validation and tax rates",
        "api_name": "VAT validation API endpoint",
        "api_description": "The Validate Endpoint takes a VAT number in the request, checks if that number is valid, and if it is valid, returns addition details about the company associated with that VAT number.",
        "required_parameters": [
          {
            "name": "vat_number",
            "type": "STRING",
            "description": "The VAT number to validate.",
            "default": "SE556656688001"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": {
            "message": "str",
            "code": "str",
            "details": "NoneType"
          }
        }
      },
      {
        "category_name": "Business",
        "tool_name": "VAT validation and tax rates",
        "api_name": "VAT rates & categories API endpoint",
        "api_description": "The /categories/ endpoint makes it easy to get the latest VAT rates, including the reduced rates for certain categories, for a specific country.",
        "required_parameters": [
          {
            "name": "country_code",
            "type": "STRING",
            "description": "The two letter ISO 3166-1 alpha-2 code of the country in which the transaction takes place.",
            "default": "DE"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country_code": "str",
          "rate": "str",
          "category": "str",
          "description": "str"
        }
      },
      {
        "category_name": "Business",
        "tool_name": "VAT validation and tax rates",
        "api_name": "VAT price calculation API endpoint",
        "api_description": "The Calculate Endpoint makes it easy to calculate a VAT compliant price given a country and price, as well as such optional values as the type of goods.",
        "required_parameters": [
          {
            "name": "amount",
            "type": "STRING",
            "description": "The amount that you would like to get the VAT amount for or from.",
            "default": "500"
          },
          {
            "name": "country_code",
            "type": "STRING",
            "description": "The two letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the country in which the transaction takes place.",
            "default": "DE"
          }
        ],
        "optional_parameters": [
          {
            "name": "vat_category",
            "type": "STRING",
            "description": "Some countries give reduced VAT rates for certain categories of goods. If you pass the VAT category in the request, the API will check if there is a reduced VAT rate for that country and category. For example, below is a request to get the VAT for 500 EUR worth of books in Germany",
            "default": "books"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "As a business owner, I need to validate a VAT number for my company. Please validate the VAT number 'SE556656688001' and provide additional details about the associated company. Also, fetch the latest VAT rates, including the reduced rates for specific categories, for Germany.",
    "relevant APIs": [
      {
        "category_name": "Business",
        "tool_name": "VAT validation and tax rates",
        "api_name": "VAT validation API endpoint"
      },
      {
        "category_name": "Business",
        "tool_name": "VAT validation and tax rates",
        "api_name": "VAT rates & categories API endpoint"
      }
    ],
    "query_id": 83931
  },
  {
    "api_list": [
      {
        "category_name": "eCommerce",
        "tool_name": "Hepsiburada Data",
        "api_name": "Get Comments from product id",
        "api_description": "Retrieve comments based on a product id.",
        "required_parameters": [
          {
            "name": "product_id",
            "type": "STRING",
            "description": "",
            "default": "hbcv00000c2fqc"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "comments": "empty list",
          "stars": "empty list"
        }
      }
    ],
    "query": "I'm interested in analyzing customer feedback on Hepsiburada. Can you help me retrieve comments and star ratings for a specific product? I would like to explore the comments and ratings for the product with the ID 'hbcv00000c2fqc'. Thank you!",
    "relevant APIs": [
      {
        "category_name": "eCommerce",
        "tool_name": "Hepsiburada Data",
        "api_name": "Get Comments from product id"
      }
    ],
    "query_id": 85155
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaire",
        "api_description": "Récupère un transitaire donnée",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "DOUANE_AGENCE_GONDRAND"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "codePostal": "str",
          "email": "str",
          "name": "str",
          "phone": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaires",
        "api_description": "Renvoie tous les transiatires",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "name": "str",
          "phone": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Turkey Postal Codes",
        "api_name": "il",
        "api_description": "Turkish plates. 1 to 81",
        "required_parameters": [
          {
            "name": "il",
            "type": "NUMBER",
            "description": "",
            "default": "34"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "status": "str",
          "dataupdatedate": "str",
          "description": "str",
          "pagecreatedate": "str",
          "postakodu": [
            {
              "plaka": "int",
              "il": "str",
              "ilce": "str",
              "semt_bucak_belde": "str",
              "mahalle": "str",
              "pk": "str",
              "_list_length": 975
            }
          ]
        }
      }
    ],
    "query": "I'm planning a trip to Turkey and need information about postal codes in Istanbul. Can you provide me with the postal code and district for Istanbul province with plate number 34? Additionally, I would like to know if there are any transit agencies available in Istanbul. Please fetch their names and contact numbers.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "Turkey Postal Codes",
        "api_name": "il"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaires"
      }
    ],
    "query_id": 7
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "Orderful",
        "api_name": "Transactions",
        "api_description": "Get Transaction by ID",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Orderful Transaction ID",
            "default": "8209520"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "ref": "str",
          "type": "str",
          "message": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Pack & Send",
        "api_name": "/api/Tracking/",
        "api_description": "If you support your Pack & Send Reference Number, we can provide your with some relevant information.",
        "required_parameters": [
          {
            "name": "reference",
            "type": "string",
            "description": "",
            "default": "ReferenceNumberHere"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "type": "str",
          "title": "str",
          "status": "int",
          "traceId": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Health",
        "api_description": "Get the API's health",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "checks": "empty list"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "All",
        "api_description": "Tout l'historique du colis depuis son envoi jusqu'au dernier état en cours.",
        "required_parameters": [
          {
            "name": "colisid",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": {
            "code": "str",
            "iso": "str",
            "name": "str"
          },
          "date": "str",
          "informations": "str",
          "itemId": "str",
          "localisation": "str",
          "localization": {
            "longName": "str",
            "name": "str",
            "url": "str"
          },
          "pays": "str",
          "rawDateHeure": "str",
          "status": "str",
          "typeEvenement": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Latest",
        "api_description": "L'état courant (ie. le dernier état du colis).",
        "required_parameters": [
          {
            "name": "colisId",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": {
            "code": "str",
            "iso": "str",
            "name": "str"
          },
          "date": "str",
          "informations": "str",
          "itemId": "str",
          "localisation": "str",
          "localization": {
            "longName": "str",
            "name": "str",
            "url": "str"
          },
          "pays": "str",
          "rawDateHeure": "str",
          "status": "str",
          "typeEvenement": "str"
        }
      }
    ],
    "query": "My friends and I are eagerly awaiting the delivery of a package. Can you please track the package with the Pack & Send reference number 'ReferenceNumberHere'? Additionally, I'm interested in the latest status of the package with colis ID 'CA107308006SI'.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "Pack & Send",
        "api_name": "/api/Tracking/"
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Latest"
      }
    ],
    "query_id": 43
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "SQUAKE",
        "api_name": "Projects",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "SQUAKE",
        "api_name": "Checkhealth",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Kargom Nerede",
        "api_name": "companies",
        "api_description": "Companies",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "value": [
            {
              "id": "int",
              "name": "str",
              "image": "str",
              "info": "NoneType",
              "additionalDatas": "NoneType",
              "_list_length": 31
            }
          ],
          "success": "bool",
          "message": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "CEP Brazil",
        "api_name": "Retorna Dados do Endereço através do CEP",
        "api_description": "Retorna dados endereço",
        "required_parameters": [
          {
            "name": "cepNumber",
            "type": "string",
            "description": "",
            "default": "75094080"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "bairro": "str",
          "cep": "str",
          "cidade": "str",
          "complemento2": "str",
          "end": "str",
          "uf": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Pridnestrovie Post",
        "api_name": "Get track info",
        "api_description": "Get track info by track number",
        "required_parameters": [
          {
            "name": "track_number",
            "type": "STRING",
            "description": "",
            "default": "RB413450335SG"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I recently moved to a new address and I need to update my information. Can you retrieve my address details using the postal code 75094080? Additionally, I would like to know the companies that offer shipping services.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "CEP Brazil",
        "api_name": "Retorna Dados do Endereço através do CEP"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Kargom Nerede",
        "api_name": "companies"
      }
    ],
    "query_id": 53
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "CEP Brazil",
        "api_name": "Retorna Dados do Endereço através do CEP",
        "api_description": "Retorna dados endereço",
        "required_parameters": [
          {
            "name": "cepNumber",
            "type": "string",
            "description": "",
            "default": "75094080"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "bairro": "str",
          "cep": "str",
          "cidade": "str",
          "complemento2": "str",
          "end": "str",
          "uf": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Health",
        "api_description": "Get the API's health",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "checks": "empty list"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Count",
        "api_description": "Compte le nombre d'étapes de l'historique, pratique pour limiter la consommation réseau ou les ressources sur un IoT. Permet par exemple de poller un état de manière optimale.",
        "required_parameters": [
          {
            "name": "colisId",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "nbSteps": "int"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "suivi-colis",
        "api_name": "Latest",
        "api_description": "L'état courant (ie. le dernier état du colis).",
        "required_parameters": [
          {
            "name": "colisId",
            "type": "string",
            "description": "",
            "default": "CA107308006SI"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": {
            "code": "str",
            "iso": "str",
            "name": "str"
          },
          "date": "str",
          "informations": "str",
          "itemId": "str",
          "localisation": "str",
          "localization": {
            "longName": "str",
            "name": "str",
            "url": "str"
          },
          "pays": "str",
          "rawDateHeure": "str",
          "status": "str",
          "typeEvenement": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaires",
        "api_description": "Renvoie tous les transiatires",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "name": "str",
          "phone": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaire",
        "api_description": "Récupère un transitaire donnée",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "DOUANE_AGENCE_GONDRAND"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "codePostal": "str",
          "email": "str",
          "name": "str",
          "phone": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/tracking/correo_argentino/result_task/:task_id",
        "api_description": "Result for one Task ID.",
        "required_parameters": [
          {
            "name": "task_id",
            "type": "STRING",
            "description": "Task ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/cities/search/:stateIsoCode/:keyword",
        "api_description": "Search city for iso state and keyword name.",
        "required_parameters": [
          {
            "name": "stateIsoCode",
            "type": "STRING",
            "description": "State ISO Code",
            "default": ""
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "Keyword to search, example: Caballito",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str",
          "error": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/quotes/postcode/correo_argentino/:weight/:postCodeSrc/:postCodeDst",
        "api_description": "List of quote for postcode in Correo Argentino.",
        "required_parameters": [
          {
            "name": "postCodeDst",
            "type": "NUMBER",
            "description": "Postcode Destination",
            "default": ""
          },
          {
            "name": "postCodeSrc",
            "type": "NUMBER",
            "description": "Postcode Source",
            "default": ""
          },
          {
            "name": "weight",
            "type": "NUMBER",
            "description": "Weight in KG",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str",
          "error": "str"
        }
      }
    ],
    "query": "My company is organizing a conference in Argentina and we need to ship some packages. Can you give me a quote for shipping a package from Buenos Aires to Cordoba? Also, provide me with the contact details of the transitaires available in Argentina.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaires"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transitaires",
        "api_name": "Transitaire"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/quotes/postcode/correo_argentino/:weight/:postCodeSrc/:postCodeDst"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/cities/search/:stateIsoCode/:keyword"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/tracking/correo_argentino/result_task/:task_id"
      }
    ],
    "query_id": 61
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_year",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "movie_year",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_name",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "Movie_name",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "rank": "int",
          "title": "str",
          "year": "int",
          "director": "str",
          "cast": "str",
          "rating": "float"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_director",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "movie_director",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "rank": "int",
          "title": "str",
          "year": "int",
          "director": "str",
          "cast": "str",
          "rating": "float"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      }
    ],
    "query": "I want to watch a specific movie, 'The Shawshank Redemption'. Can you fetch the details of this movie, including its director, cast, and rating? Also, provide additional details like plot summaries, quotes, and reviews for this movie.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_name"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details"
      }
    ],
    "query_id": 3558
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Similar Movies",
        "api_name": "get Id",
        "api_description": "get the id of your movie",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "titanic"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "movies:": [
            "list of list with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Similar Movies",
        "api_name": "find similar",
        "api_description": "find similar movies for your movie",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "24168-titanic"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "movies:": [
            "list of list with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie, TV, music search and download",
        "api_name": "Search Torrents",
        "api_description": "Get downloadable  torrent link by movie name.",
        "required_parameters": [
          {
            "name": "keywords",
            "type": "STRING",
            "description": "",
            "default": "Fast X 2023"
          },
          {
            "name": "quantity",
            "type": "NUMBER",
            "description": "MAX:40",
            "default": "40"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "code": "str",
          "keyword": "str",
          "quantity": "int",
          "result": [
            {
              "title": "str",
              "torrent": "str",
              "size": "str",
              "rate": "int",
              "_list_length": 40
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie, TV, music search and download",
        "api_name": "Get Monthly Top 100 Movies Torrents",
        "api_description": "Monthly Top 100 Movies Torrents",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "str",
          "result": [
            {
              "title": "str",
              "torrent": "str",
              "size": "str",
              "rate": "int",
              "_list_length": 100
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie, TV, music search and download",
        "api_name": "Get Monthly Top 100 Games Torrents",
        "api_description": "Monthly Top 100 Games Torrents",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "str",
          "result": [
            {
              "title": "str",
              "torrent": "str",
              "size": "str",
              "rate": "int",
              "_list_length": 100
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "MoviesDatabase",
        "api_name": "/titles/{id}/aka",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Imdb Id of title ex: tt0000002",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str",
          "stack": "str",
          "results": "NoneType"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "MoviesDatabase",
        "api_name": "/actors",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "Page number",
            "default": ""
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Number of titles per page (default: 10) -> 10 max ",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "next": "str",
          "entries": "int",
          "results": [
            {
              "_id": "str",
              "nconst": "str",
              "primaryName": "str",
              "birthYear": "int",
              "deathYear": "int",
              "primaryProfession": "str",
              "knownForTitles": "str",
              "_list_length": 10
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "MoviesDatabase",
        "api_name": "/actors/{id}",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Actor imdb id",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "error": "str",
          "stack": "str",
          "results": "NoneType"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Star Wars Characters",
        "api_name": "Get all characters",
        "api_description": "Get all characters with all details",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "mass": "str",
          "name": "str",
          "gender": "str",
          "height": "str",
          "species": "str",
          "eye_color": "str",
          "homeworld": "str",
          "birth_year": "str",
          "hair_color": "str",
          "skin_color": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm a filmmaker and I need inspiration for my next project. Can you recommend some similar movies to 'The Shawshank Redemption' and provide their IMDb ratings? Also, fetch the title details for these movies, including their genres, runtimes, and available streaming platforms.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Similar Movies",
        "api_name": "find similar"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      }
    ],
    "query_id": 3609
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "DAILY OVRLL 0822202130334",
        "api_name": "/status/200",
        "api_description": "Testing",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_director",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "movie_director",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "rank": "int",
          "title": "str",
          "year": "int",
          "director": "str",
          "cast": "str",
          "rating": "float"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_name",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "Movie_name",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "rank": "int",
          "title": "str",
          "year": "int",
          "director": "str",
          "cast": "str",
          "rating": "float"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_year",
        "api_description": "<br /><br />\n<b>Authentication:</b> not required",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "movie_year",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "Anime DB",
        "api_name": "Get one anime by ranking",
        "api_description": "Get anime by ranking",
        "required_parameters": [
          {
            "name": "rank",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Anime DB",
        "api_name": "Get by id",
        "api_description": "Get anime by its corresponding ID.\n\nID is got from 'Get All' endpoint",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": 1
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_id": "str",
          "title": "str",
          "alternativeTitles": [
            "list of str with length 2"
          ],
          "ranking": "int",
          "genres": [
            "list of str with length 3"
          ],
          "episodes": "int",
          "hasEpisode": "bool",
          "hasRanking": "bool",
          "image": "str",
          "link": "str",
          "status": "str",
          "synopsis": "str",
          "thumb": "str",
          "type": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Anime DB",
        "api_name": "Get Genres",
        "api_description": "Get Genres",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_id": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)",
        "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "Title to search for.",
            "default": "batman"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
            "default": "movie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm planning a family movie night and I need some suggestions for movies suitable for children. Can you recommend some family-friendly movies released in the last five years? Also, provide me with the streaming platforms where these movies are available in the US.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "IMDB_API",
        "api_name": "/get_movies_by_year"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)"
      }
    ],
    "query_id": 3746
  },
  {
    "api_list": [
      {
        "category_name": "Video_Images",
        "tool_name": "Youtube Videos",
        "api_name": "/mp4",
        "api_description": "Returns a list of MP4 files with different qualities and other details.",
        "required_parameters": [
          {
            "name": "videoId",
            "type": "STRING",
            "description": "",
            "default": "M0VWroX0gZA"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "items": [
            {
              "quality": "str",
              "width": "int",
              "height": "int",
              "size": "int",
              "url": "str",
              "_list_length": 12
            }
          ]
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "QrCodeGenerator",
        "api_name": "Home",
        "api_description": "Home endtpoint",
        "required_parameters": [
          {
            "name": "data",
            "type": "STRING",
            "description": "",
            "default": "Be happy! "
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Video_Images",
        "tool_name": "MlemAPI",
        "api_name": "Mlem ID",
        "api_description": "Returns one mlem image by ID in JSON",
        "required_parameters": [
          {
            "name": "mlemid",
            "type": "NUMBER",
            "description": "Mlem ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "MlemAPI",
        "api_name": "Random mlem",
        "api_description": "Returns one random mlem image in JSON",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "brightness",
            "type": "STRING",
            "description": "Image brightness: dark or bright",
            "default": ""
          },
          {
            "name": "maxheight",
            "type": "NUMBER",
            "description": "Maximum height",
            "default": ""
          },
          {
            "name": "minwidth",
            "type": "NUMBER",
            "description": "Maximum width",
            "default": ""
          },
          {
            "name": "minheight",
            "type": "NUMBER",
            "description": "Minimum height",
            "default": ""
          },
          {
            "name": "tag",
            "type": "STRING",
            "description": "Tag of mlem",
            "default": ""
          },
          {
            "name": "maxwidth",
            "type": "NUMBER",
            "description": "Minimum width",
            "default": ""
          },
          {
            "name": "orientation",
            "type": "STRING",
            "description": "Image orientation: square, landscape, portrait",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "url": "str",
          "width": "int",
          "height": "int",
          "orientation": "str",
          "brightness": "str",
          "tags": [
            "list of str with length 1"
          ],
          "code": "int"
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "MlemAPI",
        "api_name": "New mlem",
        "api_description": "Returns one most recently published mlem image in JSON",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "url": "str",
          "width": "int",
          "height": "int",
          "orientation": "str",
          "brightness": "str",
          "tags": [
            "list of str with length 1"
          ],
          "code": "int"
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "Premium-Anime-Mobile-Wallpapers-Illustrations",
        "api_name": "Anime wallpapers related to the family by pagination",
        "api_description": "Get anime wallpapers related to the family:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
        "required_parameters": [
          {
            "name": "sensitivity",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [
          {
            "name": "quality",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "Premium-Anime-Mobile-Wallpapers-Illustrations",
        "api_name": "Anime wallpapers related to the halloween by pagination",
        "api_description": "Get anime wallpapers related to the halloween:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
        "required_parameters": [
          {
            "name": "sensitivity",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [
          {
            "name": "quality",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Video_Images",
        "tool_name": "Premium-Anime-Mobile-Wallpapers-Illustrations",
        "api_name": "Anime wallpapers related to the valentine by pagination",
        "api_description": "Get anime wallpapers related to the valentine:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "sensitivity",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          }
        ],
        "optional_parameters": [
          {
            "name": "quality",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "art_id": "str",
          "animename": "str",
          "arturl": "str",
          "sensitivity": "int"
        }
      }
    ],
    "query": "I'm organizing a surprise birthday party for my sister and I want to create a personalized QR code invitation. Can you generate a QR code with the message 'You're invited to Sarah's birthday party!'? Also, I would like to include an anime wallpaper related to birthdays in the invitation.",
    "relevant APIs": [
      {
        "category_name": "Video_Images",
        "tool_name": "QrCodeGenerator",
        "api_name": "Home"
      },
      {
        "category_name": "Video_Images",
        "tool_name": "Premium-Anime-Mobile-Wallpapers-Illustrations",
        "api_name": "Anime wallpapers related to the family by pagination"
      }
    ],
    "query_id": 4249
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Scala Code Compiler",
        "api_name": "Scala Versions",
        "api_description": "Scala Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          },
          "2": {
            "id": "int",
            "name": "str"
          },
          "3": {
            "id": "int",
            "name": "str"
          },
          "4": {
            "id": "int",
            "name": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "utile-space",
        "api_name": "/dns/{domain}",
        "api_description": "",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "utile-space",
        "api_name": "/d{die}",
        "api_description": "Roll a die with n faces. With n between 2 and 100.",
        "required_parameters": [
          {
            "name": "die",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "utile-space",
        "api_name": "/health",
        "api_description": "API health information.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "SQL Code Compiler",
        "api_name": "SQL Versions",
        "api_description": "SQL Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          },
          "2": {
            "id": "int",
            "name": "str"
          },
          "3": {
            "id": "int",
            "name": "str"
          },
          "4": {
            "id": "int",
            "name": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "PHP Code Compiler",
        "api_name": "PHP Versions",
        "api_description": "PHP Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          },
          "2": {
            "id": "int",
            "name": "str"
          },
          "3": {
            "id": "int",
            "name": "str"
          },
          "4": {
            "id": "int",
            "name": "str"
          }
        }
      }
    ],
    "query": "I'm a software engineer and I'm working on a project that involves integrating multiple programming languages. Can you provide me with the available versions of Scala, PHP, and SQL along with their IDs?",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Scala Code Compiler",
        "api_name": "Scala Versions"
      },
      {
        "category_name": "Tools",
        "tool_name": "PHP Code Compiler",
        "api_name": "PHP Versions"
      },
      {
        "category_name": "Tools",
        "tool_name": "SQL Code Compiler",
        "api_name": "SQL Versions"
      },
      {
        "category_name": "Tools",
        "tool_name": "Scala Code Compiler",
        "api_name": "Scala Versions"
      },
      {
        "category_name": "Tools",
        "tool_name": "PHP Code Compiler",
        "api_name": "PHP Versions"
      }
    ],
    "query_id": 14097
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hsl to cmyk",
        "api_description": "Converts  hsl color code to cmyk color code",
        "required_parameters": [
          {
            "name": "s",
            "type": "NUMBER",
            "description": "",
            "default": "78"
          },
          {
            "name": "h",
            "type": "NUMBER",
            "description": "",
            "default": "250"
          },
          {
            "name": "l",
            "type": "NUMBER",
            "description": "",
            "default": "45"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "cyan": "int",
          "magenta": "int",
          "yellow": "int",
          "key": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "cmyk to hsv",
        "api_description": "Converts  cmyk color code to hsv color code",
        "required_parameters": [
          {
            "name": "m",
            "type": "NUMBER",
            "description": "",
            "default": "88.5"
          },
          {
            "name": "k",
            "type": "NUMBER",
            "description": "",
            "default": "20.3"
          },
          {
            "name": "y",
            "type": "NUMBER",
            "description": "",
            "default": "12"
          },
          {
            "name": "c",
            "type": "NUMBER",
            "description": "",
            "default": "73"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "hue": "int",
          "saturation": "int",
          "value": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hex to cmyk",
        "api_description": "Converts hex color code to  cmyk color code",
        "required_parameters": [
          {
            "name": "hex",
            "type": "STRING",
            "description": "",
            "default": "ffffff"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "cyan": "int",
          "magenta": "int",
          "yellow": "int",
          "key": "int"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoFromCache",
        "api_description": "Return the video summary of a given YouTube video that has already been summarized. The summary is provided in markdown format.",
        "required_parameters": [
          {
            "name": "videoURL",
            "type": "STRING",
            "description": "The URL of the YouTube video to get from the summary cache.",
            "default": "https://www.youtube.com/watch?v=ykY69lSpDdo"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "summary": "str",
          "videoTitle": "str",
          "videoAuthor": "str",
          "videoId": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoWithToken",
        "api_description": "Create a video summary of a given YouTube video. The summary is provided in markdown format.",
        "required_parameters": [
          {
            "name": "videoURL",
            "type": "STRING",
            "description": "The URL of the YouTube video to summarize.",
            "default": "https://www.youtube.com/watch?v=Yzx7ihtCGBs"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm starting a new business and I need a professional logo design. Convert the HSL color code '210, 80, 50' to CMYK and then provide me with a YouTube video summary of a tutorial on logo design principles. Additionally, convert the hex color code '#00ff99' to CMYK.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hsl to cmyk"
      },
      {
        "category_name": "Tools",
        "tool_name": "Convexity",
        "api_name": "hex to cmyk"
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoFromCache"
      }
    ],
    "query_id": 14161
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Go QR code - LINK to QRCODE",
        "api_name": "QR Code Endpoint",
        "api_description": "/qr",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Whois by API-Ninjas",
        "api_name": "/v1/whois",
        "api_description": "API Ninjas Whois API endpoint. Returns domain registration details (e.g. registrar, contact information, expiration date, name servers) about a particular domain name.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "valid domain to check.",
            "default": "example.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "domain_name": "str",
          "registrar": "str",
          "whois_server": "str",
          "updated_date": "int",
          "creation_date": "int",
          "expiration_date": "int",
          "name_servers": [
            "list of str with length 2"
          ],
          "dnssec": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator API",
        "api_name": "Password of length 50",
        "api_description": "Gives you length 50 password",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "length",
            "type": "STRING",
            "description": "",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "password": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator API",
        "api_name": "Base",
        "api_description": "Only this endpoint is currently supported which gives you a random password",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "password": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "QR Code Wizard",
        "api_name": "Generate QR",
        "api_description": "Generate QR codes with ease via API",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "www.google.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "QuickMocker",
        "api_name": "Sample user read",
        "api_description": "Sample user read",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "user_id": "str",
          "confirmation_code": "str",
          "name": "str"
        }
      }
    ],
    "query": "I'm planning a family vacation to a remote location and want to ensure we have a secure Wi-Fi connection. Can you provide me with the WHOIS details for the domain 'securewifi.com'? Additionally, I need a 50-character password to secure our Wi-Fi network.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Whois by API-Ninjas",
        "api_name": "/v1/whois"
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator API",
        "api_name": "Password of length 50"
      }
    ],
    "query_id": 14400
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "CEP Brazil",
        "api_name": "Retorna Dados do Endereço através do CEP",
        "api_description": "Retorna dados endereço",
        "required_parameters": [
          {
            "name": "cepNumber",
            "type": "string",
            "description": "",
            "default": "75094080"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "bairro": "str",
          "cep": "str",
          "cidade": "str",
          "complemento2": "str",
          "end": "str",
          "uf": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "GS1Parser",
        "api_name": "/parse",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "Machine- or human-readable GS1 barcode data.",
            "default": "(01)12345678901231(10)ABCD-123(30)27(11)211015"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "parser": {
            "request": {
              "data": "str",
              "service-level": "int",
              "invocation-id": "str",
              "source": "str",
              "genspec-compliance": "str",
              "doc-version": "str"
            },
            "response": {
              "state": "bool",
              "application-identifiers": [
                {
                  "AI01": {
                    "identifier": "str",
                    "datacontent": "str",
                    "hri": "str",
                    "mri": "str",
                    "rendered-content": {
                      "description": "str",
                      "issuing country": "str"
                    },
                    "description": "str",
                    "datatitle": "str",
                    "state": "bool",
                    "aiformat": {
                      "identifierlength": "int",
                      "mindatalength": "int",
                      "maxdatalength": "int",
                      "allowalphanumeric": "bool",
                      "terminatorrequired": "bool",
                      "gs1formatstring": "str",
                      "datatype": "str",
                      "unit": "str"
                    },
                    "messages": "empty list"
                  },
                  "_list_length": 4
                }
              ],
              "messages": "empty list"
            }
          }
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Kargom Nerede",
        "api_name": "companies",
        "api_description": "Companies",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "value": [
            {
              "id": "int",
              "name": "str",
              "image": "str",
              "info": "NoneType",
              "additionalDatas": "NoneType",
              "_list_length": 31
            }
          ],
          "success": "bool",
          "message": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Air Cargo CO2 Track And Trace",
        "api_name": "PULL (track)",
        "api_description": "By providing a valid AWB, you can get tracking information for the shipment.",
        "required_parameters": [
          {
            "name": "awb",
            "type": "STRING",
            "description": "provide valid AWB number",
            "default": "000-99999970"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "awb": "str",
          "weight": "str",
          "pieces": "str",
          "origin": "str",
          "destination": "str",
          "events": [
            {
              "code": "str",
              "eventDate": "str",
              "eventLocation": "str",
              "eventLocationCoord": "str",
              "flight": {
                "number": "str",
                "origin": "str",
                "destination": "str",
                "originCoord": "str",
                "destinationCoord": "str",
                "scheduledDeparture": "str",
                "actualDeparture": "str",
                "scheduledArrival": "str",
                "actualArrival": "str",
                "carbonEmission": "str",
                "distance": "str",
                "duration": "str"
              },
              "weight": "str",
              "pieces": "str",
              "isPlanned": "bool",
              "distance": "str",
              "origin": "str",
              "destination": "str",
              "time": "str",
              "flightNumber": "str",
              "scheduledDepartureDate": "str",
              "carbonEmission": "str",
              "originCoord": "str",
              "destinationCoord": "str",
              "_list_length": 13
            }
          ],
          "status": "str",
          "originCoord": "str",
          "destinationCoord": "str",
          "carbonEmission": "str",
          "distance": "str",
          "time": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "SQUAKE",
        "api_name": "Projects",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Logistics",
        "tool_name": "SQUAKE",
        "api_name": "Checkhealth",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm planning a family vacation to Brazil and we need to rent a car for our trip. Can you suggest some car rental companies in Rio de Janeiro? Also, provide me with the contact details and rental prices for these companies. Additionally, I would like to know the top tourist attractions in Rio de Janeiro.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "Kargom Nerede",
        "api_name": "companies"
      },
      {
        "category_name": "Logistics",
        "tool_name": "CEP Brazil",
        "api_name": "Retorna Dados do Endereço através do CEP"
      },
      {
        "category_name": "Logistics",
        "tool_name": "CEP Brazil",
        "api_name": "Retorna Dados do Endereço através do CEP"
      }
    ],
    "query_id": 29633
  },
  {
    "api_list": [
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/tracking/correo_argentino/result_task/:task_id",
        "api_description": "Result for one Task ID.",
        "required_parameters": [
          {
            "name": "task_id",
            "type": "STRING",
            "description": "Task ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/cities/postcode/:stateIsoCode/:postCode",
        "api_description": "List of city for iso state and postcode.",
        "required_parameters": [
          {
            "name": "stateIsoCode",
            "type": "STRING",
            "description": "State ISO Code",
            "default": ""
          },
          {
            "name": "postCode",
            "type": "STRING",
            "description": "Postcode",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str",
          "error": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Transportistas de Argentina",
        "api_name": "/quotes/postcode/oca/:cuit/:operativa/:cost/:weight/:volume/:postCodeSrc/:postCodeDst",
        "api_description": "Quote for postcode in OCA e-Pack.",
        "required_parameters": [
          {
            "name": "postCodeDst",
            "type": "NUMBER",
            "description": "Postcode Destination",
            "default": ""
          },
          {
            "name": "cuit",
            "type": "STRING",
            "description": "CUIT of your account in OCA e-Pack",
            "default": ""
          },
          {
            "name": "operativa",
            "type": "STRING",
            "description": "Operativa number of your account in OCA e-Pack",
            "default": ""
          },
          {
            "name": "cost",
            "type": "NUMBER",
            "description": "Cost of products in ARS",
            "default": ""
          },
          {
            "name": "postCodeSrc",
            "type": "NUMBER",
            "description": "Postcode Source",
            "default": ""
          },
          {
            "name": "volume",
            "type": "NUMBER",
            "description": "Volume in cm3",
            "default": ""
          },
          {
            "name": "weight",
            "type": "NUMBER",
            "description": "Weight in KG",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str",
          "error": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Kargom Nerede",
        "api_name": "companies",
        "api_description": "Companies",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "value": [
            {
              "id": "int",
              "name": "str",
              "image": "str",
              "info": "NoneType",
              "additionalDatas": "NoneType",
              "_list_length": 31
            }
          ],
          "success": "bool",
          "message": "str"
        }
      },
      {
        "category_name": "Logistics",
        "tool_name": "Create Container Tracking",
        "api_name": "Get Tracking Data",
        "api_description": "The user will be able to retrieve the data using this endpoint.",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "6045e2f44e1b233199a5e77a"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm planning a family reunion in Buenos Aires and need to send out invitations to all family members. Can you provide me with a list of courier companies available in Buenos Aires along with their contact details? Additionally, I would like to track the shipment of the reunion materials using the tracking ID '6045e2f44e1b233199a5e77a' from Create Container Tracking.",
    "relevant APIs": [
      {
        "category_name": "Logistics",
        "tool_name": "Kargom Nerede",
        "api_name": "companies"
      },
      {
        "category_name": "Logistics",
        "tool_name": "Create Container Tracking",
        "api_name": "Get Tracking Data"
      }
    ],
    "query_id": 29712
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Star Wars Characters",
        "api_name": "Get all characters",
        "api_description": "Get all characters with all details",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "mass": "str",
          "name": "str",
          "gender": "str",
          "height": "str",
          "species": "str",
          "eye_color": "str",
          "homeworld": "str",
          "birth_year": "str",
          "hair_color": "str",
          "skin_color": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "DAILY OVRLL 0822202124848",
        "api_name": "/status/200",
        "api_description": "Testing",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Movies",
        "tool_name": "DAILY OVRLL 0822202130334",
        "api_name": "/status/200",
        "api_description": "Testing",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm planning a Star Wars-themed cosplay event and I want to gather information about the characters. Can you provide me with the details of a specific character, including their name, hair color, and skin color? Additionally, suggest some OTT platforms that offer Star Wars movies for inspiration.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Star Wars Characters",
        "api_name": "Get all characters"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      }
    ],
    "query_id": 33156
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "Get quote by character",
        "api_description": "This end point will return back quotes delivered by the given character",
        "required_parameters": [
          {
            "name": "character",
            "type": "string",
            "description": "",
            "default": "dorothy_gale"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "actor": "str",
          "quoteFrom": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET a random quote",
        "api_description": "This endpoint will return a random quote",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "quoteFrom": "str",
          "actor": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET quote by Year",
        "api_description": "This endpoint will return back quotes by the given year",
        "required_parameters": [
          {
            "name": "year",
            "type": "NUMBER",
            "description": "",
            "default": "1939"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "quote": "str",
          "character": "str",
          "actor": "str",
          "quoteFrom": "str",
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Films",
        "api_name": "searchInventory",
        "api_description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "searchString",
            "type": "STRING",
            "description": "pass an optional search string for looking up inventory",
            "default": "string"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "maximum number of records to return",
            "default": 0
          },
          {
            "name": "skip",
            "type": "NUMBER",
            "description": "number of records to skip for pagination",
            "default": 0
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "str",
          "name": "str",
          "releaseDate": "str",
          "manufacturer": {
            "name": "str",
            "homePage": "str",
            "phone": "str"
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movies NEWS",
        "api_name": "movies_news_recent_get",
        "api_description": "Get the most recent movies news from top sources\n10 news items will be returned per request",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "date": "str",
          "description": "str",
          "image": "str",
          "link": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "DAILY OVRLL 0822202140642",
        "api_name": "/status/200",
        "api_description": "Testing",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a film buff and I want to immerse myself in the world of movies. Can you fetch me a random quote to ignite my passion for cinema? Additionally, provide me with some movies news articles to keep me updated on the latest industry trends.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Movie and TV shows Quotes",
        "api_name": "GET a random quote"
      },
      {
        "category_name": "Movies",
        "tool_name": "Movies NEWS",
        "api_name": "movies_news_recent_get"
      }
    ],
    "query_id": 33171
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "DAILY OVRLL 0822202124848",
        "api_name": "/status/200",
        "api_description": "Testing",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Movies",
        "tool_name": "MoviesDatabase",
        "api_name": "/titles/search/title/{title}",
        "api_description": "Search by Title",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "Title of  the Movie/Series",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "exact",
            "type": "BOOLEAN",
            "description": "Search by exact title",
            "default": "true"
          },
          {
            "name": "info",
            "type": "STRING",
            "description": "Info type structure (default: mini-info) -> base_info / mini_info / image /...",
            "default": ""
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "Year filter ex: ?year=2020",
            "default": ""
          },
          {
            "name": "page",
            "type": "STRING",
            "description": "Page number",
            "default": ""
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Add sorting (incr, decr) -> year.incr /year.decr",
            "default": ""
          },
          {
            "name": "endYear",
            "type": "NUMBER",
            "description": "Year range filter -to- ex: ?endYear=2020",
            "default": ""
          },
          {
            "name": "startYear",
            "type": "NUMBER",
            "description": "Year range filter -from- ex: ?startYear=2020",
            "default": ""
          },
          {
            "name": "titleType",
            "type": "STRING",
            "description": "Filter by type of title",
            "default": "movie"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Number of titles per page (default: 10) -> 10 max ",
            "default": ""
          },
          {
            "name": "list",
            "type": "STRING",
            "description": "Selected list -> most_pop_movies / most_pop_series / top_rated_series_250 / ...",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str",
          "stack": "str",
          "results": "NoneType"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "MoviesDatabase",
        "api_name": "/titles/random",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "startYear",
            "type": "NUMBER",
            "description": "Year range filter -from- ex: ?startYear=2020",
            "default": ""
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "Year filter ex: ?genre=Drama",
            "default": ""
          },
          {
            "name": "titleType",
            "type": "STRING",
            "description": "Filter by type of title",
            "default": ""
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Add sorting (incr, decr) -> year.incr /year.decr",
            "default": ""
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Number of titles per page (default: 10) -> 10 max ",
            "default": ""
          },
          {
            "name": "info",
            "type": "STRING",
            "description": "Info type structure (default: mini-info) -> base_info / mini_info / image / ...",
            "default": ""
          },
          {
            "name": "endYear",
            "type": "NUMBER",
            "description": "Year range filter -to- ex: ?endYear=2020",
            "default": ""
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "Year filter ex: ?year=2020",
            "default": ""
          },
          {
            "name": "list",
            "type": "STRING",
            "description": "Selected list -> most_pop_movies / most_pop_series / top_rated_series_250 / ...",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "error": "str",
          "stack": "str",
          "results": "NoneType"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "MoviesDatabase",
        "api_name": "/titles/utils/genres",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "results": [
            "list of NoneType with length 29"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Star Wars Characters",
        "api_name": "Get all characters",
        "api_description": "Get all characters with all details",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "mass": "str",
          "name": "str",
          "gender": "str",
          "height": "str",
          "species": "str",
          "eye_color": "str",
          "homeworld": "str",
          "birth_year": "str",
          "hair_color": "str",
          "skin_color": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Similar Movies",
        "api_name": "find similar",
        "api_description": "find similar movies for your movie",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "24168-titanic"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "movies:": [
            "list of list with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Similar Movies",
        "api_name": "get Id",
        "api_description": "get the id of your movie",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "titanic"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "movies:": [
            "list of list with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Anime DB",
        "api_name": "Get one anime by ranking",
        "api_description": "Get anime by ranking",
        "required_parameters": [
          {
            "name": "rank",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Anime DB",
        "api_name": "Get All",
        "api_description": "Get List of anime. You can search, sort an specify genre",
        "required_parameters": [
          {
            "name": "page",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "size",
            "type": "STRING",
            "description": "",
            "default": "10"
          }
        ],
        "optional_parameters": [
          {
            "name": "types",
            "type": "STRING",
            "description": "Anime type, separated by comma",
            "default": ""
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "genres separated by comma",
            "default": "Fantasy,Drama"
          },
          {
            "name": "sortBy",
            "type": "STRING",
            "description": "ranking or title",
            "default": "ranking"
          },
          {
            "name": "sortOrder",
            "type": "STRING",
            "description": "asc or desc",
            "default": "asc"
          },
          {
            "name": "search",
            "type": "STRING",
            "description": "Search by title or alternative titles. Search will ignore sort",
            "default": "Fullmetal"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "_id": "str",
              "title": "str",
              "alternativeTitles": [
                "list of str with length 9"
              ],
              "ranking": "int",
              "genres": [
                "list of str with length 4"
              ],
              "episodes": "int",
              "hasEpisode": "bool",
              "hasRanking": "bool",
              "image": "str",
              "link": "str",
              "status": "str",
              "synopsis": "str",
              "thumb": "str",
              "type": "str",
              "_list_length": 9
            }
          ],
          "meta": {
            "page": "int",
            "size": "int",
            "totalData": "int",
            "totalPage": "int"
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Anime DB",
        "api_name": "Get Genres",
        "api_description": "Get Genres",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_id": "str"
        }
      }
    ],
    "query": "I'm planning a movie night with my friends and we're looking for some movie recommendations. Can you suggest some popular drama movies released in the past year? Also, could you find similar movies to 'Titanic'? We'd appreciate it!",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "MoviesDatabase",
        "api_name": "/titles/search/title/{title}"
      },
      {
        "category_name": "Movies",
        "tool_name": "Similar Movies",
        "api_name": "find similar"
      }
    ],
    "query_id": 33263
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "IMDb top 100 movies",
        "api_name": "Get Top 100 Movies according to IMDb",
        "api_description": "Get Top 100 Movies according to IMDb",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_id": "str",
          "id": "str",
          "__v": "int",
          "description": "str",
          "director": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "image": [
            "list of list with length 3"
          ],
          "imdbid": "str",
          "rank": "int",
          "rating": "str",
          "thumbnail": "str",
          "title": "str",
          "writers": [
            "list of str with length 2"
          ],
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "IMDb top 100 movies",
        "api_name": "Get a specific  Movie  by id",
        "api_description": "get top x movie by id 'top46' :\nThe Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Genre, Director, Writer and IMDb ID .",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "top13"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "_id": "str",
          "id": "str",
          "__v": "int",
          "description": "str",
          "director": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 3"
          ],
          "image": [
            "list of list with length 3"
          ],
          "imdbid": "str",
          "rank": "int",
          "rating": "str",
          "thumbnail": "str",
          "title": "str",
          "writers": [
            "list of str with length 3"
          ],
          "year": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Movies NEWS",
        "api_name": "movies_news_recent_get",
        "api_description": "Get the most recent movies news from top sources\n10 news items will be returned per request",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "date": "str",
          "description": "str",
          "image": "str",
          "link": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "DAILY OVRLL 0822202130837",
        "api_name": "/status/200",
        "api_description": "Testing",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to create a movie-themed website and I need some content. Can you fetch the titles, directors, ratings, and release years of the top 100 movies according to IMDb? Additionally, provide me with the most recent movies news from top sources to keep the website up to date.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "IMDb top 100 movies",
        "api_name": "Get Top 100 Movies according to IMDb"
      },
      {
        "category_name": "Movies",
        "tool_name": "Movies NEWS",
        "api_name": "movies_news_recent_get"
      }
    ],
    "query_id": 33271
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "unit converter",
        "api_name": "info",
        "api_description": "info",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "area": [
            "list of str with length 8"
          ],
          "data-transfer-rate": [
            "list of str with length 13"
          ],
          "digital-storage": [
            "list of str with length 22"
          ],
          "energy": [
            "list of str with length 10"
          ],
          "frequency": [
            "list of str with length 4"
          ],
          "fuel-economics": [
            "list of str with length 4"
          ],
          "length": [
            "list of str with length 11"
          ],
          "mass": [
            "list of str with length 10"
          ],
          "plane-angle": [
            "list of str with length 6"
          ],
          "pressure": [
            "list of str with length 5"
          ],
          "speed": [
            "list of str with length 5"
          ],
          "temperature": [
            "list of str with length 3"
          ],
          "time": [
            "list of str with length 12"
          ],
          "volume": [
            "list of str with length 19"
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "unit converter",
        "api_name": "Transform Units Using The Get Method",
        "api_description": "Transform Units Using The Get Method",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "to",
            "type": "STRING",
            "description": "",
            "default": "Square mile"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "",
            "default": "area"
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "",
            "default": "Square kilometer"
          },
          {
            "name": "value",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "from": "str",
          "to": "str",
          "input": "int",
          "result": "float"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Github Repos",
        "api_name": "Search",
        "api_description": "Search for public repositories of an user",
        "required_parameters": [
          {
            "name": "user",
            "type": "STRING",
            "description": "",
            "default": "samuk-a"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "repositories": [
            {
              "id": "int",
              "name": "str",
              "url": "str",
              "description": "str",
              "language": "str",
              "_list_length": 16
            }
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "giflayer",
        "api_name": "/capture",
        "api_description": "Main API endpoint used to generate GIFs",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "The video URL you would like to generate a GIF from",
            "default": ""
          },
          {
            "name": "start",
            "type": "NUMBER",
            "description": "The starting time (in seconds) of your GIF",
            "default": ""
          },
          {
            "name": "end",
            "type": "NUMBER",
            "description": "The ending time (in seconds) of your GIF",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "duration",
            "type": "NUMBER",
            "description": "The duration (in seconds) of your GIF",
            "default": ""
          },
          {
            "name": "size",
            "type": "STRING",
            "description": "resize the GIF to the dimensions of your choice (accepts width and height in pixels) (Default: 300x200)",
            "default": ""
          },
          {
            "name": "crop",
            "type": "STRING",
            "description": "Crop the GIF to the size of your choice (accepts width and height in pixels)",
            "default": ""
          },
          {
            "name": "fps",
            "type": "NUMBER",
            "description": "specify a GIF quality (Frames per Second) of your choice (Default: 15)",
            "default": "15"
          },
          {
            "name": "trailer",
            "type": "NUMBER",
            "description": "Set to \"1\" to create default trailer, or specify custom trailer parameters",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "error": {
            "code": "int",
            "type": "str",
            "info": "str"
          }
        }
      }
    ],
    "query": "I'm a student and I'm working on a physics project. I need to convert the temperature from Celsius to Kelvin. Can you provide me with the conversion formula? Also, suggest some repositories related to physics on GitHub.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "unit converter",
        "api_name": "Transform Units Using The Get Method"
      },
      {
        "category_name": "Tools",
        "tool_name": "Github Repos",
        "api_name": "Search"
      }
    ],
    "query_id": 42608
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "QR Code - Dynamic and Static",
        "api_name": "List Specific QR Code",
        "api_description": "From this endpoint is to get the information of a specific registered qr code, related to the respective api key",
        "required_parameters": [
          {
            "name": "ref",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "msg": "str",
          "err": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "QR Code - Dynamic and Static",
        "api_name": "List All QR Code's",
        "api_description": "From this endpoint is to list all registered qr codes, related to their api key.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "msg": "str",
          "err": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "QR Code - Dynamic and Static",
        "api_name": "Generate API Key",
        "api_description": "From this endpoint you can generate a single api key.\n\nIt will be used to link all the qr code created, and allow any changes.\n\nImportant: Keep in mind that once generated, it is necessary that you store this key well, since it is not possible to recover it, and without it, you do not have access to change any of your QR Codes.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "msg": "str",
          "data": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password",
        "api_description": "Generate Password",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "excludeSimilarCharacters",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "strict",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "uppercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "exclude",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "symbols",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "lowercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "length",
            "type": "NUMBER",
            "description": "",
            "default": "15"
          },
          {
            "name": "numbers",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "message": "str"
        }
      }
    ],
    "query": "I'm planning a family reunion and I want to create unique QR codes for each family member to scan and access event details. Can you generate personalized QR codes for each attendee? Also, I need a strong password for the event registration website. Generate a password for me with a length of 14 characters, including uppercase letters, lowercase letters, numbers, and symbols.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "QR Code - Dynamic and Static",
        "api_name": "Generate API Key"
      },
      {
        "category_name": "Tools",
        "tool_name": "QR Code - Dynamic and Static",
        "api_name": "List Specific QR Code"
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password"
      }
    ],
    "query_id": 42708
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "free QR Code Generator",
        "api_name": "Generate QR Code",
        "api_description": "Turn Word to QR Code with just one request",
        "required_parameters": [
          {
            "name": "data",
            "type": "STRING",
            "description": "",
            "default": "NigeriansOnly.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Measurement Unit Converter",
        "api_name": "Measurements detailed",
        "api_description": "GET a list of all the available measurements with unit details.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "measurements": [
            {
              "abbr": "str",
              "measure": "str",
              "system": "str",
              "singular": "str",
              "plural": "str",
              "_list_length": 2
            }
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Measurement Unit Converter",
        "api_name": "Measure units",
        "api_description": "GET enum array of all units of the given type.",
        "required_parameters": [
          {
            "name": "measure",
            "type": "string",
            "description": "",
            "default": "length"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Tools",
        "tool_name": "Measurement Unit Converter",
        "api_name": "Convert from one unit to another",
        "api_description": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.",
        "required_parameters": [
          {
            "name": "measure",
            "type": "string",
            "description": "",
            "default": "length"
          },
          {
            "name": "value",
            "type": "NUMBER",
            "description": "",
            "default": "1200"
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "",
            "default": "m"
          },
          {
            "name": "to",
            "type": "STRING",
            "description": "",
            "default": "km"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "measure": "str",
          "from": {
            "abbr": "str",
            "measure": "str",
            "system": "str",
            "singular": "str",
            "plural": "str"
          },
          "to": {
            "abbr": "str",
            "measure": "str",
            "system": "str",
            "singular": "str",
            "plural": "str"
          },
          "value": "float",
          "result": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "utile-space",
        "api_name": "/dns/{domain}",
        "api_description": "",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "utile-space",
        "api_name": "/d{die}",
        "api_description": "Roll a die with n faces. With n between 2 and 100.",
        "required_parameters": [
          {
            "name": "die",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "utile-space",
        "api_name": "/health",
        "api_description": "API health information.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm planning a vacation and I need to convert the currency from Euros to US Dollars for budgeting purposes. Can you convert 500 Euros to US Dollars? Additionally, I would like to roll a 20-sided die to determine the activities for each day of the vacation. Please convert the currency and roll the die.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Measurement Unit Converter",
        "api_name": "Convert from one unit to another"
      },
      {
        "category_name": "Tools",
        "tool_name": "utile-space",
        "api_name": "/d{die}"
      }
    ],
    "query_id": 43070
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Pascal Code Compiler",
        "api_name": "Pascal Versions",
        "api_description": "Pascal Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          },
          "2": {
            "id": "int",
            "name": "str"
          },
          "3": {
            "id": "int",
            "name": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password",
        "api_description": "Generate Password",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "excludeSimilarCharacters",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "strict",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "uppercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "exclude",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "symbols",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "lowercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "length",
            "type": "NUMBER",
            "description": "",
            "default": "15"
          },
          {
            "name": "numbers",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "CPP 17 Code Compiler",
        "api_name": "C++ 17 Versions",
        "api_description": "C++ 17 Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "👋 Demo Project_v13",
        "api_name": "Get Products",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "skip",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "👋 Demo Project_v13",
        "api_name": "Get Categories",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "👋 Demo Project_v13",
        "api_name": "Get Products in Category",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "skip",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "category",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "twitter",
        "api_name": "hls",
        "api_description": "hls => mp4 converter",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm a software developer and I need the available C++ 17 versions for a new project. Can you fetch the available C++ 17 versions? Additionally, I want to generate a strong password for my project's online documentation.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "CPP 17 Code Compiler",
        "api_name": "C++ 17 Versions"
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password"
      }
    ],
    "query_id": 43200
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Pascal Code Compiler",
        "api_name": "Pascal Versions",
        "api_description": "Pascal Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          },
          "2": {
            "id": "int",
            "name": "str"
          },
          "3": {
            "id": "int",
            "name": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password",
        "api_description": "Generate Password",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "excludeSimilarCharacters",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "strict",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "uppercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "exclude",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "symbols",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "lowercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "length",
            "type": "NUMBER",
            "description": "",
            "default": "15"
          },
          {
            "name": "numbers",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "CPP 17 Code Compiler",
        "api_name": "C++ 17 Versions",
        "api_description": "C++ 17 Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "👋 Demo Project_v13",
        "api_name": "Get Products",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "skip",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "👋 Demo Project_v13",
        "api_name": "Get Categories",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "👋 Demo Project_v13",
        "api_name": "Get Products in Category",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "skip",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "category",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "twitter",
        "api_name": "hls",
        "api_description": "hls => mp4 converter",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm a software developer and I need the available C++ 17 versions for a new project. Can you fetch the available C++ 17 versions? Additionally, I want to generate a strong password for my project's online documentation.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "CPP 17 Code Compiler",
        "api_name": "C++ 17 Versions"
      },
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password"
      }
    ],
    "query_id": 43201
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password",
        "api_description": "Generate Password",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "excludeSimilarCharacters",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "strict",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "uppercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "exclude",
            "type": "STRING",
            "description": "",
            "default": "1"
          },
          {
            "name": "symbols",
            "type": "BOOLEAN",
            "description": "",
            "default": "false"
          },
          {
            "name": "lowercase",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          },
          {
            "name": "length",
            "type": "NUMBER",
            "description": "",
            "default": "15"
          },
          {
            "name": "numbers",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "date_to_time",
        "api_description": "Convert datetime to timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674919760",
        "required_parameters": [
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "2023-01-28 15:29:20"
          },
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "date_to_time"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "timestamp": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "seconds_simplified",
        "api_description": "Convert seconds to get days, hours, minutes, seconds. (Seconds) -> Days: 1, Hours: 3, Minutes: 46, Seconds: 40",
        "required_parameters": [
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "seconds_simplified"
          },
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "100000"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "simplified": "str",
          "formatted": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "time_to_date",
        "api_description": "Convert timestamp to datetime. (year, month, day Hours:Minutes:Seconds)",
        "required_parameters": [
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "time_to_date"
          },
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "1674919760"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "datetime": "str"
        }
      }
    ],
    "query": "I'm starting a new blog and need a catchy username. Generate a 15-character password with a combination of uppercase letters, lowercase letters, and numbers. Also, convert the current date and time to a timestamp.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Password Generator",
        "api_name": "Generate Password"
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "date_to_time"
      }
    ],
    "query_id": 43230
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Scala Code Compiler",
        "api_name": "Scala Versions",
        "api_description": "Scala Versions",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "0": {
            "id": "int",
            "name": "str"
          },
          "1": {
            "id": "int",
            "name": "str"
          },
          "2": {
            "id": "int",
            "name": "str"
          },
          "3": {
            "id": "int",
            "name": "str"
          },
          "4": {
            "id": "int",
            "name": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Subdomain Scan",
        "api_name": "Get Subdomains",
        "api_description": "Enter a domain here and we'll check and return all subdomains in a JSON format for you.",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": "rapidapi.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoWithToken",
        "api_description": "Create a video summary of a given YouTube video. The summary is provided in markdown format.",
        "required_parameters": [
          {
            "name": "videoURL",
            "type": "STRING",
            "description": "The URL of the YouTube video to summarize.",
            "default": "https://www.youtube.com/watch?v=Yzx7ihtCGBs"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoFromCache",
        "api_description": "Return the video summary of a given YouTube video that has already been summarized. The summary is provided in markdown format.",
        "required_parameters": [
          {
            "name": "videoURL",
            "type": "STRING",
            "description": "The URL of the YouTube video to get from the summary cache.",
            "default": "https://www.youtube.com/watch?v=ykY69lSpDdo"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "summary": "str",
          "videoTitle": "str",
          "videoAuthor": "str",
          "videoId": "str"
        }
      }
    ],
    "query": "I'm a software developer and I need to check the available versions of Scala for my project. Could you fetch me the list of Scala versions? Also, I want to summarize a YouTube video tutorial on Scala programming for better understanding.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Scala Code Compiler",
        "api_name": "Scala Versions"
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Summarizer",
        "api_name": "/v1/youtube/summarizeVideoWithToken"
      }
    ],
    "query_id": 43994
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "QRCode",
        "api_name": "List all images",
        "api_description": "This endpoint allows you to list images hosted in the LinQR storage. If there are no images hosted, an empty array is returned.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "QRCode",
        "api_name": "List image",
        "api_description": "This endpoint allows you to list single image hosted in the LinQR storage.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "time_to_date",
        "api_description": "Convert timestamp to datetime. (year, month, day Hours:Minutes:Seconds)",
        "required_parameters": [
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "time_to_date"
          },
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "1674919760"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "datetime": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "date_to_time",
        "api_description": "Convert datetime to timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674919760",
        "required_parameters": [
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "2023-01-28 15:29:20"
          },
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "date_to_time"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "timestamp": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "seconds_simplified",
        "api_description": "Convert seconds to get days, hours, minutes, seconds. (Seconds) -> Days: 1, Hours: 3, Minutes: 46, Seconds: 40",
        "required_parameters": [
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "seconds_simplified"
          },
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "100000"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "simplified": "str",
          "formatted": "str"
        }
      }
    ],
    "query": "I'm planning to surprise my family with a vacation and I need help converting the timestamp of the flight departure to a readable date and time. Can you assist me with that? Also, I want to find out the size and source of an image. Please provide me with the details of the image with ID 24680.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "time_to_date"
      },
      {
        "category_name": "Tools",
        "tool_name": "QRCode",
        "api_name": "List image"
      }
    ],
    "query_id": 44010
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get Languages",
        "api_description": "Get active languages.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get Configuration",
        "api_description": "Configuration information gives you detailed information about the configuration of Judge0.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"maintenance_mode\": \"bool\", \"enable_wait_result\": \"bool\", \"enable_compiler_options\": \"bool\", \"allowed_languages_for_compile_options\": \"empty list\", \"enable_command_line_arguments\": \"bool\", \"enable_submission_delete\": \"bool\", \"enable_callbacks\": \"bool\", \"callbacks_max_tries\": \"int\", \"callbacks_timeout\": \"float\", \"enable_additional_files\": \"bool\", \"max_queue_size\": \"int\", \"cpu_time_limit\": \"float\", \"max_cpu_time_limit\": \"float\", \"cpu_extra_time\": \"float\", \"max_cpu_extra_time\": \"float\", \"wall_time_limit\": \"float\", \"max_wall_time_limit\": \"float\", \"memory_limit\": \"int\", \"max_memory_limit\": \"int\", \"stack_limit\": \"int\", \"max_stack_limit\": \"int\", \"max_processes_and_or_threads\": \"int\", \"max_max_processes_and_or_threads\": \"int\", \"enable_per_process_and_thread_time_limit\": \"bool\", \"allow_enable_per_process_and_thread_time_limit\": \"bool\", \"enable_per_process_and_thread_memory_limit\": \"bool\", \"allow_enable_per_process_and_thread_memory_limit\": \"bool\", \"max_file_size\": \"int\", \"max_max_file_size\": \""
      },
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get a Language",
        "api_description": "Get a language.",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "10"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "is_archived": "bool",
          "source_file": "str",
          "compile_cmd": "NoneType",
          "run_cmd": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "CORS Proxy_v2",
        "api_name": "index__get",
        "api_description": "Welcome to CORS Proxy",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Tags",
        "api_name": "Get All The Video Tags",
        "api_description": "This endpoint will return all the tags used for the SEO of a video, with the video title.",
        "required_parameters": [
          {
            "name": "URL",
            "type": "STRING",
            "description": "",
            "default": "https://www.youtube.com/watch?v=OHOJFv4iaMc"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I am organizing a surprise birthday party for my best friend and I need some ideas to make it special. Can you suggest unique party themes and decorations? Also, recommend some local bakeries for a custom birthday cake.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Judge0 Extra CE",
        "api_name": "Get Configuration"
      },
      {
        "category_name": "Tools",
        "tool_name": "CORS Proxy_v2",
        "api_name": "index__get"
      },
      {
        "category_name": "Tools",
        "tool_name": "YouTube Video Tags",
        "api_name": "Get All The Video Tags"
      }
    ],
    "query_id": 44080
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "seconds_simplified",
        "api_description": "Convert seconds to get days, hours, minutes, seconds. (Seconds) -> Days: 1, Hours: 3, Minutes: 46, Seconds: 40",
        "required_parameters": [
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "seconds_simplified"
          },
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "100000"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "simplified": "str",
          "formatted": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "start_end_date_to_time",
        "api_description": "Convert datetime to get start timestamp and end timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674864000.0, 1674950399.0",
        "required_parameters": [
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "2023-01-28 15:29:20"
          },
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "start_end_date_to_time"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "timestamp_start": "str",
          "timestamp_end": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "time_to_date",
        "api_description": "Convert timestamp to datetime. (year, month, day Hours:Minutes:Seconds)",
        "required_parameters": [
          {
            "name": "data_type",
            "type": "STRING",
            "description": "",
            "default": "time_to_date"
          },
          {
            "name": "figure",
            "type": "STRING",
            "description": "",
            "default": "1674919760"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "datetime": "str"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker API",
        "api_name": "Checker",
        "api_description": "Checks the domain Details",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "https://rapidapi.com/"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Tools",
        "tool_name": "Referral Domain checker API",
        "api_name": "Get Referral Domains",
        "api_description": "Get Referral Domains List",
        "required_parameters": [
          {
            "name": "domain",
            "type": "STRING",
            "description": "",
            "default": "getecz.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "referrers": [
            {
              "refdomain": "str",
              "backlinks": "int",
              "dofollow_backlinks": "int",
              "first_seen": "str",
              "domain_inlink_rank": "int",
              "_list_length": 33
            }
          ]
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "SEO Keyword Research",
        "api_name": "Global Result (single)",
        "api_description": "Keyword Research API",
        "required_parameters": [
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "email marketing"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "text": "str",
          "cpc": "float",
          "vol": "int",
          "v": "int",
          "competition": "str",
          "score": "float"
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "SEO Keyword Research",
        "api_name": "Keyword Research API",
        "api_description": "Keyword Research API",
        "required_parameters": [
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "email marketing"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "in"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "text": "str",
          "cpc": "str",
          "vol": "int",
          "v": "int",
          "competition": "str",
          "score": "float"
        }
      }
    ],
    "query": "I'm organizing a charity event and I need to promote it on social media. Can you provide me with some trending hashtags related to charity and fundraising? Also, suggest some popular influencers in the philanthropy sector whom I can collaborate with. Additionally, check the availability of domain names related to the event.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "SEO Keyword Research",
        "api_name": "Keyword Research API"
      },
      {
        "category_name": "Tools",
        "tool_name": "Domain Checker API",
        "api_name": "Checker"
      },
      {
        "category_name": "Tools",
        "tool_name": "Referral Domain checker API",
        "api_name": "Get Referral Domains"
      },
      {
        "category_name": "Tools",
        "tool_name": "Epoch Converter",
        "api_name": "time_to_date"
      }
    ],
    "query_id": 44260
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "Question Explorer",
        "api_name": "full data",
        "api_description": "full data",
        "required_parameters": [
          {
            "name": "keyword",
            "type": "string",
            "description": "",
            "default": "email marketing"
          }
        ],
        "optional_parameters": [
          {
            "name": "FullData",
            "type": "STRING",
            "description": "",
            "default": "digital marketing"
          }
        ],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Tools",
        "tool_name": "Question Explorer",
        "api_name": "data",
        "api_description": "full Data",
        "required_parameters": [
          {
            "name": "keyword",
            "type": "string",
            "description": "",
            "default": "Email marketing"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Tools",
        "tool_name": "Qr Code Generator_v5",
        "api_name": "qr code",
        "api_description": "Qr Generator",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "Our company is planning to launch a new product and we want to optimize our email marketing strategy. Can you provide me with comprehensive data on email marketing? Also, generate a QR code for our website URL to drive customer engagement.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "Question Explorer",
        "api_name": "full data"
      },
      {
        "category_name": "Tools",
        "tool_name": "Qr Code Generator_v5",
        "api_name": "qr code"
      }
    ],
    "query_id": 71980
  },
  {
    "api_list": [
      {
        "category_name": "Financial",
        "tool_name": "Mutual fund Nav",
        "api_name": "fundID",
        "api_description": "current Nav",
        "required_parameters": [
          {
            "name": "ID",
            "type": "STRING",
            "description": "FundID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Crypto Symbols by API-Ninjas",
        "api_name": "/v1/cryptosymbols",
        "api_description": "API Ninjas Crypto Symbols API",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbols": [
            "list of str with length 522"
          ],
          "timestamp": "int"
        }
      }
    ],
    "query": "I'm starting a new business and I need to manage my finances effectively. Can you assist me in retrieving the current NAV for mutual funds with IDs 'STU321' and 'VWX654'? Additionally, I want to explore the world of cryptocurrencies. Please provide the latest crypto symbols and their corresponding timestamp.",
    "relevant APIs": [
      {
        "category_name": "Financial",
        "tool_name": "Mutual fund Nav",
        "api_name": "fundID"
      },
      {
        "category_name": "Financial",
        "tool_name": "Crypto Symbols by API-Ninjas",
        "api_name": "/v1/cryptosymbols"
      }
    ],
    "query_id": 4746
  },
  {
    "api_list": [
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "BMI_v2",
        "api_name": "Gives the BMI when you input height in feet and inches & input weight in kilograms",
        "api_description": "The API generates the BMI in kg/m2. You need to enter the weight in kilograms and height in feet and inches",
        "required_parameters": [
          {
            "name": "weightinkg",
            "type": "NUMBER",
            "description": "",
            "default": "70.5"
          },
          {
            "name": "heightfeet",
            "type": "NUMBER",
            "description": "",
            "default": "5"
          },
          {
            "name": "heightinches",
            "type": "NUMBER",
            "description": "",
            "default": "7"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "BMI_v2",
        "api_name": "Gives the BMI when you Input values in Metric units",
        "api_description": "Gives the BMI in kg/m2 when we input height in centimeters and weight in kilograms",
        "required_parameters": [
          {
            "name": "heightincm",
            "type": "NUMBER",
            "description": "",
            "default": "180"
          },
          {
            "name": "weightinkg",
            "type": "NUMBER",
            "description": "",
            "default": "70.5"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "BMI_v2",
        "api_name": "Gives the weight catergory based on the BMI",
        "api_description": "The API catergorizes the person based on the BMI. The catergories would be Underweight, Normal weight, Overweight, Obesity Class I, Obesity Class II and Obesity Class III. These definitions differ in Asians hence you may be able to enter the ethnicity of the person (Asian or not asian)",
        "required_parameters": [
          {
            "name": "bmienter",
            "type": "NUMBER",
            "description": "",
            "default": "25.7"
          }
        ],
        "optional_parameters": [
          {
            "name": "asian",
            "type": "BOOLEAN",
            "description": "",
            "default": "true"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Horostory",
        "api_name": "hoscoscope",
        "api_description": "retrieve the horoscope for a specific sign and date",
        "required_parameters": [
          {
            "name": "date",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "sign",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Horostory",
        "api_name": "planetaryoverview",
        "api_description": "get the Planetary Overview of the day",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "planet": "str",
          "sign": "str",
          "description": "str"
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Pregnancy Calculator API",
        "api_name": "Fertility Window - GET",
        "api_description": "This endpoint accepts a GET request to calculate the fertility window.",
        "required_parameters": [
          {
            "name": "cycle_length",
            "type": "STRING",
            "description": "The length of the menstrual cycle in days.",
            "default": "28"
          },
          {
            "name": "menstrual_date",
            "type": "STRING",
            "description": "The date of the first day of the last menstrual period in the format '**YYYY-MM-DD**'.",
            "default": "2023-06-01"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Pregnancy Calculator API",
        "api_name": "Conception Date",
        "api_description": "This endpoint calculates the estimated due date based on the user's conception date.",
        "required_parameters": [
          {
            "name": "conception_date",
            "type": "STRING",
            "description": "The date of conception in the format '**YYYY-MM-DD**'",
            "default": "2023-05-01"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Pregnancy Calculator API",
        "api_name": "Pregnancy Weight Recommendation - GET",
        "api_description": "This endpoint that accepts a GET request to calculate the recommended weight during pregnancy based on the user's pre-pregnancy weight, height, and current gestational age.",
        "required_parameters": [
          {
            "name": "pre_pregnancy_weight",
            "type": "NUMBER",
            "description": "The user's pre-pregnancy weight in kilograms (**kg**).",
            "default": "60"
          },
          {
            "name": "gestational_age",
            "type": "NUMBER",
            "description": "The current gestational age in **weeks**.\n",
            "default": "20"
          },
          {
            "name": "height",
            "type": "NUMBER",
            "description": "The user's height in meters (**m**).",
            "default": "1.65"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "AirVisual",
        "api_name": "stations/v2/get-information",
        "api_description": "Get information at specific station by its id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "The value of id field (type is station) that returned in …/v2/auto-complete endpoint",
            "default": "Jmy9oL75KSZnsqi6L"
          }
        ],
        "optional_parameters": [
          {
            "name": "x-user-timezone",
            "type": "STRING",
            "description": "",
            "default": "Asia/Singapore"
          },
          {
            "name": "x-units-distance",
            "type": "STRING",
            "description": "One of the following : miles|kilometer",
            "default": "kilometer"
          },
          {
            "name": "x-units-pressure",
            "type": "STRING",
            "description": "One of the following : hg|mbar",
            "default": "mbar"
          },
          {
            "name": "x-user-lang",
            "type": "STRING",
            "description": "",
            "default": "en-US"
          },
          {
            "name": "x-units-temperature",
            "type": "STRING",
            "description": "One of the following : fahrenheit|celsius",
            "default": "celsius"
          },
          {
            "name": "x-aqi-index",
            "type": "STRING",
            "description": "One of the following : us|cn",
            "default": "us"
          }
        ],
        "method": "GET",
        "template_response": "{\"status\": \"str\", \"data\": {\"id\": \"str\", \"name\": \"str\", \"city\": \"str\", \"state\": \"str\", \"country\": \"str\", \"location\": {\"lat\": \"float\", \"lon\": \"float\"}, \"timezone\": \"str\", \"websiteLink\": \"str\", \"report\": {\"link\": \"str\", \"actionText\": \"str\", \"message\": \"str\"}, \"type\": \"str\", \"followers\": {\"total\": \"str\", \"pictures\": [\"list of str with length 3\"], \"label\": \"str\"}, \"contributors\": {\"pictures\": [\"list of str with length 1\"], \"redirection\": {\"actionType\": \"str\", \"appCategory\": \"str\", \"item\": \"str\"}, \"label\": \"str\"}, \"sources\": [{\"id\": \"str\", \"name\": \"str\", \"totalStations\": \"int\", \"type\": \"str\", \"picture\": \"str\", \"url\": \"str\", \"_list_length\": 2}], \"gallery\": {\"pictures\": \"empty list\", \"contributor\": {\"name\": \"str\", \"profileID\": \"str\", \"profilePicture\": \"str\"}}, \"currentMeasurement\": {\"ts\": \"str\", \"aqius\": \"int\", \"mainus\": \"str\", \"aqicn\": \"int\", \"maincn\": \"str\", \"pollutants\": [{\"conc\": \"int\", \"aqius\": \"int\", \"aqicn\": \"int\", \"pollutant\": \"str\", \"isEstimated\": \"int\", \"ts\": \"str\", \"_list_length\": 3"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "AirVisual",
        "api_name": "auto-complete (Deprecated)",
        "api_description": "Find countries, cities, places by name",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "Name of countries, cities, districts, places, etc...",
            "default": "singapore"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "data": {
            "stations": [
              {
                "id": "str",
                "name": "str",
                "city": "str",
                "state": "str",
                "country": "str",
                "i18n": {},
                "location": {
                  "type": "str",
                  "coordinates": [
                    "list of float with length 2"
                  ]
                },
                "type": "str",
                "current_measurement": {
                  "aqius": "int",
                  "aqicn": "int",
                  "ts": "str"
                },
                "_list_length": 10
              }
            ],
            "cities": [
              {
                "id": "str",
                "city": "str",
                "state": "str",
                "country": "str",
                "i18n": {},
                "estimated": "int",
                "location": {
                  "type": "str",
                  "coordinates": [
                    "list of float with length 2"
                  ]
                },
                "type": "str",
                "current_measurement": {
                  "aqius": "int",
                  "aqicn": "int",
                  "ts": "str"
                },
                "_list_length": 1
              }
            ],
            "news": [
              {
                "author": "str",
                "date": "str",
                "status": "str",
                "thumbnail": "str",
                "title": "str",
                "type": "str",
                "url": "str",
                "_list_length": 7
              }
            ],
            "contributors": [
              {
                "id": "str",
                "name": "str",
                "type": "str",
                "subType": "str",
                "picture": "str",
                "visibility": "bool",
                "isVerified": "bool",
                "_list_length": 1
              }
            ]
          }
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "AirVisual",
        "api_name": "cities/get-measurements (Deprecated)",
        "api_description": "Get measurements in specific city by its id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "The value of id field (type is city) that received from .../auto-complete API",
            "default": "hW7vArorRd8cT9h6v"
          }
        ],
        "optional_parameters": [
          {
            "name": "timezone",
            "type": "STRING",
            "description": "",
            "default": "Asia/Singapore"
          },
          {
            "name": "lang",
            "type": "STRING",
            "description": "",
            "default": "en_US"
          },
          {
            "name": "aqiIndex",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "data": {
            "id": "str",
            "measurements": [
              {
                "ts": "str",
                "p2": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "aqius": "int",
                "mainus": "str",
                "aqicn": "int",
                "maincn": "str",
                "_list_length": 48
              }
            ],
            "measurements_daily": [
              {
                "ts": "str",
                "p2": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "aqius": "int",
                "mainus": "str",
                "aqicn": "int",
                "maincn": "str",
                "p1": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "o3": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "s2": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "co": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "_list_length": 30
              }
            ]
          }
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Exercises by API-Ninjas",
        "api_name": "/v1/exercises",
        "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "number of results to offset for pagination. Default is 0.",
            "default": ""
          },
          {
            "name": "muscle",
            "type": "STRING",
            "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
            "default": "biceps"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
            "default": ""
          },
          {
            "name": "difficulty",
            "type": "STRING",
            "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
            "default": ""
          },
          {
            "name": "name",
            "type": "STRING",
            "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "type": "str",
          "muscle": "str",
          "equipment": "str",
          "difficulty": "str",
          "instructions": "str"
        }
      }
    ],
    "query": "I am starting a new fitness routine and I want to incorporate exercises that target specific muscle groups. Can you provide me with a list of exercises that target the quadriceps and hamstrings? Additionally, I would like to know the BMI based on my height and weight in metric units.",
    "relevant APIs": [
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Exercises by API-Ninjas",
        "api_name": "/v1/exercises"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "BMI_v2",
        "api_name": "Gives the BMI when you Input values in Metric units"
      }
    ],
    "query_id": 9834
  },
  {
    "api_list": [
      {
        "category_name": "Travel",
        "tool_name": "Airbnb_v2",
        "api_name": "Get Top Tier Stays Filter",
        "api_description": "-",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "languageId",
            "type": "STRING",
            "description": "Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb_v2",
        "api_name": "Get Host Language Filters",
        "api_description": "-",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "languageId",
            "type": "STRING",
            "description": "Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb_v2",
        "api_name": "Get Property Type Filters",
        "api_description": "-",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "languageId",
            "type": "STRING",
            "description": "Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Ranked Crime Cities",
        "api_name": "Ranked World Crime cities",
        "api_description": "Ranked World Crime cities",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Travel",
        "tool_name": "Ranked Crime Cities",
        "api_name": "Get city by filter",
        "api_description": "Get city by filter",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "World Scuba Diving Sites Api",
        "api_name": "Query divesites by gps boundaries (For use with maps)",
        "api_description": "The API endpoint that queries dive sites by GPS boundaries allows developers to search for dive sites within a specified geographical region, defined by a set of latitude and longitude coordinates. This endpoint can be particularly useful for creating interactive maps or applications that require displaying dive sites within a specific area. To use it add the four map bounds as query params",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "southWestLat",
            "type": "STRING",
            "description": "",
            "default": "50.995577266225524"
          },
          {
            "name": "northEastLng",
            "type": "STRING",
            "description": "",
            "default": "3.827225290533761"
          },
          {
            "name": "southWestLng",
            "type": "STRING",
            "description": "",
            "default": "-12.542403615716239"
          },
          {
            "name": "northEastLat",
            "type": "STRING",
            "description": "",
            "default": "58.59328356952258"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "World Scuba Diving Sites Api",
        "api_name": "Query Divesites by a country or a region.",
        "api_description": "The endpoint returns a json list of dive sites which match the region or country entered as the query. The range of results depend but there is usually around 100-500 sites for each country. There are around 15'000 dive sites listed in the database.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "thailand"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I am planning a vacation with my family and we are interested in scuba diving. Can you recommend some dive sites in Thailand? Additionally, we would like to know the top-tier stays available in that area for accommodation options.",
    "relevant APIs": [
      {
        "category_name": "Travel",
        "tool_name": "World Scuba Diving Sites Api",
        "api_name": "Query Divesites by a country or a region."
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb_v2",
        "api_name": "Get Top Tier Stays Filter"
      }
    ],
    "query_id": 10097
  },
  {
    "api_list": [
      {
        "category_name": "Travel",
        "tool_name": "Biggest Cities",
        "api_name": "Get all cities",
        "api_description": "Get all cites",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Biggest Cities",
        "api_name": "Biggest cities",
        "api_description": "Biggest cities",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing status",
        "api_description": "Retrieve the calculated status (available/not available for stay) of a listing based on previous and following days stay rules.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "the listing id",
            "default": "619966061834034729"
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "the year",
            "default": "2024"
          },
          {
            "name": "month",
            "type": "NUMBER",
            "description": "the month",
            "default": "1"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Amenities",
        "api_description": "Retrieves amenities ids And descriptions. Returns 50 results",
        "required_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "index to start from",
            "default": "0"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listings by lat lng",
        "api_description": "Retrieve listings ids, distance from starting point and last updated dates for prices, availability and ratings in a range from a given geographical point. Returns 50 results. Can be filtered on bedrooms and max guest capacity",
        "required_parameters": [
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "latitude",
            "default": "28.0852473"
          },
          {
            "name": "lng",
            "type": "NUMBER",
            "description": "longitude",
            "default": "-16.7349705"
          },
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "index to start from",
            "default": "0"
          },
          {
            "name": "range",
            "type": "NUMBER",
            "description": "range in meters from latitude and longitude point",
            "default": "500"
          }
        ],
        "optional_parameters": [
          {
            "name": "bedrooms",
            "type": "NUMBER",
            "description": "number of bedrooms",
            "default": "1"
          },
          {
            "name": "maxGuestCapacity",
            "type": "NUMBER",
            "description": "Max guest the listing can accomodate",
            "default": "2"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "BiggestCities",
        "api_name": "Get All Cities",
        "api_description": "Get All Cities",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "BiggestCities",
        "api_name": "Get Cities by filter",
        "api_description": "Get Cities by filter",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Travel",
        "tool_name": "funtrip",
        "api_name": "ttt",
        "api_description": "ttt",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My company is organizing a conference in New York City. We need a venue that can accommodate 500 people. Could you find a list of available event spaces in Manhattan? Please include the distance from each venue to Times Square and the listing status for the desired date. Additionally, provide the contact information for each venue.",
    "relevant APIs": [
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listings by lat lng"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing status"
      },
      {
        "category_name": "Travel",
        "tool_name": "Biggest Cities",
        "api_name": "Biggest cities"
      }
    ],
    "query_id": 10318
  },
  {
    "api_list": [
      {
        "category_name": "Education",
        "tool_name": "tapzulecountry",
        "api_name": "country",
        "api_description": "country fetch",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "News space",
        "api_name": "Get Space News",
        "api_description": "Get Space News",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "url": "str",
          "source": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "GetBooksInfo",
        "api_name": "Search",
        "api_description": "Search Book by its name",
        "required_parameters": [
          {
            "name": "s",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "results": "empty list"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "Reading Home APIs",
        "api_name": "GetBooksbyTitleSearch",
        "api_description": "Get Paginated List of Books on Title Searched",
        "required_parameters": [
          {
            "name": "search",
            "type": "STRING",
            "description": "",
            "default": "Power of"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "Reading Home APIs",
        "api_name": "Getbooksbycategory",
        "api_description": "This will get a paginated list of books in a specific category",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": 1
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "Reading Home APIs",
        "api_name": "GetBooksbyAuthorSearch",
        "api_description": "Get List of Books of a Searched Author Name",
        "required_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "search",
            "type": "STRING",
            "description": "",
            "default": "Leo Elsinger"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a book blogger and I want to write a post about books by a specific author. Can you help me search for books by the author's name and also provide me with interesting space news to engage my readers?",
    "relevant APIs": [
      {
        "category_name": "Education",
        "tool_name": "Reading Home APIs",
        "api_name": "GetBooksbyAuthorSearch"
      },
      {
        "category_name": "Education",
        "tool_name": "News space",
        "api_name": "Get Space News"
      }
    ],
    "query_id": 11820
  },
  {
    "api_list": [
      {
        "category_name": "Education",
        "tool_name": "Dictionary Translation Hablaa",
        "api_name": "Get a translation",
        "api_description": "Get a translation by defining source and destination languages as well as a word to translate.",
        "required_parameters": [
          {
            "name": "text_to_translate",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "lang_code_src-lang_code_dst",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "Dictionary Translation Hablaa",
        "api_name": "Example sentences",
        "api_description": "Request multiple example sentences containing the word to translate.",
        "required_parameters": [
          {
            "name": "text_to_translate",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "lang_code_src-lang_code_dst",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "Dictionary Translation Hablaa",
        "api_name": "Similar words",
        "api_description": "Get translations of similar words.",
        "required_parameters": [
          {
            "name": "text_to_translate",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "lang_code_src-lang_code_dst",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "Old English Translator",
        "api_name": "Translate to Old English",
        "api_description": "Old English Translator",
        "required_parameters": [
          {
            "name": "text",
            "type": "STRING",
            "description": "Text to convert to old English.",
            "default": "A hearty meal, a happy laughter is all we need."
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": {
            "total": "int"
          },
          "contents": {
            "translated": "str",
            "text": "str",
            "translation": "str"
          }
        }
      },
      {
        "category_name": "Education",
        "tool_name": "q-study",
        "api_name": "q-study",
        "api_description": "education",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Education",
        "tool_name": "TED Talks API",
        "api_name": "getSubtitleLanguages",
        "api_description": "Get all the TED talks subtitle languages",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "get": "str",
          "parameters": "empty list",
          "errors": "empty list",
          "result": {
            "num_results": "int",
            "results": [
              {
                "slug": "str",
                "_list_length": 115
              }
            ]
          }
        }
      },
      {
        "category_name": "Education",
        "tool_name": "TED Talks API",
        "api_name": "getAudioLanguages",
        "api_description": "Get all the TED talks audio languages",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "get": "str",
          "parameters": "empty list",
          "errors": "empty list",
          "result": {
            "num_results": "int",
            "results": [
              {
                "slug": "str",
                "_list_length": 12
              }
            ]
          }
        }
      },
      {
        "category_name": "Education",
        "tool_name": "TED Talks API",
        "api_name": "getTalks",
        "api_description": "Get info about specific talks based on the provided parameters",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "ID of a desired specific talk",
            "default": ""
          },
          {
            "name": "audio_lang",
            "type": "STRING",
            "description": "Return talks which their audio language is the provided language, the provided value should be the language slug according to the /audio_languages endpoint",
            "default": "en"
          },
          {
            "name": "speaker",
            "type": "STRING",
            "description": "Return talks which at least on of their speakers is the provided speaker, the provided value should be the speaker slug according to the /speakers endpoint",
            "default": "yuval_noah_harari"
          },
          {
            "name": "publish_date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Return talks which were published on TED.com only on the exact provided date",
            "default": ""
          },
          {
            "name": "topic",
            "type": "STRING",
            "description": "Return talks which at least on of their topics is the provided topics, the provided value should be the speaker slug according to the /topics endpoint",
            "default": "politics"
          },
          {
            "name": "subtitle_lang",
            "type": "STRING",
            "description": "Return talks which have subtitles in the provided language, the provided value should be the language slug according to the /subtitle_languages endpoint",
            "default": "he"
          },
          {
            "name": "max_duration",
            "type": "NUMBER",
            "description": "Return talks which their duration in seconds is at most the provided value",
            "default": ""
          },
          {
            "name": "to_publish_date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Return talks which were published on TED.com only before the provided date",
            "default": ""
          },
          {
            "name": "from_publish_date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Return talks which were published on TED.com only after the provided date",
            "default": ""
          },
          {
            "name": "min_duration",
            "type": "NUMBER",
            "description": "Return talks which their duration in seconds is at least the provided value",
            "default": "300"
          },
          {
            "name": "record_date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Return talks which were recorded only in the exact provided date",
            "default": ""
          },
          {
            "name": "to_record_date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Return talks which were recorded only before the provided date",
            "default": ""
          },
          {
            "name": "from_record_date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Return talks which were recorded only after the provided date",
            "default": "2017-01-01"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Education",
        "tool_name": "Aeries",
        "api_name": "v5/schools",
        "api_description": "v5/schools",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Message": "str"
        }
      }
    ],
    "query": "I'm a language enthusiast and I'm interested in learning about different languages and their origins. Can you provide me with a translation of the word 'language' in different languages? Additionally, could you suggest some TED talks on the topic of language diversity and the importance of preserving endangered languages?",
    "relevant APIs": [
      {
        "category_name": "Education",
        "tool_name": "Dictionary Translation Hablaa",
        "api_name": "Get a translation"
      },
      {
        "category_name": "Education",
        "tool_name": "TED Talks API",
        "api_name": "getTalks"
      }
    ],
    "query_id": 12142
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "Air Quality",
        "api_name": "Current Air Quality",
        "api_description": "Retrieves current air quality conditions for any location in the world, given a lat/lon.",
        "required_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude",
            "default": "-73.00597"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude",
            "default": "40.71427"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "city_name": "str",
          "country_code": "str",
          "data": [
            {
              "aqi": "int",
              "co": "int",
              "mold_level": "int",
              "no2": "int",
              "o3": "int",
              "pm10": "int",
              "pm25": "int",
              "pollen_level_grass": "int",
              "pollen_level_tree": "int",
              "pollen_level_weed": "int",
              "predominant_pollen_type": "str",
              "so2": "int",
              "_list_length": 1
            }
          ],
          "lat": "float",
          "lon": "float",
          "state_code": "str",
          "timezone": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Air Quality",
        "api_name": "Air Quality Forecast",
        "api_description": "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. ",
        "required_parameters": [
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "Latitude",
            "default": "35.779"
          },
          {
            "name": "lon",
            "type": "NUMBER",
            "description": "Longitude",
            "default": "-78.638"
          }
        ],
        "optional_parameters": [
          {
            "name": "hours",
            "type": "NUMBER",
            "description": "Limits response forecast hours (default 72). ",
            "default": "72"
          }
        ],
        "method": "GET",
        "template_response": {
          "city_name": "str",
          "country_code": "str",
          "data": [
            {
              "aqi": "int",
              "co": "float",
              "datetime": "str",
              "no2": "float",
              "o3": "float",
              "pm10": "float",
              "pm25": "float",
              "so2": "float",
              "timestamp_local": "str",
              "timestamp_utc": "str",
              "ts": "int",
              "_list_length": 72
            }
          ],
          "lat": "float",
          "lon": "float",
          "state_code": "str",
          "timezone": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Air Quality",
        "api_name": "Air Quality History",
        "api_description": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.",
        "required_parameters": [
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "Latitude",
            "default": "35.779"
          },
          {
            "name": "lon",
            "type": "NUMBER",
            "description": "Longitude",
            "default": "-78.638"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "city_name": "str",
          "country_code": "str",
          "data": [
            {
              "aqi": "int",
              "co": "float",
              "datetime": "str",
              "no2": "float",
              "o3": "float",
              "pm10": "float",
              "pm25": "int",
              "so2": "int",
              "timestamp_local": "str",
              "timestamp_utc": "str",
              "ts": "int",
              "_list_length": 72
            }
          ],
          "lat": "float",
          "lon": "float",
          "state_code": "str",
          "timezone": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Test",
        "api_name": "aaaaaa",
        "api_description": "aaa",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Qwiper Weather",
        "api_name": "Météo d'aujourd'hui - Niamey, Niger",
        "api_description": "Obtenez la température, les conditions du ciel, les vents, l'humidité, etc. pour la ville de Niamey.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "My company is organizing an outdoor team-building event at a park in Los Angeles. We need to ensure good air quality for the participants. Can you fetch the air quality history for the location and provide the current weather conditions as well? Also, suggest some fun team-building activities for the event.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "Air Quality",
        "api_name": "Air Quality History"
      },
      {
        "category_name": "Weather",
        "tool_name": "Qwiper Weather",
        "api_name": "Météo d'aujourd'hui - Niamey, Niger"
      }
    ],
    "query_id": 15844
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "Hourly Forecast",
        "api_description": "Returns the hourly forecast for a given resort name",
        "required_parameters": [
          {
            "name": "resort",
            "type": "string",
            "description": "",
            "default": "Jackson Hole"
          }
        ],
        "optional_parameters": [
          {
            "name": "el",
            "type": "STRING",
            "description": "Specify a part of the mountain. Accepted values are 'top', 'mid', and 'bot'. Using this parameter improves response time.",
            "default": "top"
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
            "default": "i"
          },
          {
            "name": "c",
            "type": "BOOLEAN",
            "description": "Limit result to current day only",
            "default": "false"
          }
        ],
        "method": "GET",
        "template_response": {
          "forecast": [
            {
              "time": "str",
              "summary": "str",
              "windSpeed": "str",
              "windDirection": "str",
              "rain": "str",
              "maxTemp": "str",
              "minTemp": "NoneType",
              "windChill": "str",
              "humidity": "str",
              "freezeLevel": "str",
              "_list_length": 14
            }
          ],
          "basicInfo": {
            "region": "str",
            "name": "str",
            "url": "str",
            "topLiftElevation": "str",
            "midLiftElevation": "str",
            "botLiftElevation": "str",
            "lat": "str",
            "lon": "str"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "Current Snow Conditions",
        "api_description": "Returns the current snow conditions for a given resort name",
        "required_parameters": [
          {
            "name": "resort",
            "type": "string",
            "description": "",
            "default": "Jackson Hole"
          }
        ],
        "optional_parameters": [
          {
            "name": "units",
            "type": "STRING",
            "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
            "default": "i"
          }
        ],
        "method": "GET",
        "template_response": {
          "topSnowDepth": "str",
          "botSnowDepth": "str",
          "freshSnowfall": "NoneType",
          "lastSnowfallDate": "NoneType",
          "basicInfo": {
            "region": "str",
            "name": "str",
            "url": "str",
            "topLiftElevation": "str",
            "midLiftElevation": "str",
            "botLiftElevation": "str",
            "lat": "str",
            "lon": "str"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "5 Day Forecast",
        "api_description": "Returns the 5 day forecast for a given resort name",
        "required_parameters": [
          {
            "name": "resort",
            "type": "string",
            "description": "",
            "default": "Jackson Hole"
          }
        ],
        "optional_parameters": [
          {
            "name": "units",
            "type": "STRING",
            "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
            "default": "i"
          },
          {
            "name": "el",
            "type": "STRING",
            "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
            "default": "top"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Air Quality API",
        "api_name": "Current Air Quality",
        "api_description": "Gives back data of current air quality in a specified city!",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "netherlands"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "amsterdam"
          }
        ],
        "optional_parameters": [
          {
            "name": "lat",
            "type": "STRING",
            "description": "",
            "default": "52.377956"
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "",
            "default": "4.897070"
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "country": "str",
          "timezone": "str",
          "coordinates": {
            "latitude": "float",
            "longitude": "float"
          },
          "current": {
            "ts": "str",
            "aqi": "int",
            "mainPollutant": "str",
            "concentration": "float",
            "condition": "str",
            "humidity": "int",
            "pressure": "int",
            "wind": {
              "speed": "float",
              "direction": "int"
            },
            "temperature": "int",
            "pollutants": [
              {
                "aqi": "int",
                "concentration": "float",
                "estimationSource": {
                  "title": "str",
                  "type": "str"
                },
                "estimated": "bool",
                "pollutantName": "str",
                "_list_length": 1
              }
            ]
          },
          "recommendations": {
            "pollution": {
              "exercice": {
                "value": "str",
                "text": "str"
              },
              "windows": {
                "value": "str",
                "text": "str",
                "product": {
                  "text": "str",
                  "name": "str",
                  "url": "str"
                }
              },
              "mask": {
                "value": "str"
              },
              "air_purifier": {
                "value": "str"
              }
            }
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Air Quality API",
        "api_name": "Air Quality Measurements",
        "api_description": "Gives current air quality measurements per hour for a given city!",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "netherlands"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "amsterdam"
          }
        ],
        "optional_parameters": [
          {
            "name": "lon",
            "type": "STRING",
            "description": "",
            "default": "4.897070"
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "",
            "default": "52.377956"
          }
        ],
        "method": "GET",
        "template_response": {
          "measurements": {
            "hourly": [
              {
                "ts": "str",
                "aqi": "int",
                "pm25": {
                  "aqi": "int",
                  "concentration": "float"
                },
                "pm10": {
                  "aqi": "int",
                  "concentration": "float"
                },
                "o3": {
                  "aqi": "int",
                  "concentration": "float"
                },
                "no2": {
                  "aqi": "int",
                  "concentration": "float"
                },
                "so2": {
                  "aqi": "int",
                  "concentration": "float"
                },
                "co": {
                  "aqi": "int",
                  "concentration": "float"
                },
                "_list_length": 3
              }
            ]
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Air Quality API",
        "api_name": "Air Quality Forecasts",
        "api_description": "Gives hourly air quality forecast for a given city!",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "netherlands"
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "",
            "default": "amsterdam"
          }
        ],
        "optional_parameters": [
          {
            "name": "lat",
            "type": "STRING",
            "description": "",
            "default": "52.377956"
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "",
            "default": "4.897070"
          }
        ],
        "method": "GET",
        "template_response": {
          "forecasts": {
            "hourly": [
              {
                "ts": "str",
                "aqi": "int",
                "pressure": "int",
                "humidity": "int",
                "wind": {
                  "speed": "float",
                  "direction": "int"
                },
                "condition": "str",
                "temperature": "int",
                "_list_length": 34
              }
            ]
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Wavebase",
        "api_name": "Ocean Conditions Closest to Latitude / Longitude",
        "api_description": "​https://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location.",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "52.8"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "-4.07"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"closest_coordinates\": {\"latitude\": \"float\", \"longitude\": \"float\"}, \"conditions\": [{\"primary_swell_wave_from_direction\": \"float\", \"primary_swell_wave_mean_period\": \"float\", \"primary_swell_wave_significant_height\": \"float\", \"secondary_swell_wave_from_direction\": \"float\", \"secondary_swell_wave_mean_period\": \"float\", \"secondary_swell_wave_significant_height\": \"float\", \"tide_direction\": \"str\", \"tide_height\": \"float\", \"tide_state\": \"str\", \"valid_for_dtg\": \"str\", \"wave_from_direction\": \"float\", \"wave_from_direction_at_variance_spectral_density_maximum\": \"float\", \"wave_mean_period_from_variance_spectral_density_inverse_freq\": \"float\", \"wave_mean_period_from_variance_spectral_density_second_freq\": \"float\", \"wave_period_at_variance_spectral_density_maximum\": \"float\", \"wave_significant_height\": \"float\", \"wave_stokes_drift_x_velocity\": \"int\", \"wave_stokes_drift_y_velocity\": \"int\", \"wind_dir\": \"float\", \"wind_speed\": \"float\", \"wind_wave_from_direction\": \"float\", \"wind_wave_mean_period\": \"float\", \""
      },
      {
        "category_name": "Weather",
        "tool_name": "Wavebase",
        "api_name": "XYZ Map Tiles for Ocean Conditions",
        "api_description": "Wavebase Global Ocean Tiles API:\n\nWave Signficant Height (GET): https://api.wavebase.app/v1/tiles/singleband/{variable}/{date-timeslot - YYYYMMDDHH}/0/0/0.png\n\ne.g.: https://api.wavebase.app/v1/tiles/singleband/VHM0/2023051703/0/0/0.png \n\nCurrently only Tile at 0/0/0 is available Free.  Contact:  info@wavebase.app for additional tiles.",
        "required_parameters": [
          {
            "name": "variable",
            "type": "string",
            "description": "",
            "default": "VHM0"
          },
          {
            "name": "datetime",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "APJOY-Weather Forecast",
        "api_name": "GetWeatherForecast",
        "api_description": "This endpoint provides weather forecast information based on the user's location. It returns the current weather conditions, daily forecasts, and additional weather data, such as temperature, humidity, and wind speed. The data is sourced from OpenWeatherMap, ensuring accurate and reliable information.",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "The name of the city or location for which to retrieve the weather forecast.",
            "default": "London"
          }
        ],
        "optional_parameters": [
          {
            "name": "days",
            "type": "NUMBER",
            "description": "The number of days of forecast data to retrieve (1-16). If not provided, it defaults to 1 day.",
            "default": "3"
          }
        ],
        "method": "GET",
        "template_response": {
          "cod": "str",
          "message": "int",
          "cnt": "int",
          "list": [
            {
              "dt": "int",
              "main": {
                "temp": "float",
                "feels_like": "float",
                "temp_min": "float",
                "temp_max": "float",
                "pressure": "int",
                "sea_level": "int",
                "grnd_level": "int",
                "humidity": "int",
                "temp_kf": "float"
              },
              "weather": [
                {
                  "id": "int",
                  "main": "str",
                  "description": "str",
                  "icon": "str",
                  "_list_length": 1
                }
              ],
              "clouds": {
                "all": "int"
              },
              "wind": {
                "speed": "float",
                "deg": "int",
                "gust": "float"
              },
              "visibility": "int",
              "pop": "int",
              "sys": {
                "pod": "str"
              },
              "dt_txt": "str",
              "_list_length": 3
            }
          ],
          "city": {
            "id": "int",
            "name": "str",
            "coord": {
              "lat": "float",
              "lon": "float"
            },
            "country": "str",
            "population": "int",
            "timezone": "int",
            "sunrise": "int",
            "sunset": "int"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Test",
        "api_name": "aaaaaa",
        "api_description": "aaa",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I'm planning a weekend getaway to Jackson Hole and I need to know the current snow conditions and 5-day forecast for the resort. Additionally, give me the hourly weather forecast and ocean conditions closest to the latitude and longitude.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "Current Snow Conditions"
      },
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "5 Day Forecast"
      },
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "Hourly Forecast"
      },
      {
        "category_name": "Weather",
        "tool_name": "Wavebase",
        "api_name": "Ocean Conditions Closest to Latitude / Longitude"
      }
    ],
    "query_id": 16133
  },
  {
    "api_list": [
      {
        "category_name": "Business_Software",
        "tool_name": "ROAC",
        "api_name": "/api/Auditores/roac/{roac}Sociedad",
        "api_description": "asd",
        "required_parameters": [
          {
            "name": "roac",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "documento": "str",
          "codigoROAC": "str",
          "idTipoDocumento": "str",
          "nombre": "str",
          "apellidos": "str",
          "razonSocial": "NoneType",
          "fechaAlta": "str",
          "fechaBaja": "NoneType"
        }
      },
      {
        "category_name": "Business_Software",
        "tool_name": "Stamping",
        "api_name": "GET evidence",
        "api_description": "GET by hash sha256 or TrxId from Blockchain of Bitcoin and Ethereum",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Business_Software",
        "tool_name": "cloudlayer.io",
        "api_name": "Convert URL to Image",
        "api_description": "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options).",
        "required_parameters": [
          {
            "name": "url",
            "type": "STRING",
            "description": "",
            "default": "https://google.com"
          }
        ],
        "optional_parameters": [
          {
            "name": "timeout",
            "type": "NUMBER",
            "description": "milliseconds (default 30000)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str",
          "error": "str"
        }
      },
      {
        "category_name": "Business_Software",
        "tool_name": "Vizor Ads",
        "api_name": "Show",
        "api_description": "Get details of your existing embed records using it's unique slug",
        "required_parameters": [
          {
            "name": "slug",
            "type": "string",
            "description": "",
            "default": "7dW8zGbP"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str",
          "status": "int"
        }
      },
      {
        "category_name": "Business_Software",
        "tool_name": "Vizor Ads",
        "api_name": "API Status",
        "api_description": "Check API server is running or not",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": {
            "env": "str"
          },
          "message": "str",
          "status": "int"
        }
      },
      {
        "category_name": "Business_Software",
        "tool_name": "Global Email V4",
        "api_name": "Global Email V4",
        "api_description": "Define Input Fields",
        "required_parameters": [
          {
            "name": "opt",
            "type": "STRING",
            "description": "Express/Premium",
            "default": "VerifyMailbox:Express|VerifyMailbox:ExpressPremium"
          },
          {
            "name": "email",
            "type": "STRING",
            "description": "Input Email",
            "default": "support@melissa.com"
          }
        ],
        "optional_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "Format of Response",
            "default": "json"
          }
        ],
        "method": "GET",
        "template_response": {
          "Version": "str",
          "TransmissionReference": "str",
          "TransmissionResults": "str",
          "TotalRecords": "str",
          "Records": [
            {
              "RecordID": "str",
              "DeliverabilityConfidenceScore": "str",
              "Results": "str",
              "EmailAddress": "str",
              "MailboxName": "str",
              "DomainName": "str",
              "DomainAuthenticationStatus": "str",
              "TopLevelDomain": "str",
              "TopLevelDomainName": "str",
              "DateChecked": "str",
              "EmailAgeEstimated": "str",
              "DomainAgeEstimated": "str",
              "DomainExpirationDate": "str",
              "DomainCreatedDate": "str",
              "DomainUpdatedDate": "str",
              "DomainEmail": "str",
              "DomainOrganization": "str",
              "DomainAddress1": "str",
              "DomainLocality": "str",
              "DomainAdministrativeArea": "str",
              "DomainPostalCode": "str",
              "DomainCountry": "str",
              "DomainAvailability": "str",
              "DomainCountryCode": "str",
              "DomainPrivateProxy": "str",
              "PrivacyFlag": "str",
              "MXServer": "str",
              "DomainTypeIndicator": "str",
              "BreachCount": "str",
              "_list_length": 1
            }
          ]
        }
      }
    ],
    "query": "I'm hosting a photography contest and I need to verify the email addresses of the participants. Verify the email address 'participant1@example.com' and provide me with the verification results. Additionally, I want to retrieve the details of a specific embed record and display it on the contest website. Fetch the details for the embed record with the slug '7dW8zGbP'.",
    "relevant APIs": [
      {
        "category_name": "Business_Software",
        "tool_name": "Global Email V4",
        "api_name": "Global Email V4"
      },
      {
        "category_name": "Business_Software",
        "tool_name": "Vizor Ads",
        "api_name": "Show"
      }
    ],
    "query_id": 17864
  },
  {
    "api_list": [
      {
        "category_name": "Visual_Recognition",
        "tool_name": "Fast Hcaptcha Solver",
        "api_name": "Get Response",
        "api_description": "Get response using the Id received from the create Hcaptcha Request",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Visual_Recognition",
        "tool_name": "Everypixel Image Recognition",
        "api_name": "/quality",
        "api_description": "This method allows you to get the quality score for your photo. This service doesn't measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "content",
            "type": "STRING",
            "description": "You can also send an actual image files for scoring.",
            "default": ""
          },
          {
            "name": "url",
            "type": "STRING",
            "description": "Image URL to perform scoring on.",
            "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
          }
        ],
        "method": "GET",
        "template_response": {
          "quality": {
            "score": "float"
          },
          "status": "str"
        }
      },
      {
        "category_name": "Visual_Recognition",
        "tool_name": "Everypixel Image Recognition",
        "api_name": "/keywords",
        "api_description": "By sending an image to this method you can get a list of suggested keywords. You may specify a number of returned words or a threshold of its minimum score. Just provide num_keywords or threshold parameter to this method.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "content",
            "type": "STRING",
            "description": "You can also send an actual image files for auto-tagging.",
            "default": ""
          },
          {
            "name": "url",
            "type": "STRING",
            "description": "Image URL to perform auto-tagging on.",
            "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
          }
        ],
        "method": "GET",
        "template_response": {
          "keywords": [
            {
              "keyword": "str",
              "score": "float",
              "_list_length": 14
            }
          ],
          "status": "str"
        }
      },
      {
        "category_name": "Visual_Recognition",
        "tool_name": "Everypixel Image Recognition",
        "api_name": "/quality_ugc",
        "api_description": "The main difference between Stock photo scoring and this model is in the training dataset. User-Generated Photo Scoring is a model trained on a 347 000 of user photos from Instagram. Estimation parameters for this model were prepared by a group of 10 professional photographers. Scoring methods are based on five classes: very bad (0-20), bad (20-40), normal (40-60), good (60-80) and excellent (80-100).  This model is designed to evaluate user photos taken both by a professional camera and by a camera of a smartphone. It doesn't estimate the plot and do not measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "content",
            "type": "STRING",
            "description": "You can also send an actual image files for scoring.",
            "default": ""
          },
          {
            "name": "url",
            "type": "STRING",
            "description": "Image URL to perform scoring on.",
            "default": "http://image.everypixel.com/2014.12/67439828186edc79b9be81a4dedea8b03c09a12825b_b.jpg"
          }
        ],
        "method": "GET",
        "template_response": {
          "quality": {
            "score": "float",
            "class": "int"
          },
          "status": "str"
        }
      },
      {
        "category_name": "Visual_Recognition",
        "tool_name": "General Classification",
        "api_name": "Get version",
        "api_description": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Visual_Recognition",
        "tool_name": "General Classification",
        "api_name": "Get list of algorithms",
        "api_description": "Service provides alternative algorithms that may be used for image classification.\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I want to surprise my partner with a romantic dinner at home. Can you recommend some delicious recipes for a three-course meal? Also, provide me with a list of ingredients required for each recipe and suggest some romantic background music playlists.",
    "relevant APIs": [
      {
        "category_name": "Visual_Recognition",
        "tool_name": "Everypixel Image Recognition",
        "api_name": "/keywords"
      },
      {
        "category_name": "Visual_Recognition",
        "tool_name": "Everypixel Image Recognition",
        "api_name": "/quality"
      },
      {
        "category_name": "Visual_Recognition",
        "tool_name": "General Classification",
        "api_name": "Get list of algorithms"
      }
    ],
    "query_id": 21802
  },
  {
    "api_list": [
      {
        "category_name": "Food",
        "tool_name": "Recipe by API-Ninjas",
        "api_name": "/v1/recipe",
        "api_description": "Get a list of recipes for a given search query. Returns at most 10 results. To access more than the first 10 results, use the offset parameter to offset results in multiple API calls.",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "query text to search.",
            "default": "italian wedding soup"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "number of results to offset for pagination.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "ingredients": "str",
          "servings": "str",
          "instructions": "str"
        }
      },
      {
        "category_name": "Food",
        "tool_name": "The Birthday Cake DB",
        "api_name": "Detailed Cake Recipe by ID",
        "api_description": "Get Cake Recipe by ID",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "5"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "title": "str",
          "difficulty": "str",
          "portion": "str",
          "time": "str",
          "description": "str",
          "ingredients": [
            "list of str with length 20"
          ],
          "method": [
            {
              "Step 1": "str",
              "_list_length": 7
            }
          ],
          "image": "str"
        }
      },
      {
        "category_name": "Food",
        "tool_name": "The Birthday Cake DB",
        "api_name": "List of Cakes",
        "api_description": "This endpoint responds with a list of cakes that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cake Recipe by ID\t\n\" endpoint to receive the detailed recipe.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "title": "str",
          "difficulty": "str",
          "image": "str"
        }
      },
      {
        "category_name": "Food",
        "tool_name": "Cocktails",
        "api_name": "Search by name",
        "api_description": "Search Cocktail by name",
        "required_parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "",
            "default": "Vodka Martini"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Food",
        "tool_name": "Cocktails",
        "api_name": "Random Nonalcoholic",
        "api_description": "Get a random nonalcoholic cocktail with all ingredients",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "body": [
            {
              "name": "str",
              "ingredients": [
                "list of str with length 5"
              ],
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Food",
        "tool_name": "Cocktails",
        "api_name": "Search by ingredient",
        "api_description": "Get cocktails by its ingredients",
        "required_parameters": [
          {
            "name": "ingredient",
            "type": "string",
            "description": "",
            "default": "Gin"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Food",
        "tool_name": "Cocktail by API-Ninjas",
        "api_name": "/v1/cocktail",
        "api_description": "API Ninjas Cocktail API endpoint. Either **name** or **ingredients** parameter must be set.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "name",
            "type": "STRING",
            "description": "name of cocktail. This parameter supports partial matches (e.g. bloody will match bloody mary and bloody margarita)",
            "default": "bloody mary"
          },
          {
            "name": "ingredients",
            "type": "STRING",
            "description": "comma-separated string of ingredients to search. Only cocktails containing all listed ingredients will be returned. For example, to search cocktails containing Vodka and lemon juice, use vodka,lemon juice.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "ingredients": [
            "list of str with length 7"
          ],
          "instructions": "str",
          "name": "str"
        }
      }
    ],
    "query": "I'm hosting a cocktail party and I need some cocktail recipes. Can you suggest some cocktail recipes that contain vodka as one of the ingredients? Also, provide me with a cake recipe from The Birthday Cake DB.",
    "relevant APIs": [
      {
        "category_name": "Food",
        "tool_name": "Cocktail by API-Ninjas",
        "api_name": "/v1/cocktail"
      },
      {
        "category_name": "Food",
        "tool_name": "The Birthday Cake DB",
        "api_name": "List of Cakes"
      }
    ],
    "query_id": 25866
  },
  {
    "api_list": [
      {
        "category_name": "eCommerce",
        "tool_name": "Amazon India Scraper_v3",
        "api_name": "Gets Products",
        "api_description": "Get The Product Details Using A Identifier(id)",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "B098XK9BPC"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Amazon India Scraper_v3",
        "api_name": "Product Reviews",
        "api_description": "Get The Product's Reviews",
        "required_parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "",
            "default": "B098XK9BPC"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Amazon Scrapper_v4",
        "api_name": "GET search results",
        "api_description": "GET search results",
        "required_parameters": [
          {
            "name": "searchQuery",
            "type": "string",
            "description": "",
            "default": "sdfsdf"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Amazon Scrapper_v4",
        "api_name": "GET a product reviews",
        "api_description": "GET a product reviews",
        "required_parameters": [
          {
            "name": "productId",
            "type": "string",
            "description": "",
            "default": "sdfsdfsdf"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Amazon Scrapper_v4",
        "api_name": "GET a product details",
        "api_description": "GET a product details.\nYou can get the product id from the URL when you search for a particular product. It is the next value after '/dp/'.\nEg: B08N5WG761 is the value we want from the url - \nhttps://www.amazon.in/Apple-MacBook-Chip-13-inch-256GB/dp/B08N5WG761/",
        "required_parameters": [
          {
            "name": "productId",
            "type": "string",
            "description": "",
            "default": "B08N5WG761"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Çiçeksepeti Data",
        "api_name": "Get Comments from product id",
        "api_description": "Retrieve comments based on a product id.",
        "required_parameters": [
          {
            "name": "product_id",
            "type": "STRING",
            "description": "",
            "default": "41892066"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "comments": [
            "list of str with length 40"
          ],
          "stars": [
            "list of int with length 40"
          ]
        }
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Amazon Data_v3",
        "api_name": "Get comments with product id",
        "api_description": "Retrieve comments based on a product id.",
        "required_parameters": [
          {
            "name": "product_id",
            "type": "STRING",
            "description": "",
            "default": "B094NVF2V1"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My company is planning to launch a new product and we need to gather customer feedback. Can you provide us with the comments and star ratings for the product with the ID 41892066? Additionally, we would like to get the comments for a different product with the ID B094NVF2V1.",
    "relevant APIs": [
      {
        "category_name": "eCommerce",
        "tool_name": "Çiçeksepeti Data",
        "api_name": "Get Comments from product id"
      },
      {
        "category_name": "eCommerce",
        "tool_name": "Amazon Data_v3",
        "api_name": "Get comments with product id"
      }
    ],
    "query_id": 34980
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Inflation by API-Ninjas",
        "api_name": "/v1/inflation",
        "api_description": "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "type",
            "type": "STRING",
            "description": "inflation indicator type. Can be either CPI (Consumer Price Index) or HICP (Harmonized Index of Consumer Prices). If not provided, the CPI will be used by default.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "country": "str",
          "type": "str",
          "period": "str",
          "monthly_rate_pct": "float",
          "yearly_rate_pct": "float"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Market Capitalization",
        "api_description": "Returns Market Capitalization of a coin in US Dollars.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "BTC"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "marketcap": "int",
          "readable_marketcap": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Get Liquidity Value",
        "api_description": "Returns Liquidity value of a coin in US Dollars",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "BTC"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "liquidity": "int",
          "readable_liquidity": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Get Realtime Volume",
        "api_description": "Returns Realtime volume of a coin in US Dollars.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "BTC"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "volume": "int",
          "readable_volume": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Defi Data",
        "api_name": "Protocol",
        "api_description": "Get historical TVL of a protocol and breakdowns by token and chain",
        "required_parameters": [
          {
            "name": "protocol",
            "type": "string",
            "description": "protocol slug",
            "default": "aave"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"id\": \"str\", \"name\": \"str\", \"url\": \"str\", \"description\": \"str\", \"logo\": \"str\", \"chains\": \"empty list\", \"gecko_id\": \"str\", \"cmcId\": \"str\", \"treasury\": \"str\", \"twitter\": \"str\", \"governanceID\": [\"list of str with length 2\"], \"wrongLiquidity\": \"bool\", \"github\": [\"list of str with length 1\"], \"currentChainTvls\": {\"Ethereum\": \"float\", \"Ethereum-borrowed\": \"float\", \"borrowed\": \"float\", \"Optimism\": \"float\", \"Metis\": \"float\", \"Arbitrum-borrowed\": \"float\", \"Polygon-borrowed\": \"float\", \"Metis-borrowed\": \"float\", \"Harmony\": \"int\", \"Harmony-borrowed\": \"float\", \"Fantom-borrowed\": \"float\", \"Optimism-borrowed\": \"float\", \"Avalanche\": \"float\", \"Polygon\": \"float\", \"Arbitrum\": \"float\", \"Fantom\": \"float\", \"Avalanche-borrowed\": \"float\", \"pool2\": \"float\", \"Ethereum-pool2\": \"float\", \"Ethereum-staking\": \"float\", \"staking\": \"float\"}, \"chainTvls\": {\"Ethereum\": {\"tvl\": [{\"date\": \"int\", \"totalLiquidityUSD\": \"float\", \"_list_length\": 1124}], \"tokens\": \"NoneType\", \"tokensInUsd\": \"NoneType\"}, \"Ethereum-borrowed\": {\"t"
      },
      {
        "category_name": "Finance",
        "tool_name": "Defi Data",
        "api_name": "Block",
        "api_description": "Get closest block to a timestamp\n\nRuns binary search over a blockchain's blocks to get the closest one to a timestamp.\n\nEvery time this is run we add new data to our database, so each query permanently speeds up future queries.",
        "required_parameters": [
          {
            "name": "chain",
            "type": "string",
            "description": "Chain which you want to get the block from",
            "default": "ethereum"
          },
          {
            "name": "timestamp",
            "type": "string",
            "description": "UNIX timestamp of the block you are searching for",
            "default": "1541548802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "height": "int",
          "timestamp": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Defi Data",
        "api_name": "Tvl protocol",
        "api_description": "Get only protocol TVL",
        "required_parameters": [
          {
            "name": "protocol",
            "type": "string",
            "description": "protocol slug",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str",
          "name": "str",
          "stack": "str",
          "config": {
            "transitional": {
              "silentJSONParsing": "bool",
              "forcedJSONParsing": "bool",
              "clarifyTimeoutError": "bool"
            },
            "transformRequest": [
              "list of NoneType with length 1"
            ],
            "transformResponse": [
              "list of NoneType with length 1"
            ],
            "timeout": "int",
            "xsrfCookieName": "str",
            "xsrfHeaderName": "str",
            "maxContentLength": "int",
            "maxBodyLength": "int",
            "headers": {
              "Accept": "str",
              "User-Agent": "str"
            },
            "method": "str",
            "url": "str"
          },
          "status": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "CoinLore Cryptocurrency",
        "api_name": "Get markets of coin",
        "api_description": "Returns top 50 markets for coin",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "90"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "base": "str",
          "quote": "str",
          "price": "float",
          "price_usd": "float",
          "volume": "float",
          "volume_usd": "float",
          "time": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "CoinLore Cryptocurrency",
        "api_name": "Get exchanges",
        "api_description": "Get all exchanges",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"501\": {\"id\": \"str\", \"0\": \"str\", \"name\": \"str\", \"1\": \"str\", \"name_id\": \"str\", \"2\": \"str\", \"url\": \"str\", \"3\": \"str\", \"country\": \"str\", \"4\": \"str\", \"date_live\": \"str\", \"5\": \"str\", \"date_added\": \"str\", \"6\": \"str\", \"usdt\": \"str\", \"7\": \"str\", \"fiat\": \"str\", \"8\": \"str\", \"auto\": \"str\", \"9\": \"str\", \"alexa\": \"NoneType\", \"10\": \"NoneType\", \"centralized\": \"NoneType\", \"11\": \"NoneType\", \"mining\": \"NoneType\", \"12\": \"NoneType\", \"f\": \"str\", \"13\": \"str\", \"dex\": \"NoneType\", \"14\": \"NoneType\", \"volume_usd\": \"float\", \"udate\": \"str\", \"pairs\": \"int\", \"tr\": \"int\", \"volume_usd_adj\": \"int\"}, \"5\": {\"id\": \"str\", \"0\": \"str\", \"name\": \"str\", \"1\": \"str\", \"name_id\": \"str\", \"2\": \"str\", \"url\": \"str\", \"3\": \"str\", \"country\": \"str\", \"4\": \"str\", \"date_live\": \"str\", \"5\": \"str\", \"date_added\": \"str\", \"6\": \"str\", \"usdt\": \"str\", \"7\": \"str\", \"fiat\": \"str\", \"8\": \"str\", \"auto\": \"str\", \"9\": \"str\", \"alexa\": \"NoneType\", \"10\": \"NoneType\", \"centralized\": \"NoneType\", \"11\": \"NoneType\", \"mining\": \"NoneType\", \"12\": \"NoneType\", \"f\": \"str\", \""
      },
      {
        "category_name": "Finance",
        "tool_name": "CoinLore Cryptocurrency",
        "api_name": "All coins ticker",
        "api_description": "Get tickers for coins",
        "required_parameters": [
          {
            "name": "start",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": "100"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "id": "str",
              "symbol": "str",
              "name": "str",
              "nameid": "str",
              "rank": "int",
              "price_usd": "str",
              "percent_change_24h": "str",
              "percent_change_1h": "str",
              "percent_change_7d": "str",
              "price_btc": "str",
              "market_cap_usd": "str",
              "volume24": "float",
              "volume24a": "float",
              "csupply": "str",
              "tsupply": "str",
              "msupply": "str",
              "_list_length": 100
            }
          ],
          "info": {
            "coins_num": "int",
            "time": "int"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Market Performance",
        "api_description": "Retrieve the overall current market performance\n\n```\n{\n\"datetimeUpdated\":1661544000005\n\"performance\":-0.01535\n\"sector\":\"Utilities\"\n\"symbol\":\"XLU\"\n}\n```",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "datetimeUpdated": "int",
          "performance": "float",
          "sector": "str",
          "symbol": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Information",
        "api_description": "Provides detailed information for a given company:\n- Symbol\n- Company Name\n- Industry\n- Website\n- Relevant Tags\n- General Sector\n- Country\n- Zip Code",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "string",
            "description": "",
            "default": "amzn"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "companyName": "str",
          "country": "str",
          "industry": "str",
          "sector": "str",
          "symbol": "str",
          "tags": [
            "list of str with length 2"
          ],
          "website": "str",
          "zip": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Historical Data",
        "api_description": "Provides access to daily historical company pricing data over a given period of months\n\nA sample output for each day:\n`{\n\"changePercent\":0\n\"close\":115.1465\n\"date\":\"2022-05-27\"\n\"high\":115.187\n\"low\":112.628\n\"open\":113.55\n\"symbol\":\"AMZN\"\n\"updated\":1654726813000\n\"volume\":93660160\n}`",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "string",
            "description": "",
            "default": "amzn"
          },
          {
            "name": "months",
            "type": "string",
            "description": "",
            "default": "3"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "changePercent": "int",
          "close": "float",
          "date": "str",
          "high": "float",
          "low": "float",
          "open": "float",
          "priceDate": "str",
          "symbol": "str",
          "updated": "int",
          "volume": "int"
        }
      }
    ],
    "query": "I want to know the current monthly and annual inflation percentages for the Consumer Price Index (CPI). Also, provide the market capitalization and real-time volume of Bitcoin in US Dollars. Can you also fetch the company information for Amazon, including its industry and website?",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Inflation by API-Ninjas",
        "api_name": "/v1/inflation"
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Market Capitalization"
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Get Realtime Volume"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Information"
      }
    ],
    "query_id": 38666
  },
  {
    "api_list": [
      {
        "category_name": "Finance",
        "tool_name": "Inflation by API-Ninjas",
        "api_name": "/v1/inflation",
        "api_description": "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "type",
            "type": "STRING",
            "description": "inflation indicator type. Can be either CPI (Consumer Price Index) or HICP (Harmonized Index of Consumer Prices). If not provided, the CPI will be used by default.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "country": "str",
          "type": "str",
          "period": "str",
          "monthly_rate_pct": "float",
          "yearly_rate_pct": "float"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Market Capitalization",
        "api_description": "Returns Market Capitalization of a coin in US Dollars.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "BTC"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "marketcap": "int",
          "readable_marketcap": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Get Liquidity Value",
        "api_description": "Returns Liquidity value of a coin in US Dollars",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "BTC"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "liquidity": "int",
          "readable_liquidity": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Get Realtime Volume",
        "api_description": "Returns Realtime volume of a coin in US Dollars.",
        "required_parameters": [
          {
            "name": "symbol",
            "type": "STRING",
            "description": "",
            "default": "BTC"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "symbol": "str",
          "volume": "int",
          "readable_volume": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Defi Data",
        "api_name": "Protocol",
        "api_description": "Get historical TVL of a protocol and breakdowns by token and chain",
        "required_parameters": [
          {
            "name": "protocol",
            "type": "string",
            "description": "protocol slug",
            "default": "aave"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"id\": \"str\", \"name\": \"str\", \"url\": \"str\", \"description\": \"str\", \"logo\": \"str\", \"chains\": \"empty list\", \"gecko_id\": \"str\", \"cmcId\": \"str\", \"treasury\": \"str\", \"twitter\": \"str\", \"governanceID\": [\"list of str with length 2\"], \"wrongLiquidity\": \"bool\", \"github\": [\"list of str with length 1\"], \"currentChainTvls\": {\"Ethereum\": \"float\", \"Ethereum-borrowed\": \"float\", \"borrowed\": \"float\", \"Optimism\": \"float\", \"Metis\": \"float\", \"Arbitrum-borrowed\": \"float\", \"Polygon-borrowed\": \"float\", \"Metis-borrowed\": \"float\", \"Harmony\": \"int\", \"Harmony-borrowed\": \"float\", \"Fantom-borrowed\": \"float\", \"Optimism-borrowed\": \"float\", \"Avalanche\": \"float\", \"Polygon\": \"float\", \"Arbitrum\": \"float\", \"Fantom\": \"float\", \"Avalanche-borrowed\": \"float\", \"pool2\": \"float\", \"Ethereum-pool2\": \"float\", \"Ethereum-staking\": \"float\", \"staking\": \"float\"}, \"chainTvls\": {\"Ethereum\": {\"tvl\": [{\"date\": \"int\", \"totalLiquidityUSD\": \"float\", \"_list_length\": 1124}], \"tokens\": \"NoneType\", \"tokensInUsd\": \"NoneType\"}, \"Ethereum-borrowed\": {\"t"
      },
      {
        "category_name": "Finance",
        "tool_name": "Defi Data",
        "api_name": "Block",
        "api_description": "Get closest block to a timestamp\n\nRuns binary search over a blockchain's blocks to get the closest one to a timestamp.\n\nEvery time this is run we add new data to our database, so each query permanently speeds up future queries.",
        "required_parameters": [
          {
            "name": "chain",
            "type": "string",
            "description": "Chain which you want to get the block from",
            "default": "ethereum"
          },
          {
            "name": "timestamp",
            "type": "string",
            "description": "UNIX timestamp of the block you are searching for",
            "default": "1541548802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "height": "int",
          "timestamp": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Defi Data",
        "api_name": "Tvl protocol",
        "api_description": "Get only protocol TVL",
        "required_parameters": [
          {
            "name": "protocol",
            "type": "string",
            "description": "protocol slug",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str",
          "name": "str",
          "stack": "str",
          "config": {
            "transitional": {
              "silentJSONParsing": "bool",
              "forcedJSONParsing": "bool",
              "clarifyTimeoutError": "bool"
            },
            "transformRequest": [
              "list of NoneType with length 1"
            ],
            "transformResponse": [
              "list of NoneType with length 1"
            ],
            "timeout": "int",
            "xsrfCookieName": "str",
            "xsrfHeaderName": "str",
            "maxContentLength": "int",
            "maxBodyLength": "int",
            "headers": {
              "Accept": "str",
              "User-Agent": "str"
            },
            "method": "str",
            "url": "str"
          },
          "status": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "CoinLore Cryptocurrency",
        "api_name": "Get markets of coin",
        "api_description": "Returns top 50 markets for coin",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "90"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "base": "str",
          "quote": "str",
          "price": "float",
          "price_usd": "float",
          "volume": "float",
          "volume_usd": "float",
          "time": "int"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "CoinLore Cryptocurrency",
        "api_name": "Get exchanges",
        "api_description": "Get all exchanges",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"501\": {\"id\": \"str\", \"0\": \"str\", \"name\": \"str\", \"1\": \"str\", \"name_id\": \"str\", \"2\": \"str\", \"url\": \"str\", \"3\": \"str\", \"country\": \"str\", \"4\": \"str\", \"date_live\": \"str\", \"5\": \"str\", \"date_added\": \"str\", \"6\": \"str\", \"usdt\": \"str\", \"7\": \"str\", \"fiat\": \"str\", \"8\": \"str\", \"auto\": \"str\", \"9\": \"str\", \"alexa\": \"NoneType\", \"10\": \"NoneType\", \"centralized\": \"NoneType\", \"11\": \"NoneType\", \"mining\": \"NoneType\", \"12\": \"NoneType\", \"f\": \"str\", \"13\": \"str\", \"dex\": \"NoneType\", \"14\": \"NoneType\", \"volume_usd\": \"float\", \"udate\": \"str\", \"pairs\": \"int\", \"tr\": \"int\", \"volume_usd_adj\": \"int\"}, \"5\": {\"id\": \"str\", \"0\": \"str\", \"name\": \"str\", \"1\": \"str\", \"name_id\": \"str\", \"2\": \"str\", \"url\": \"str\", \"3\": \"str\", \"country\": \"str\", \"4\": \"str\", \"date_live\": \"str\", \"5\": \"str\", \"date_added\": \"str\", \"6\": \"str\", \"usdt\": \"str\", \"7\": \"str\", \"fiat\": \"str\", \"8\": \"str\", \"auto\": \"str\", \"9\": \"str\", \"alexa\": \"NoneType\", \"10\": \"NoneType\", \"centralized\": \"NoneType\", \"11\": \"NoneType\", \"mining\": \"NoneType\", \"12\": \"NoneType\", \"f\": \"str\", \""
      },
      {
        "category_name": "Finance",
        "tool_name": "CoinLore Cryptocurrency",
        "api_name": "All coins ticker",
        "api_description": "Get tickers for coins",
        "required_parameters": [
          {
            "name": "start",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": "100"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "id": "str",
              "symbol": "str",
              "name": "str",
              "nameid": "str",
              "rank": "int",
              "price_usd": "str",
              "percent_change_24h": "str",
              "percent_change_1h": "str",
              "percent_change_7d": "str",
              "price_btc": "str",
              "market_cap_usd": "str",
              "volume24": "float",
              "volume24a": "float",
              "csupply": "str",
              "tsupply": "str",
              "msupply": "str",
              "_list_length": 100
            }
          ],
          "info": {
            "coins_num": "int",
            "time": "int"
          }
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Market Performance",
        "api_description": "Retrieve the overall current market performance\n\n```\n{\n\"datetimeUpdated\":1661544000005\n\"performance\":-0.01535\n\"sector\":\"Utilities\"\n\"symbol\":\"XLU\"\n}\n```",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "datetimeUpdated": "int",
          "performance": "float",
          "sector": "str",
          "symbol": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Information",
        "api_description": "Provides detailed information for a given company:\n- Symbol\n- Company Name\n- Industry\n- Website\n- Relevant Tags\n- General Sector\n- Country\n- Zip Code",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "string",
            "description": "",
            "default": "amzn"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "companyName": "str",
          "country": "str",
          "industry": "str",
          "sector": "str",
          "symbol": "str",
          "tags": [
            "list of str with length 2"
          ],
          "website": "str",
          "zip": "str"
        }
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Historical Data",
        "api_description": "Provides access to daily historical company pricing data over a given period of months\n\nA sample output for each day:\n`{\n\"changePercent\":0\n\"close\":115.1465\n\"date\":\"2022-05-27\"\n\"high\":115.187\n\"low\":112.628\n\"open\":113.55\n\"symbol\":\"AMZN\"\n\"updated\":1654726813000\n\"volume\":93660160\n}`",
        "required_parameters": [
          {
            "name": "ticker",
            "type": "string",
            "description": "",
            "default": "amzn"
          },
          {
            "name": "months",
            "type": "string",
            "description": "",
            "default": "3"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "changePercent": "int",
          "close": "float",
          "date": "str",
          "high": "float",
          "low": "float",
          "open": "float",
          "priceDate": "str",
          "symbol": "str",
          "updated": "int",
          "volume": "int"
        }
      }
    ],
    "query": "Retrieve the market capitalization and real-time volume of Bitcoin in US Dollars. Can you also fetch the historical TVL of the Aave protocol? Additionally, provide me with the market performance of the XLU sector in the Stoxx market.",
    "relevant APIs": [
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Market Capitalization"
      },
      {
        "category_name": "Finance",
        "tool_name": "Realtime Crypto Prices",
        "api_name": "Get Realtime Volume"
      },
      {
        "category_name": "Finance",
        "tool_name": "Defi Data",
        "api_name": "Protocol"
      },
      {
        "category_name": "Finance",
        "tool_name": "Stoxx",
        "api_name": "Get Company Market Performance"
      }
    ],
    "query_id": 38668
  },
  {
    "api_list": [
      {
        "category_name": "Translation",
        "tool_name": "RushTranslate",
        "api_name": "Get Order",
        "api_description": "Get detailed information about a specific order.",
        "required_parameters": [
          {
            "name": "order_number",
            "type": "STRING",
            "description": "Order number",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Translation",
        "tool_name": "RushTranslate",
        "api_name": "Download File",
        "api_description": "Retrieve a temporary download URL for the file. Files are encrypted and stored in an Amazon S3 bucket. When you want to download a file this request will generate a temporary signed URL allowing access to download the file securely. URLs expire after two minutes.",
        "required_parameters": [
          {
            "name": "file_id",
            "type": "STRING",
            "description": "File ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Translation",
        "tool_name": "RushTranslate",
        "api_name": "Get File",
        "api_description": "Get detailed information about a specific file.",
        "required_parameters": [
          {
            "name": "file_id",
            "type": "STRING",
            "description": "File ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Translation",
        "tool_name": "Translate Language",
        "api_name": "Supported Languages",
        "api_description": "Supported Languages",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "data": [
            {
              "code": "str",
              "language": "str",
              "_list_length": 107
            }
          ],
          "message": "str",
          "status": "bool",
          "totalResultCount": "int"
        }
      },
      {
        "category_name": "Translation",
        "tool_name": "ceviri",
        "api_name": "ceee",
        "api_description": "faas aasdd",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Translation",
        "tool_name": "AI Translation APIs",
        "api_name": "Supported Languages List",
        "api_description": "Get Supported Languages List That  AI Translation APIs Support",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Translation",
        "tool_name": "Language Detection_v2",
        "api_name": "Language Codes List",
        "api_description": "Return list of language codes in ISO 639-1 format.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I need the supported languages list for AI translation. Please provide me with the list of languages that AI translation APIs support. Additionally, I would like to retrieve the language codes in ISO 639-1 format. Thank you!",
    "relevant APIs": [
      {
        "category_name": "Translation",
        "tool_name": "AI Translation APIs",
        "api_name": "Supported Languages List"
      },
      {
        "category_name": "Translation",
        "tool_name": "Language Detection_v2",
        "api_name": "Language Codes List"
      }
    ],
    "query_id": 42365
  },
  {
    "api_list": [
      {
        "category_name": "Location",
        "tool_name": "GoApis Geocoding API",
        "api_name": "Geocding",
        "api_description": "Geocoding is the process of converting a physical address into geographic coordinates, such as latitude and longitude. It allows for the identification of a specific location on the Earth's surface, making it possible to map and analyze data spatially",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "lat",
            "type": "STRING",
            "description": "",
            "default": "37.7749"
          },
          {
            "name": "long",
            "type": "STRING",
            "description": "",
            "default": "-122.4194"
          }
        ],
        "method": "GET",
        "template_response": {
          "plus_code": {
            "compound_code": "str",
            "global_code": "str"
          },
          "results": [
            {
              "address_components": [
                {
                  "long_name": "str",
                  "short_name": "str",
                  "types": [
                    "list of str with length 1"
                  ],
                  "_list_length": 8
                }
              ],
              "formatted_address": "str",
              "geometry": {
                "location": {
                  "lat": "float",
                  "lng": "float"
                },
                "location_type": "str",
                "viewport": {
                  "northeast": {
                    "lat": "float",
                    "lng": "float"
                  },
                  "southwest": {
                    "lat": "float",
                    "lng": "float"
                  }
                }
              },
              "place_id": "str",
              "plus_code": {
                "compound_code": "str",
                "global_code": "str"
              },
              "types": [
                "list of str with length 1"
              ],
              "_list_length": 9
            }
          ],
          "status": "str"
        }
      },
      {
        "category_name": "Location",
        "tool_name": "World Time by API-Ninjas",
        "api_name": "/v1/worldtime",
        "api_description": "API Ninjas World Time API endpoint. Returns the current date and time by city/state/country, location coordinates (latitude/longitude), or timezone.\n\nOne of the following parameter combinations must be set:\nlat + lon,\ncity (state and country optional),\ntimezone",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "timezone",
            "type": "STRING",
            "description": "Timezone of desired location (e.g. Europe/London).",
            "default": ""
          },
          {
            "name": "lon",
            "type": "STRING",
            "description": "Longitude of desired location.",
            "default": ""
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "Latitude of desired location.",
            "default": ""
          },
          {
            "name": "state",
            "type": "STRING",
            "description": "US state name or 2-letter abbreviation (for United States cities only).",
            "default": ""
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "Country name or 2-letter country code.",
            "default": ""
          },
          {
            "name": "city",
            "type": "STRING",
            "description": "City name.",
            "default": "London"
          }
        ],
        "method": "GET",
        "template_response": {
          "timezone": "str",
          "datetime": "str",
          "date": "str",
          "year": "str",
          "month": "str",
          "day": "str",
          "hour": "str",
          "minute": "str",
          "second": "str",
          "day_of_week": "str"
        }
      }
    ],
    "query": "I'm planning a trip to London next week with my family. Can you provide me with the current date and time in London and also the geocoding details for the city? Additionally, fetch the world time for New York and get the geocoding information for that city as well.",
    "relevant APIs": [
      {
        "category_name": "Location",
        "tool_name": "GoApis Geocoding API",
        "api_name": "Geocding"
      },
      {
        "category_name": "Location",
        "tool_name": "World Time by API-Ninjas",
        "api_name": "/v1/worldtime"
      }
    ],
    "query_id": 48770
  },
  {
    "api_list": [
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/mn",
        "api_description": "Returns current gas price data for Minnesota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/nm",
        "api_description": "Returns current gas price data for New Mexico. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/ia",
        "api_description": "Returns current gas price data for Iowa. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get Airport Details",
        "api_description": "This endpoint returns the details such as name and location for a specified IATA airport.",
        "required_parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "Specify a valid three letter IATA code.",
            "default": "DFW"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "str",
          "icao": "str",
          "name": "str",
          "latitude": "float",
          "longitude": "float",
          "elevation": "int",
          "url": "str",
          "time_zone": "str",
          "city_code": "str",
          "country": "str",
          "city": "str",
          "state": "str",
          "county": "str",
          "type": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get Airplane Details",
        "api_description": "This endpoint returns a list of airplanes and other means of transportation to match GDS responses.",
        "required_parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "",
            "default": "777"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "code": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get TimeZones",
        "api_description": "Get TimeZones in Olsen Format with UTC offset and Daylight Savings Time (DST).",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "timezone": "str",
          "utc": "str",
          "dst": "str",
          "zone_code": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "aqls-b2c-system",
        "api_name": "get_priorityrows_mrt__train_no__wagons__wagon_no__priorityrow_get",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "wagon_no",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "train_no",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "aqls-b2c-system",
        "api_name": "get_wagon_by_no_mrt_wagons__wagon_no__get",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "wagon_no",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "aqls-b2c-system",
        "api_name": "get_stands_mrt__train_no__wagons__wagon_no__standrows__standrows_no__seats_get",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "wagon_no",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "standrows_no",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "train_no",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      }
    ],
    "query": "I'm planning a vacation and I'm interested in the gas prices in Iowa. Can you fetch the current gas price data for Iowa? Additionally, I'm curious about the details of the airport in Dallas-Fort Worth (DFW) and the airplanes with the code '777'.",
    "relevant APIs": [
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/ia"
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get Airport Details"
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get Airplane Details"
      }
    ],
    "query_id": 51287
  },
  {
    "api_list": [
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/mn",
        "api_description": "Returns current gas price data for Minnesota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/nm",
        "api_description": "Returns current gas price data for New Mexico. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/ia",
        "api_description": "Returns current gas price data for Iowa. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get Airport Details",
        "api_description": "This endpoint returns the details such as name and location for a specified IATA airport.",
        "required_parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "Specify a valid three letter IATA code.",
            "default": "DFW"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "str",
          "icao": "str",
          "name": "str",
          "latitude": "float",
          "longitude": "float",
          "elevation": "int",
          "url": "str",
          "time_zone": "str",
          "city_code": "str",
          "country": "str",
          "city": "str",
          "state": "str",
          "county": "str",
          "type": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get Airplane Details",
        "api_description": "This endpoint returns a list of airplanes and other means of transportation to match GDS responses.",
        "required_parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "",
            "default": "777"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "name": "str",
          "code": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get TimeZones",
        "api_description": "Get TimeZones in Olsen Format with UTC offset and Daylight Savings Time (DST).",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "timezone": "str",
          "utc": "str",
          "dst": "str",
          "zone_code": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "aqls-b2c-system",
        "api_name": "get_priorityrows_mrt__train_no__wagons__wagon_no__priorityrow_get",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "wagon_no",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "train_no",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "aqls-b2c-system",
        "api_name": "get_wagon_by_no_mrt_wagons__wagon_no__get",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "wagon_no",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      },
      {
        "category_name": "Transportation",
        "tool_name": "aqls-b2c-system",
        "api_name": "get_stands_mrt__train_no__wagons__wagon_no__standrows__standrows_no__seats_get",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "wagon_no",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "standrows_no",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "train_no",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str"
        }
      }
    ],
    "query": "I'm planning a road trip and I'm interested in the gas prices in New Mexico. Can you provide me with the current gas price data for New Mexico? Additionally, I'm curious about the details of the airport in Dallas-Fort Worth (DFW) and the time zones in Olsen format.",
    "relevant APIs": [
      {
        "category_name": "Transportation",
        "tool_name": "US Gas Prices",
        "api_name": "/us/nm"
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get Airport Details"
      },
      {
        "category_name": "Transportation",
        "tool_name": "Travel Hacking Tool",
        "api_name": "Get TimeZones"
      }
    ],
    "query_id": 51289
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Love Quotes by LoveMelon",
        "api_name": "getLoveQuotes",
        "api_description": "Get Love Quotes",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "LightningRoulletteAPI",
        "api_name": "History",
        "api_description": "The Histories of last 30 spins with all the details",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "LightningRoulletteAPI",
        "api_name": "Get last update",
        "api_description": "A JSON response with information about a single roulette spin.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "SimSimi Conversation",
        "api_name": "request",
        "api_description": "",
        "required_parameters": [
          {
            "name": "text",
            "type": "STRING",
            "description": "Query message",
            "default": "hi"
          },
          {
            "name": "lc",
            "type": "STRING",
            "description": "Language code",
            "default": "en"
          }
        ],
        "optional_parameters": [
          {
            "name": "ft",
            "type": "NUMBER",
            "description": "Sexual Contents",
            "default": "0.0"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Fancy text",
        "api_name": "/text",
        "api_description": "",
        "required_parameters": [
          {
            "name": "text",
            "type": "STRING",
            "description": "єηтєя уσυя тєχт αη∂ ¢нαηgє тσ ƒαη¢у тєχт υѕιηg тнιѕ ¢σσℓ αρι :",
            "default": "This is funny."
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Outking",
        "api_name": "Get Poster",
        "api_description": "Get movie poster by title and release year",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "The Shawshank Redemption"
          },
          {
            "name": "year",
            "type": "NUMBER",
            "description": "",
            "default": "1994"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm organizing a company event and I want to include some love quotes in the presentation. Can you fetch me a variety of love quotes that I can use? Additionally, I'm looking for the movie poster of 'The Shawshank Redemption' released in 1994. Can you fetch me the poster?",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Love Quotes by LoveMelon",
        "api_name": "getLoveQuotes"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Outking",
        "api_name": "Get Poster"
      }
    ],
    "query_id": 54151
  },
  {
    "api_list": [
      {
        "category_name": "Jobs",
        "tool_name": "Indeed Jobs API - Finland",
        "api_name": "SearchJobs",
        "api_description": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Helsinki (For now this API gets data for Finland Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "Helsinki"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "python developer"
          },
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "company_logo_url": "str",
          "company_name": "str",
          "company_rating": "str",
          "company_review_link": "str",
          "company_reviews": "int",
          "date": "str",
          "job_location": "str",
          "job_title": "str",
          "job_url": "str",
          "multiple_hiring": "str",
          "next_page": "str",
          "page_number": "int",
          "position": "int",
          "salary": "str",
          "urgently_hiring": "str"
        }
      },
      {
        "category_name": "Jobs",
        "tool_name": "Indeed Jobs API - Sweden",
        "api_name": "SearchJobs",
        "api_description": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Stockholm (For now this API gets data for Sweden Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
        "required_parameters": [
          {
            "name": "location",
            "type": "STRING",
            "description": "",
            "default": "Stockholm"
          },
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "",
            "default": "python"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "company_logo_url": "str",
          "company_name": "str",
          "company_rating": "str",
          "company_review_link": "str",
          "company_reviews": "int",
          "date": "str",
          "job_location": "str",
          "job_title": "str",
          "job_url": "str",
          "multiple_hiring": "str",
          "next_page": "str",
          "page_number": "int",
          "position": "int",
          "salary": "str",
          "urgently_hiring": "str"
        }
      },
      {
        "category_name": "Jobs",
        "tool_name": "AI Resume Generator",
        "api_name": "Generate Document: Resume",
        "api_description": "Endpoint that will generate a large text response containing a Resume document using the provided information",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "degree",
            "type": "STRING",
            "description": "",
            "default": "Information Systems"
          },
          {
            "name": "skills",
            "type": "STRING",
            "description": "",
            "default": "Networking, Web Development"
          },
          {
            "name": "university",
            "type": "STRING",
            "description": "",
            "default": "Michigan State University"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Jobs",
        "tool_name": "AI Resume Generator",
        "api_name": "Generate Document: Cover Letter",
        "api_description": "Endpoint that will generate a large text response containing a Cover Letter document using the provided information",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "jobDescription",
            "type": "STRING",
            "description": "",
            "default": "Example Co. is looking for a Full Stack Web Developer to maintain and improve our custom web application. The solutions will require both frontend and backend skills. Our web application runs on a LEMP stack. LEMP stack experience is a bonus, but not required."
          },
          {
            "name": "degree",
            "type": "STRING",
            "description": "",
            "default": "Information Systems"
          },
          {
            "name": "university",
            "type": "STRING",
            "description": "",
            "default": "Michigan State University"
          },
          {
            "name": "skills",
            "type": "STRING",
            "description": "",
            "default": "Networking, Web Development"
          },
          {
            "name": "jobTitle",
            "type": "STRING",
            "description": "",
            "default": "Full Stack Web Developer"
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I want to explore job opportunities in Helsinki, Finland as a Python developer. Can you find some job postings for me? I need the details of the top 15 jobs, including the company name, job title, job location, salary, and job URL. Additionally, generate a cover letter for me with a degree in Information Systems from Michigan State University, skills in networking and web development, and a job title of Full Stack Web Developer.",
    "relevant APIs": [
      {
        "category_name": "Jobs",
        "tool_name": "Indeed Jobs API - Finland",
        "api_name": "SearchJobs"
      },
      {
        "category_name": "Jobs",
        "tool_name": "AI Resume Generator",
        "api_name": "Generate Document: Cover Letter"
      }
    ],
    "query_id": 56155
  },
  {
    "api_list": [
      {
        "category_name": "Music",
        "tool_name": "MusicData API",
        "api_name": "/youtube/trending/overall",
        "api_description": "Treding Youtube (including non-music) videos worldwide",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "ranking": "str",
          "status": "str",
          "video": "str",
          "link": "str",
          "highlights": "str"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "MusicData API",
        "api_name": "/youtube/topartist_feat/{year}",
        "api_description": "Youtube top artist including features in music videos by year",
        "required_parameters": [
          {
            "name": "year",
            "type": "string",
            "description": "",
            "default": "2022"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "ranking": "str",
          "artist": "str",
          "views": "str"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "MusicData API",
        "api_name": "/youtube/24h/{type}",
        "api_description": "Youtube most viewed music video by content language type: (English, Spanish, Asian or Other)",
        "required_parameters": [
          {
            "name": "type",
            "type": "string",
            "description": "",
            "default": "english"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "ranking": "str",
          "status": "str",
          "video": "str",
          "link": "str",
          "views": "str",
          "likes": "str"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "baixar musicas mp3 completas",
        "api_name": "teste",
        "api_description": "teste",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist singles",
        "api_description": "Get artist singles",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Artist ID",
            "default": "2w9zwq3AktTeYYMuhMjju8"
          }
        ],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "STRING",
            "description": "",
            "default": "0"
          },
          {
            "name": "limit",
            "type": "STRING",
            "description": "",
            "default": "20"
          }
        ],
        "method": "GET",
        "template_response": {
          "data": {
            "artist": {
              "discography": {
                "singles": {
                  "totalCount": "int",
                  "items": [
                    {
                      "releases": {
                        "items": [
                          {
                            "id": "str",
                            "uri": "str",
                            "name": "str",
                            "type": "str",
                            "date": {
                              "year": "int",
                              "isoString": "str"
                            },
                            "coverArt": {
                              "sources": [
                                {
                                  "url": "str",
                                  "width": "int",
                                  "height": "int",
                                  "_list_length": 3
                                }
                              ]
                            },
                            "playability": {
                              "playable": "bool",
                              "reason": "str"
                            },
                            "sharingInfo": {
                              "shareId": "str",
                              "shareUrl": "str"
                            },
                            "tracks": {
                              "totalCount": "int"
                            },
                            "_list_length": 1
                          }
                        ]
                      },
                      "_list_length": 20
                    }
                  ]
                }
              }
            }
          },
          "extensions": "empty list"
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "User followers",
        "api_description": "Get user followers",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "User ID",
            "default": "nocopyrightsounds"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "profiles": [
            {
              "uri": "str",
              "name": "str",
              "followers_count": "int",
              "color": "int",
              "_list_length": 1000
            }
          ]
        }
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Search",
        "api_description": "Search",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "Search query",
            "default": ""
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "`multi` or one of these:\n\n- albums\n- artists\n- episodes\n- genres\n- playlists\n- podcasts\n- tracks\n- users",
            "default": "multi"
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "numberOfTopResults",
            "type": "NUMBER",
            "description": "",
            "default": "5"
          },
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "",
            "default": "0"
          }
        ],
        "method": "GET",
        "template_response": {
          "albums": {
            "totalCount": "int",
            "items": "empty list"
          },
          "artists": {
            "totalCount": "int",
            "items": "empty list"
          },
          "episodes": {
            "totalCount": "int",
            "items": "empty list"
          },
          "genres": {
            "totalCount": "int",
            "items": "empty list"
          },
          "playlists": {
            "totalCount": "int",
            "items": "empty list"
          },
          "podcasts": {
            "totalCount": "int",
            "items": "empty list"
          },
          "topResults": {
            "items": "empty list",
            "featured": "empty list"
          },
          "tracks": {
            "totalCount": "int",
            "items": "empty list"
          },
          "users": {
            "totalCount": "int",
            "items": "empty list"
          }
        }
      }
    ],
    "query": "I'm organizing a music event and I need to find the top artists featured in music videos in 2022 on YouTube. Additionally, provide me with the Spotify singles of these artists and the number of followers for each one.",
    "relevant APIs": [
      {
        "category_name": "Music",
        "tool_name": "MusicData API",
        "api_name": "/youtube/topartist_feat/{year}"
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "Artist singles"
      },
      {
        "category_name": "Music",
        "tool_name": "Spotify Web",
        "api_name": "User followers"
      }
    ],
    "query_id": 56266
  },
  {
    "api_list": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Supported Currencies",
        "api_description": "get a list of currencies we support",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert",
        "api_description": "Convert from one currency toanother",
        "required_parameters": [
          {
            "name": "from",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "amount",
            "type": "NUMBER",
            "description": "",
            "default": "10"
          },
          {
            "name": "to",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Open DeFi",
        "api_name": "web_pair_trade_data",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "pair_id",
            "type": "NUMBER",
            "description": "\nPair id as received in `/pairs` or `/pair-details`\n\nAs the endpoint /pair-details is preferred, this endpoint only gives direct pair_id access for now.\n",
            "default": 1
          },
          {
            "name": "period",
            "type": "STRING",
            "description": "\nThe time perid for the stats.\n\nCurrently only latest stats are supported.\n",
            "default": "hourly"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "price_open": "float",
          "price_high": "float",
          "price_low": "float",
          "price_close": "float",
          "volume": "float",
          "buys": "int",
          "sells": "int",
          "liquidity_high": "float",
          "liquidity_low": "float",
          "liquidity_events": "int"
        }
      },
      {
        "category_name": "Financial",
        "tool_name": "Open DeFi",
        "api_name": "web_candles",
        "api_description": "\nFetch candle data for a single trading pair.\n\nYou need to resolve the symbolic trading pair name to `pair_id` primary key with `/pairs` or `/pair-details`\nto call this API endpoint.\n\nCandle response size is limited to 10,000 candles. Only the first 10,000 candles\nsince the start timestamp is returned.\n\n[Inspired by Bitfinex API](https://docs.bitfinex.com/reference#rest-public-candles).\n",
        "required_parameters": [
          {
            "name": "time_bucket",
            "type": "STRING",
            "description": "\nWhat time bucket to use for the candle size.\n",
            "default": "1h"
          },
          {
            "name": "pair_id",
            "type": "NUMBER",
            "description": "\nPrimary key for the trading pair\n\nFor tests and demos use id `1` which is ETH/USDC pair on Uniswap v2,\nas it is the first deployed Uniswap v2 compatible pool.\n",
            "default": 1
          }
        ],
        "optional_parameters": [
          {
            "name": "start",
            "type": "STRING",
            "description": "\nWhen the candle fetch period starts.\n\nUse UNIX UTC timestamp, as ISO 8601 formatted string.\n[Read more information about the time format](https://docs.python.org/3/library/datetime.html#datetime.datetime.fromisoformat).\n\nIf not specific this will be resolved to now() - time_bucket * 100, or getting the last 100 candles.\n\nThis range parameter is inclusive.\n",
            "default": "2020-05-18 00:00"
          },
          {
            "name": "end",
            "type": "STRING",
            "description": "\nWhen the candle fetch period ends.\n\nUse UNIX UTC timestamp, as ISO 8601 formatted string.\n\nIf not specific this will be resolved to now().\n\nThis range parameter is inclusive.\n",
            "default": "2020-05-19 00:00"
          }
        ],
        "method": "GET",
        "template_response": {
          "ts": "str",
          "o": "float",
          "h": "float",
          "l": "float",
          "c": "float",
          "v": "float",
          "xr": "float",
          "b": "int",
          "s": "int",
          "tc": "int",
          "bv": "float",
          "sv": "float"
        }
      },
      {
        "category_name": "Financial",
        "tool_name": "Open DeFi",
        "api_name": "web_exchanges",
        "api_description": " ",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "sort",
            "type": "STRING",
            "description": "\nWhat kind of sort options is available for the output.\n\nThe default `usd_volume_30d` sorts the exchanges based on their monthly volume.\n",
            "default": "usd_volume_30d"
          },
          {
            "name": "direction",
            "type": "STRING",
            "description": "Sort order:\n * `asc` - Ascending, from A to Z\n * `desc` - Descending, from Z to A\n",
            "default": "desc"
          },
          {
            "name": "filter_zero_volume",
            "type": "BOOLEAN",
            "description": "When set, do not return exchanegs which have had no volume for last 30 days.\n\nThis will speed up the response a bit, as most exchanges are ghost exchanges.\n",
            "default": false
          },
          {
            "name": "chain_slug",
            "type": "STRING",
            "description": "Blockchain slug, e.g, `ethereum` for Ethereum mainnet.\n\nIf present, list exchanges only for this chain.\n",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Crypto News API",
        "api_name": "Get Last Cryptocurrency News",
        "api_description": "This end point returns all the latest articles on cryptocurrency",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Financial",
        "tool_name": "Consulta de boleto",
        "api_name": "consulta",
        "api_description": "Recebe como parâmetro de busca, a linha digitável do boleto e devolve as informações do mesmo.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Financial",
        "tool_name": "Mutual fund Nav",
        "api_name": "fundID",
        "api_description": "current Nav",
        "required_parameters": [
          {
            "name": "ID",
            "type": "STRING",
            "description": "FundID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to surprise my friends with a virtual treasure hunt game. Can you fetch the exchange rates for different currencies and create clues based on their fluctuations? Additionally, find me the latest news articles on cryptocurrency to incorporate it into the game.",
    "relevant APIs": [
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Convert"
      },
      {
        "category_name": "Financial",
        "tool_name": "Currency Converter_v2",
        "api_name": "Supported Currencies"
      },
      {
        "category_name": "Financial",
        "tool_name": "Crypto News API",
        "api_name": "Get Last Cryptocurrency News"
      }
    ],
    "query_id": 62997
  },
  {
    "api_list": [
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Horostory",
        "api_name": "planetaryoverview",
        "api_description": "get the Planetary Overview of the day",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "planet": "str",
          "sign": "str",
          "description": "str"
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Horostory",
        "api_name": "hoscoscope",
        "api_description": "retrieve the horoscope for a specific sign and date",
        "required_parameters": [
          {
            "name": "date",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "sign",
            "type": "ENUM",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "US Hospitals",
        "api_name": "getHospitalsByName",
        "api_description": "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results.",
        "required_parameters": [
          {
            "name": "name",
            "type": "STRING",
            "description": "",
            "default": "presbyterian"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "US Hospitals",
        "api_name": "getHospitalsById",
        "api_description": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.",
        "required_parameters": [
          {
            "name": "ccn",
            "type": "NUMBER",
            "description": "",
            "default": "670068"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "Provider CCN": "int",
          "Hospital Name": "str",
          "Alias": "str",
          "Url": "str",
          "Phone": "str",
          "Service": "str",
          "Type": "str",
          "Approval Codes": "str",
          "Street Address": "str",
          "City": "str",
          "State Code": "str",
          "Zip Code": "str",
          "County": "str",
          "Medicare CBSA Number": "int",
          "Rural Versus Urban": "str",
          "Control": "str",
          "Number of Beds": "int",
          "Parent Unit": "NoneType",
          "Affiliated Units": "NoneType",
          "System": "NoneType"
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Exercises by API-Ninjas",
        "api_name": "/v1/exercises",
        "api_description": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "number of results to offset for pagination. Default is 0.",
            "default": ""
          },
          {
            "name": "muscle",
            "type": "STRING",
            "description": "muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps",
            "default": "biceps"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman",
            "default": ""
          },
          {
            "name": "difficulty",
            "type": "STRING",
            "description": "difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert",
            "default": ""
          },
          {
            "name": "name",
            "type": "STRING",
            "description": "name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "name": "str",
          "type": "str",
          "muscle": "str",
          "equipment": "str",
          "difficulty": "str",
          "instructions": "str"
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "AirVisual",
        "api_name": "cities/v2/get-information",
        "api_description": "Get information in specific city by its id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "The value of id field (type is city) that returned in …/v2/auto-complete endpoint",
            "default": "hW7vArorRd8cT9h6v"
          }
        ],
        "optional_parameters": [
          {
            "name": "x-units-temperature",
            "type": "STRING",
            "description": "One of the following : fahrenheit|celsius",
            "default": "celsius"
          },
          {
            "name": "x-aqi-index",
            "type": "STRING",
            "description": "One of the following : us|cn",
            "default": "us"
          },
          {
            "name": "x-user-timezone",
            "type": "STRING",
            "description": "",
            "default": "Asia/Singapore"
          },
          {
            "name": "x-user-lang",
            "type": "STRING",
            "description": "",
            "default": "en-US"
          },
          {
            "name": "x-units-pressure",
            "type": "STRING",
            "description": "One of the following : hg|mbar",
            "default": "mbar"
          },
          {
            "name": "x-units-distance",
            "type": "STRING",
            "description": "One of the following : miles|kilometer",
            "default": "kilometer"
          }
        ],
        "method": "GET",
        "template_response": "{\"status\": \"str\", \"data\": {\"id\": \"str\", \"city\": \"str\", \"state\": \"str\", \"country\": \"str\", \"location\": {\"lat\": \"float\", \"lon\": \"float\"}, \"timezone\": \"str\", \"websiteLink\": \"str\", \"report\": {\"link\": \"str\", \"actionText\": \"str\", \"message\": \"str\"}, \"type\": \"str\", \"name\": \"str\", \"followers\": {\"total\": \"str\", \"pictures\": [\"list of str with length 3\"], \"label\": \"str\"}, \"contributors\": {\"pictures\": [\"list of str with length 2\"], \"redirection\": {\"actionType\": \"str\", \"appCategory\": \"str\", \"item\": \"str\"}, \"label\": \"str\"}, \"sources\": [{\"id\": \"str\", \"name\": \"str\", \"totalStations\": \"int\", \"type\": \"str\", \"picture\": \"str\", \"url\": \"str\", \"_list_length\": 4}], \"currentMeasurement\": {\"ts\": \"str\", \"aqius\": \"int\", \"mainus\": \"str\", \"aqicn\": \"int\", \"maincn\": \"str\", \"pollutants\": [{\"conc\": \"float\", \"aqius\": \"int\", \"aqicn\": \"int\", \"pollutant\": \"str\", \"isEstimated\": \"int\", \"_list_length\": 1}]}, \"sensorDefinitions\": [{\"pollutant\": \"str\", \"unit\": \"str\", \"name\": \"str\", \"_list_length\": 16}], \"currentWeather\": {\"ts\": \"s"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "AirVisual",
        "api_name": "stations/get-measurements (Deprecated)",
        "api_description": "Get measurements at specific station by its id",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "The value of id field (type is station) that received from .../auto-complete API",
            "default": "Jmy9oL75KSZnsqi6L"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "",
            "default": "en_US"
          },
          {
            "name": "aqiIndex",
            "type": "STRING",
            "description": "AQI index (us | cn)",
            "default": "us"
          },
          {
            "name": "timezone",
            "type": "STRING",
            "description": "",
            "default": "Asia/Singapore"
          }
        ],
        "method": "GET",
        "template_response": {
          "status": "str",
          "data": {
            "id": "str",
            "measurements": [
              {
                "ts": "str",
                "aqius": "int",
                "mainus": "str",
                "aqicn": "int",
                "maincn": "str",
                "p1": {
                  "conc": "int",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "s2": {
                  "conc": "int",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "p2": {
                  "conc": "int",
                  "aqius": "int",
                  "aqicn": "int",
                  "hour_late": "int",
                  "ts": "str"
                },
                "_list_length": 48
              }
            ],
            "measurements_daily": [
              {
                "ts": "str",
                "p2": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "p1": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "o3": {
                  "conc": "int",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "s2": {
                  "conc": "float",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "co": {
                  "conc": "int",
                  "aqius": "int",
                  "aqicn": "int"
                },
                "aqius": "int",
                "mainus": "str",
                "aqicn": "int",
                "maincn": "str",
                "_list_length": 31
              }
            ]
          }
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "AirVisual",
        "api_name": "auto-complete (Deprecated)",
        "api_description": "Find countries, cities, places by name",
        "required_parameters": [
          {
            "name": "query",
            "type": "STRING",
            "description": "Name of countries, cities, districts, places, etc...",
            "default": "singapore"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status": "str",
          "data": {
            "stations": [
              {
                "id": "str",
                "name": "str",
                "city": "str",
                "state": "str",
                "country": "str",
                "i18n": {},
                "location": {
                  "type": "str",
                  "coordinates": [
                    "list of float with length 2"
                  ]
                },
                "type": "str",
                "current_measurement": {
                  "aqius": "int",
                  "aqicn": "int",
                  "ts": "str"
                },
                "_list_length": 10
              }
            ],
            "cities": [
              {
                "id": "str",
                "city": "str",
                "state": "str",
                "country": "str",
                "i18n": {},
                "estimated": "int",
                "location": {
                  "type": "str",
                  "coordinates": [
                    "list of float with length 2"
                  ]
                },
                "type": "str",
                "current_measurement": {
                  "aqius": "int",
                  "aqicn": "int",
                  "ts": "str"
                },
                "_list_length": 1
              }
            ],
            "news": [
              {
                "author": "str",
                "date": "str",
                "status": "str",
                "thumbnail": "str",
                "title": "str",
                "type": "str",
                "url": "str",
                "_list_length": 7
              }
            ],
            "contributors": [
              {
                "id": "str",
                "name": "str",
                "type": "str",
                "subType": "str",
                "picture": "str",
                "visibility": "bool",
                "isVerified": "bool",
                "_list_length": 1
              }
            ]
          }
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Ind Nutrient API",
        "api_name": "View Food Items by Core",
        "api_description": "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "count": "int",
          "item": [
            {
              "_id": "str",
              "food_name": "str",
              "quantity": "str",
              "calories": "int",
              "uri": "str",
              "type": "str",
              "type_uri": "str",
              "core": "str",
              "core_uri": "str",
              "food_nutrition": [
                {
                  "nutrient_name": "str",
                  "value": "int",
                  "unit": "str",
                  "_list_length": 3
                }
              ],
              "request": [
                {
                  "type": "str",
                  "message": "str",
                  "url": "str",
                  "_list_length": 1
                }
              ],
              "_list_length": 53
            }
          ]
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Ind Nutrient API",
        "api_name": "View Food Item By Name",
        "api_description": "This request allows clients to retrieve detailed information about a food item by specifying by its `name`.\n\nWhen making the request, ensure the food item's name is written with hyphens (\"-\") separating the words. For instance, \"Paneer Butter Masala\" should be written as \"paneer-butter-masala\" in the request.\n\nAPI request sent to [https://indnutrientsapi.tech/food/name/paneer-butter-masala](https://indnutrientsapi.tech/food/name/paneer-butter-masala)",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "count": "int",
          "item": [
            {
              "_id": "str",
              "food_name": "str",
              "quantity": "str",
              "calories": "int",
              "uri": "str",
              "type": "str",
              "type_uri": "str",
              "core": "str",
              "core_uri": "str",
              "food_nutrition": [
                {
                  "nutrient_name": "str",
                  "value": "float",
                  "unit": "str",
                  "_list_length": 3
                }
              ],
              "request": [
                {
                  "type": "str",
                  "message": "str",
                  "url": "str",
                  "_list_length": 1
                }
              ],
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "Ind Nutrient API",
        "api_name": "View All Types With Their Food Items",
        "api_description": "This request allows clients to retrieve a list of all available types along with the food items associated with each type.\n\nAPI request sent to [https://indnutrientsapi.tech/food/type](https://indnutrientsapi.tech/food/type)",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "types": [
            {
              "type": "str",
              "related_food_length": "int",
              "related_food": [
                {
                  "_id": "str",
                  "food_name": "str",
                  "quantity": "str",
                  "calories": "int",
                  "uri": "str",
                  "type": "str",
                  "type_uri": "str",
                  "food_nutrition": [
                    {
                      "nutrient_name": "str",
                      "value": "float",
                      "unit": "str",
                      "_list_length": 3
                    }
                  ],
                  "_list_length": 266
                }
              ],
              "_list_length": 2
            }
          ]
        }
      }
    ],
    "query": "I'm planning a family reunion and we want to have it at a hospital. Can you help me find hospitals in our city that have a large number of beds? Additionally, we would like to know the current air quality in the area.",
    "relevant APIs": [
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "US Hospitals",
        "api_name": "getHospitalsByName"
      },
      {
        "category_name": "Health_and_Fitness",
        "tool_name": "AirVisual",
        "api_name": "cities/v2/get-information"
      }
    ],
    "query_id": 68092
  },
  {
    "api_list": [
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Amenities",
        "api_description": "Retrieves amenities ids And descriptions. Returns 50 results",
        "required_parameters": [
          {
            "name": "offset",
            "type": "NUMBER",
            "description": "index to start from",
            "default": "0"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing Availability Full",
        "api_description": "Retrieve listing availability and stay length rules for the next 12 months\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "the listing id\n",
            "default": "619966061834034729"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Airbnb listings",
        "api_name": "Listing status Full",
        "api_description": "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "the listing id",
            "default": "619966061834034729"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flight Fare Search",
        "api_name": "Flight Search V2",
        "api_description": "A faster, more agile Endpoint that's used to search flights.",
        "required_parameters": [
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          },
          {
            "name": "from",
            "type": "STRING",
            "description": "",
            "default": "LHR"
          },
          {
            "name": "adult",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "to",
            "type": "STRING",
            "description": "",
            "default": "DXB"
          }
        ],
        "optional_parameters": [
          {
            "name": "currency",
            "type": "STRING",
            "description": "",
            "default": "USD"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "",
            "default": "economy"
          },
          {
            "name": "child",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "infant",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flight Fare Search",
        "api_name": "Airport Departues",
        "api_description": "An endpoint to get Departues in an airport",
        "required_parameters": [
          {
            "name": "airportCode",
            "type": "STRING",
            "description": "",
            "default": "LHR"
          }
        ],
        "optional_parameters": [
          {
            "name": "carrierCode",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flight Fare Search",
        "api_name": "Airport Arrivals",
        "api_description": "An Endpoint to fetch Arrivals on a given date",
        "required_parameters": [
          {
            "name": "airportCode",
            "type": "STRING",
            "description": "",
            "default": "LHR"
          }
        ],
        "optional_parameters": [
          {
            "name": "carrierCode",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "date",
            "type": "DATE (YYYY-MM-DD)",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Travel",
        "tool_name": "Skyscanner_v2",
        "api_name": "Get Hotel Filters",
        "api_description": "This API is used to get all the available filters for the place to visit.",
        "required_parameters": [
          {
            "name": "adults",
            "type": "NUMBER",
            "description": "Number of adult guests (with age 18 and over)",
            "default": "1"
          },
          {
            "name": "checkout",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Checkout Date\nFormat: YYYY-MM-DD",
            "default": ""
          },
          {
            "name": "entityId",
            "type": "STRING",
            "description": "**entityId** can be retrieved from **Search Hotel** API in **Hotels** collection.",
            "default": ""
          },
          {
            "name": "checkin",
            "type": "DATE (YYYY-MM-DD)",
            "description": "Checkin Date\nFormat: YYYY-MM-DD",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "childrenAges",
            "type": "ARRAY",
            "description": "Number of children (with age between 0 and 17)\nExample:\nIf 1st child's age is 11 months and 2nd child's age is 10 years, then the parameter should be passed as [0,10]",
            "default": ""
          },
          {
            "name": "waitTime",
            "type": "NUMBER",
            "description": "Wait time in milliseconds. Sometimes the API needs **wait times** or more than **one** API call to get **complete data**. ",
            "default": "2000"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Skyscanner_v2",
        "api_name": "Search Flights Multi Stops",
        "api_description": "Get and poll all flights. Searching the flights between multiple locations with prices, filter, sorting etc.",
        "required_parameters": [
          {
            "name": "legs",
            "type": "OBJECT",
            "description": "The legs must contain the **origin**, **destination** and **date** in object format and must be passed in an array.\nEXAMPLE:\n[\n  {\n    'origin': 'LOND',\n    'destination': 'NYCA',\n    'date': '2023-02-07'\n  },\n  ...\n]\n**Note:** If there are multiple stops, there should be more leg objects on the board.",
            "default": "[{\"origin\":\"LOND\",\"destination\":\"NYCA\",\"date\":\"2023-02-07\"},{\"origin\":\"NYCA\",\"destination\":\"LAXA\",\"date\":\"2023-02-13\"},{\"origin\":\"LAXA\",\"destination\":\"LOND\",\"date\":\"2023-02-18\"}]"
          }
        ],
        "optional_parameters": [
          {
            "name": "infants",
            "type": "NUMBER",
            "description": "Number of Infants (with age < 2 years)",
            "default": ""
          },
          {
            "name": "waitTime",
            "type": "NUMBER",
            "description": "Wait time in milliseconds. Sometimes the API needs **wait times** or more than **one** API call to get **complete data**. ",
            "default": "5000"
          },
          {
            "name": "filter",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "market",
            "type": "STRING",
            "description": "The list of available **market** can be retrieved through the **Get Config** API in the **Config** collection.",
            "default": "en-US"
          },
          {
            "name": "children",
            "type": "NUMBER",
            "description": "Number of Childrens (with age between 2-12 years)",
            "default": ""
          },
          {
            "name": "cabinClass",
            "type": "ENUM",
            "description": "",
            "default": ""
          },
          {
            "name": "countryCode",
            "type": "STRING",
            "description": "The list of available **countryCode** can be retrieved through the **Get Config** API in the **Config** collection.",
            "default": "US"
          },
          {
            "name": "adults",
            "type": "NUMBER",
            "description": "Number of Adults (with age 18 and over)\nDefault Value: 1",
            "default": "1"
          },
          {
            "name": "currency",
            "type": "STRING",
            "description": "The list of available **currencies** can be retrieved through the **Get Config** API in the **Config** collection.",
            "default": "USD"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Skyscanner_v2",
        "api_name": "Get Things To Do",
        "api_description": "Use this API to get Thing  to do nearby the hotel selected.",
        "required_parameters": [
          {
            "name": "entityId",
            "type": "STRING",
            "description": "**entityId** can be retrieved from **Search Hotel** API in **Hotels** collection.",
            "default": ""
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "**lat** can be retrieved from **Hotel Details** or **Search Hotel** API in **Hotels** collection as **latitude**.",
            "default": ""
          },
          {
            "name": "lng",
            "type": "STRING",
            "description": "**lng** can be retrieved from **Hotel Details** or **Search Hotel** API in **Hotels** collection as **longitude**.",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "market",
            "type": "STRING",
            "description": "The list of available **market** can be retrieved through the **Get Config** API in the **Config** collection.",
            "default": "en-US"
          },
          {
            "name": "currency",
            "type": "STRING",
            "description": "The list of available **currencies** can be retrieved through the **Get Config** API in the **Config** collection.",
            "default": "USD"
          },
          {
            "name": "countryCode",
            "type": "STRING",
            "description": "The list of available **countryCode** can be retrieved through the **Get Config** API in the **Config** collection.",
            "default": "US"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flight Data_v2",
        "api_name": "The popular directions from a city",
        "api_description": "Brings the most popular directions from a specified city back.",
        "required_parameters": [
          {
            "name": "currency",
            "type": "STRING",
            "description": "the airline tickets currency",
            "default": "RUB"
          },
          {
            "name": "origin",
            "type": "STRING",
            "description": "the point of departure. The IATA city code or the country code. The length - from 2 to 3 symbols.",
            "default": "MOW"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flight Data_v2",
        "api_name": "Popular airline routes",
        "api_description": "Returns routes for which an airline operates flights, sorted by popularity.",
        "required_parameters": [
          {
            "name": "airline_code",
            "type": "STRING",
            "description": "IATA code of airline",
            "default": "SU"
          }
        ],
        "optional_parameters": [
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "records limit per page. Default value is 100. Not less than 1000",
            "default": "100"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Travel",
        "tool_name": "Flight Data_v2",
        "api_name": "Data of countries in json format",
        "api_description": "API returns a file with a list of countrys from the database",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I want to surprise my friends with a weekend trip to Barcelona. Can you find me some affordable flights from London to Barcelona? Also, recommend some popular things to do in Barcelona near the hotel we'll be staying at.",
    "relevant APIs": [
      {
        "category_name": "Travel",
        "tool_name": "Flight Fare Search",
        "api_name": "Flight Search V2"
      },
      {
        "category_name": "Travel",
        "tool_name": "Skyscanner_v2",
        "api_name": "Get Things To Do"
      }
    ],
    "query_id": 68441
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "Wavebase",
        "api_name": "XYZ Map Tiles for Ocean Conditions",
        "api_description": "Wavebase Global Ocean Tiles API:\n\nWave Signficant Height (GET): https://api.wavebase.app/v1/tiles/singleband/{variable}/{date-timeslot - YYYYMMDDHH}/0/0/0.png\n\ne.g.: https://api.wavebase.app/v1/tiles/singleband/VHM0/2023051703/0/0/0.png \n\nCurrently only Tile at 0/0/0 is available Free.  Contact:  info@wavebase.app for additional tiles.",
        "required_parameters": [
          {
            "name": "variable",
            "type": "string",
            "description": "",
            "default": "VHM0"
          },
          {
            "name": "datetime",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Wavebase",
        "api_name": "Ocean Conditions Closest to Latitude / Longitude",
        "api_description": "​https://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location.",
        "required_parameters": [
          {
            "name": "latitude",
            "type": "NUMBER",
            "description": "",
            "default": "52.8"
          },
          {
            "name": "longitude",
            "type": "NUMBER",
            "description": "",
            "default": "-4.07"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"closest_coordinates\": {\"latitude\": \"float\", \"longitude\": \"float\"}, \"conditions\": [{\"primary_swell_wave_from_direction\": \"float\", \"primary_swell_wave_mean_period\": \"float\", \"primary_swell_wave_significant_height\": \"float\", \"secondary_swell_wave_from_direction\": \"float\", \"secondary_swell_wave_mean_period\": \"float\", \"secondary_swell_wave_significant_height\": \"float\", \"tide_direction\": \"str\", \"tide_height\": \"float\", \"tide_state\": \"str\", \"valid_for_dtg\": \"str\", \"wave_from_direction\": \"float\", \"wave_from_direction_at_variance_spectral_density_maximum\": \"float\", \"wave_mean_period_from_variance_spectral_density_inverse_freq\": \"float\", \"wave_mean_period_from_variance_spectral_density_second_freq\": \"float\", \"wave_period_at_variance_spectral_density_maximum\": \"float\", \"wave_significant_height\": \"float\", \"wave_stokes_drift_x_velocity\": \"int\", \"wave_stokes_drift_y_velocity\": \"int\", \"wind_dir\": \"float\", \"wind_speed\": \"float\", \"wind_wave_from_direction\": \"float\", \"wind_wave_mean_period\": \"float\", \""
      },
      {
        "category_name": "Weather",
        "tool_name": "Ouranos",
        "api_name": "7 Day Forecast",
        "api_description": "7 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 7 day every 3 hours",
        "required_parameters": [
          {
            "name": "lat",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "long",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Ouranos",
        "api_name": "Moon Information",
        "api_description": "Moon Information return moon phase and illumination.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Ouranos",
        "api_name": "Planet currently visible",
        "api_description": "Planet currently visible",
        "required_parameters": [
          {
            "name": "long",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "lat",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Testing for My Use",
        "api_name": "list all api",
        "api_description": "list all api",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"1forge.com\": {\"added\": \"str\", \"preferred\": \"str\", \"versions\": {\"0.0.1\": {\"added\": \"str\", \"info\": {\"contact\": {\"email\": \"str\", \"name\": \"str\", \"url\": \"str\"}, \"description\": \"str\", \"title\": \"str\", \"version\": \"str\", \"x-apisguru-categories\": [\"list of str with length 1\"], \"x-logo\": {\"backgroundColor\": \"str\", \"url\": \"str\"}, \"x-origin\": [{\"format\": \"str\", \"url\": \"str\", \"version\": \"str\", \"_list_length\": 1}], \"x-providerName\": \"str\"}, \"updated\": \"str\", \"swaggerUrl\": \"str\", \"swaggerYamlUrl\": \"str\", \"openapiVer\": \"str\", \"link\": \"str\"}}}, \"1password.com:events\": {\"added\": \"str\", \"preferred\": \"str\", \"versions\": {\"1.0.0\": {\"added\": \"str\", \"info\": {\"description\": \"str\", \"title\": \"str\", \"version\": \"str\", \"x-apisguru-categories\": [\"list of str with length 1\"], \"x-logo\": {\"url\": \"str\"}, \"x-origin\": [{\"format\": \"str\", \"url\": \"str\", \"version\": \"str\", \"_list_length\": 1}], \"x-providerName\": \"str\", \"x-serviceName\": \"str\"}, \"updated\": \"str\", \"swaggerUrl\": \"str\", \"swaggerYamlUrl\": \"str\", \"openapiVer\": \"str\","
      },
      {
        "category_name": "Weather",
        "tool_name": "Testing for My Use",
        "api_name": "metrics",
        "api_description": "metrics",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "numSpecs": "int",
          "numAPIs": "int",
          "numEndpoints": "int",
          "unreachable": "int",
          "invalid": "int",
          "unofficial": "int",
          "fixes": "int",
          "fixedPct": "int",
          "datasets": [
            {
              "title": "str",
              "data": {
                "adyen.com": "int",
                "amadeus.com": "int",
                "amazonaws.com": "int",
                "apideck.com": "int",
                "apisetu.gov.in": "int",
                "azure.com": "int",
                "ebay.com": "int",
                "fungenerators.com": "int",
                "github.com": "int",
                "googleapis.com": "int",
                "hubapi.com": "int",
                "interzoid.com": "int",
                "mastercard.com": "int",
                "microsoft.com": "int",
                "nexmo.com": "int",
                "nytimes.com": "int",
                "parliament.uk": "int",
                "sportsdata.io": "int",
                "twilio.com": "int",
                "vtex.local": "int",
                "windows.net": "int",
                "Others": "int"
              },
              "_list_length": 1
            }
          ],
          "stars": "int",
          "issues": "int",
          "thisWeek": {
            "added": "int",
            "updated": "int"
          },
          "numDrivers": "int",
          "numProviders": "int"
        }
      }
    ],
    "query": "I'm planning a beach wedding in Maldives and I want to ensure perfect weather conditions. Can you provide me with the ocean conditions closest to the latitude and longitude of the wedding venue? Additionally, I would like to know the current phase and illumination of the moon during the wedding.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "Wavebase",
        "api_name": "Ocean Conditions Closest to Latitude / Longitude"
      },
      {
        "category_name": "Weather",
        "tool_name": "Ouranos",
        "api_name": "Moon Information"
      }
    ],
    "query_id": 73783
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "OpenWeather",
        "api_name": "getCurrentWeather",
        "api_description": "Test",
        "required_parameters": [
          {
            "name": "appid",
            "type": "STRING",
            "description": "",
            "default": "da0f9c8d90bde7e619c3ec47766a42f4"
          },
          {
            "name": "q",
            "type": "STRING",
            "description": "City name",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
            "default": "standard"
          }
        ],
        "method": "GET",
        "template_response": {
          "cod": "str",
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "OpenWeather",
        "api_name": "getForecastWeather",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "City name",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "cnt",
            "type": "NUMBER",
            "description": "A number of timestamps, which will be returned in the API response.",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
            "default": "standard"
          },
          {
            "name": "lang",
            "type": "STRING",
            "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "cod": "str",
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "The Weather API",
        "api_name": "weather report",
        "api_description": "Gives weather report of a particular city.",
        "required_parameters": [
          {
            "name": "cityName",
            "type": "string",
            "description": "",
            "default": "mumbai"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Extreme Data",
        "api_description": "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL.",
        "required_parameters": [
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "apiKey",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "datum",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "GET Astronomy Data",
        "api_description": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.",
        "required_parameters": [
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Station Area Data",
        "api_description": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.",
        "required_parameters": [
          {
            "name": "botLng",
            "type": "string",
            "description": "",
            "default": "Bottom right Lng"
          },
          {
            "name": "apiKey",
            "type": "string",
            "description": "",
            "default": "Stormglass API Key"
          },
          {
            "name": "topLng",
            "type": "string",
            "description": "",
            "default": "Top left Lng"
          },
          {
            "name": "topLat",
            "type": "string",
            "description": "",
            "default": "Top left Lat"
          },
          {
            "name": "botLat",
            "type": "string",
            "description": "",
            "default": "Bottom right  Lat"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "havo",
        "api_name": "weatherendpoin",
        "api_description": "ob havo",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "My friends and I are going on a road trip from New York to Chicago. Could you please give us the current weather conditions for both cities? Additionally, we would like to know the high and low tide timings for the nearest coastal areas along our route.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "OpenWeather",
        "api_name": "getCurrentWeather"
      },
      {
        "category_name": "Weather",
        "tool_name": "The Weather API",
        "api_name": "weather report"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Extreme Data"
      }
    ],
    "query_id": 73864
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "Current Snow Conditions",
        "api_description": "Returns the current snow conditions for a given resort name",
        "required_parameters": [
          {
            "name": "resort",
            "type": "string",
            "description": "",
            "default": "Jackson Hole"
          }
        ],
        "optional_parameters": [
          {
            "name": "units",
            "type": "STRING",
            "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
            "default": "i"
          }
        ],
        "method": "GET",
        "template_response": {
          "topSnowDepth": "str",
          "botSnowDepth": "str",
          "freshSnowfall": "NoneType",
          "lastSnowfallDate": "NoneType",
          "basicInfo": {
            "region": "str",
            "name": "str",
            "url": "str",
            "topLiftElevation": "str",
            "midLiftElevation": "str",
            "botLiftElevation": "str",
            "lat": "str",
            "lon": "str"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "5 Day Forecast",
        "api_description": "Returns the 5 day forecast for a given resort name",
        "required_parameters": [
          {
            "name": "resort",
            "type": "string",
            "description": "",
            "default": "Jackson Hole"
          }
        ],
        "optional_parameters": [
          {
            "name": "units",
            "type": "STRING",
            "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
            "default": "i"
          },
          {
            "name": "el",
            "type": "STRING",
            "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
            "default": "top"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "Hourly Forecast",
        "api_description": "Returns the hourly forecast for a given resort name",
        "required_parameters": [
          {
            "name": "resort",
            "type": "string",
            "description": "",
            "default": "Jackson Hole"
          }
        ],
        "optional_parameters": [
          {
            "name": "el",
            "type": "STRING",
            "description": "Specify a part of the mountain. Accepted values are 'top', 'mid', and 'bot'. Using this parameter improves response time.",
            "default": "top"
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
            "default": "i"
          },
          {
            "name": "c",
            "type": "BOOLEAN",
            "description": "Limit result to current day only",
            "default": "false"
          }
        ],
        "method": "GET",
        "template_response": {
          "forecast": [
            {
              "time": "str",
              "summary": "str",
              "windSpeed": "str",
              "windDirection": "str",
              "rain": "str",
              "maxTemp": "str",
              "minTemp": "NoneType",
              "windChill": "str",
              "humidity": "str",
              "freezeLevel": "str",
              "_list_length": 14
            }
          ],
          "basicInfo": {
            "region": "str",
            "name": "str",
            "url": "str",
            "topLiftElevation": "str",
            "midLiftElevation": "str",
            "botLiftElevation": "str",
            "lat": "str",
            "lon": "str"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "OikoWeather",
        "api_name": "Weather Data",
        "api_description": "Hourly historical and forecast weather parameters in time-series format, from 1950 to 16 days ahead for any location.",
        "required_parameters": [
          {
            "name": "start",
            "type": "STRING",
            "description": "",
            "default": "'2010-01-01'"
          },
          {
            "name": "lat",
            "type": "NUMBER",
            "description": "",
            "default": "23.3"
          },
          {
            "name": "param",
            "type": "STRING",
            "description": "",
            "default": "temperature"
          },
          {
            "name": "lon",
            "type": "NUMBER",
            "description": "",
            "default": "114.2"
          },
          {
            "name": "end",
            "type": "STRING",
            "description": "",
            "default": "'2019-12-31'"
          }
        ],
        "optional_parameters": [
          {
            "name": "freq",
            "type": "STRING",
            "description": "",
            "default": "D"
          }
        ],
        "method": "GET",
        "template_response": {
          "statusCode": "int",
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "OpenWeather",
        "api_name": "getCurrentWeather",
        "api_description": "Test",
        "required_parameters": [
          {
            "name": "appid",
            "type": "STRING",
            "description": "",
            "default": "da0f9c8d90bde7e619c3ec47766a42f4"
          },
          {
            "name": "q",
            "type": "STRING",
            "description": "City name",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
            "default": "standard"
          }
        ],
        "method": "GET",
        "template_response": {
          "cod": "str",
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "OpenWeather",
        "api_name": "getForecastWeather",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "City name",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "cnt",
            "type": "NUMBER",
            "description": "A number of timestamps, which will be returned in the API response.",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
            "default": "standard"
          },
          {
            "name": "lang",
            "type": "STRING",
            "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "cod": "str",
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Foreca Weather",
        "api_name": "Current",
        "api_description": "Current weather estimate for location.",
        "required_parameters": [
          {
            "name": "location",
            "type": "string",
            "description": "",
            "default": "102643743"
          }
        ],
        "optional_parameters": [
          {
            "name": "windunit",
            "type": "STRING",
            "description": "Wind speed unit in response.",
            "default": "MS"
          },
          {
            "name": "alt",
            "type": "NUMBER",
            "description": "Altitude (meters)",
            "default": "0"
          },
          {
            "name": "lang",
            "type": "STRING",
            "description": "Language (ISO 639-1 codes). Options: de, en, es, fr, it, pl, ru, fi, sv, nl, ko, pt, th, tr, zh, zh_TW (Chinese in Taiwan), zh_CN (Chinese in China). (default en)",
            "default": "en"
          },
          {
            "name": "tz",
            "type": "STRING",
            "description": "Time zone in response (IANA time zone database names)",
            "default": "Europe/London"
          },
          {
            "name": "tempunit",
            "type": "STRING",
            "description": "Temperature unit in response",
            "default": "C"
          }
        ],
        "method": "GET",
        "template_response": {
          "current": {
            "time": "str",
            "symbol": "str",
            "symbolPhrase": "str",
            "temperature": "int",
            "feelsLikeTemp": "int",
            "relHumidity": "int",
            "dewPoint": "int",
            "windSpeed": "int",
            "windDir": "int",
            "windDirString": "str",
            "windGust": "int",
            "precipProb": "int",
            "precipRate": "int",
            "cloudiness": "int",
            "thunderProb": "int",
            "uvIndex": "int",
            "pressure": "float",
            "visibility": "int"
          }
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Foreca Weather",
        "api_name": "Daily",
        "api_description": "Daily forecast.",
        "required_parameters": [
          {
            "name": "location",
            "type": "string",
            "description": "",
            "default": "102643743"
          }
        ],
        "optional_parameters": [
          {
            "name": "alt",
            "type": "NUMBER",
            "description": "Altitude (meters)",
            "default": "0"
          },
          {
            "name": "dataset",
            "type": "STRING",
            "description": "Variable set",
            "default": "full"
          },
          {
            "name": "tempunit",
            "type": "STRING",
            "description": "Temperature unit in response",
            "default": "C"
          },
          {
            "name": "windunit",
            "type": "STRING",
            "description": "Wind speed unit in response.",
            "default": "MS"
          },
          {
            "name": "periods",
            "type": "NUMBER",
            "description": "Number of time steps (default 8, maximum 12)",
            "default": "8"
          }
        ],
        "method": "GET",
        "template_response": {
          "forecast": [
            {
              "date": "str",
              "symbol": "str",
              "symbolPhrase": "str",
              "maxTemp": "int",
              "minTemp": "int",
              "maxFeelsLikeTemp": "int",
              "minFeelsLikeTemp": "int",
              "maxRelHumidity": "int",
              "minRelHumidity": "int",
              "maxDewPoint": "int",
              "minDewPoint": "int",
              "precipAccum": "int",
              "snowAccum": "int",
              "maxWindSpeed": "int",
              "windDir": "int",
              "maxWindGust": "int",
              "precipProb": "int",
              "cloudiness": "int",
              "sunrise": "str",
              "sunset": "str",
              "sunriseEpoch": "int",
              "sunsetEpoch": "int",
              "moonrise": "str",
              "moonset": "str",
              "moonPhase": "int",
              "uvIndex": "int",
              "minVisibility": "int",
              "pressure": "float",
              "confidence": "str",
              "solarRadiationSum": "int",
              "_list_length": 8
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Foreca Weather",
        "api_name": "Location search",
        "api_description": "Search for locations by name.",
        "required_parameters": [
          {
            "name": "query",
            "type": "string",
            "description": "",
            "default": "mumbai"
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "",
            "default": "en"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "in"
          }
        ],
        "method": "GET",
        "template_response": {
          "locations": [
            {
              "id": "int",
              "name": "str",
              "country": "str",
              "timezone": "str",
              "language": "str",
              "adminArea": "str",
              "adminArea2": "NoneType",
              "adminArea3": "NoneType",
              "lon": "float",
              "lat": "float",
              "_list_length": 1
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Cloud Cast",
        "api_name": "Get the forecast",
        "api_description": "Get the forecast for the current city",
        "required_parameters": [
          {
            "name": "city",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Cloud Cast",
        "api_name": "Get wind speed",
        "api_description": "Get the current wind speed",
        "required_parameters": [
          {
            "name": "city",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Cloud Cast",
        "api_name": "Get humidty",
        "api_description": "Get the humidity for the current city",
        "required_parameters": [
          {
            "name": "city",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm organizing a ski race event at Jackson Hole and need to ensure favorable weather conditions. Can you provide me with the current weather conditions, the daily forecast for the next 7 days, and the wind speed for the event day? Additionally, I would like to know the humidity levels for the race day.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "Ski Resort Forecast",
        "api_name": "Current Snow Conditions"
      },
      {
        "category_name": "Weather",
        "tool_name": "Foreca Weather",
        "api_name": "Current"
      },
      {
        "category_name": "Weather",
        "tool_name": "Foreca Weather",
        "api_name": "Daily"
      },
      {
        "category_name": "Weather",
        "tool_name": "Cloud Cast",
        "api_name": "Get the forecast"
      },
      {
        "category_name": "Weather",
        "tool_name": "Cloud Cast",
        "api_name": "Get wind speed"
      },
      {
        "category_name": "Weather",
        "tool_name": "Cloud Cast",
        "api_name": "Get humidty"
      }
    ],
    "query_id": 73984
  },
  {
    "api_list": [
      {
        "category_name": "Weather",
        "tool_name": "Open Weather Map",
        "api_name": "current weather data",
        "api_description": "current weather data",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "havo",
        "api_name": "weatherendpoin",
        "api_description": "ob havo",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "climate data",
        "api_name": "Search location by Name or zip code",
        "api_description": "Search location by Name or zip code and get the key for the forecast",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "CITY",
            "type": "STRING",
            "description": "name of a city",
            "default": "New York"
          },
          {
            "name": "LANG",
            "type": "STRING",
            "description": "language [en,fr,nl,es,pt,it,tr,gr,cz,pl,ru,cn]",
            "default": "en"
          },
          {
            "name": "ZIPCODE",
            "type": "STRING",
            "description": "zip code of the city",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": [
            {
              "wmo": "str",
              "city": "str",
              "country": "str",
              "country_name": "str",
              "_list_length": 2
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "climate data",
        "api_name": "List of all Countries",
        "api_description": "List of all Countries",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,fr,de,nl,es,pt,pl,tr,gr,tr,cn]",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": {
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "Countries": [
            {
              "COUNTRY": "str",
              "name": "str",
              "_list_length": 278
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "climate data",
        "api_name": "Get climate data by lat/lon or Key",
        "api_description": "get climate for  the location Lat/Lon",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "LAT",
            "type": "NUMBER",
            "description": "latitude",
            "default": "45"
          },
          {
            "name": "LON",
            "type": "NUMBER",
            "description": "longitude",
            "default": "-70"
          },
          {
            "name": "KEY",
            "type": "STRING",
            "description": "key of city from List of cities",
            "default": ""
          },
          {
            "name": "LANG",
            "type": "STRING",
            "description": "Language [en,de,nl,fr,pl,gr,it,cn,ru,cz,pt,es]",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "modified": "str",
          "description": "str",
          "generator": "str",
          "location": {
            "city": "str",
            "country": "str",
            "country_name": "str",
            "tz_long": "str",
            "lat": "str",
            "lon": "str",
            "SI": "str",
            "SIU": "str",
            "CEL": "str",
            "start_date": "str",
            "end_date": "str"
          },
          "ClimateDataMonth": [
            {
              "tmax": "str",
              "temp": "str",
              "tmin": "str",
              "accumulated_rain": "str",
              "days_with_rain": "str",
              "sun_hours": "str",
              "rh": "str",
              "TIME": "str",
              "_list_length": 12
            }
          ]
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "GET Astronomy Data",
        "api_description": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.",
        "required_parameters": [
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Extreme Data",
        "api_description": "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL.",
        "required_parameters": [
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "apiKey",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "datum",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "Get Tide Sea-level Data",
        "api_description": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.",
        "required_parameters": [
          {
            "name": "params",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "apiKey",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lat",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "lng",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "datum",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "startDate",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "endDate",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Weather",
        "tool_name": "OpenWeather",
        "api_name": "getForecastWeather",
        "api_description": " ",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "City name",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "cnt",
            "type": "NUMBER",
            "description": "A number of timestamps, which will be returned in the API response.",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
            "default": "standard"
          },
          {
            "name": "lang",
            "type": "STRING",
            "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "cod": "str",
          "message": "str"
        }
      },
      {
        "category_name": "Weather",
        "tool_name": "OpenWeather",
        "api_name": "getCurrentWeather",
        "api_description": "Test",
        "required_parameters": [
          {
            "name": "appid",
            "type": "STRING",
            "description": "",
            "default": "da0f9c8d90bde7e619c3ec47766a42f4"
          },
          {
            "name": "q",
            "type": "STRING",
            "description": "City name",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "lang",
            "type": "STRING",
            "description": "Parameter to get the output in your language. Translation is applied for the city name and description fields",
            "default": ""
          },
          {
            "name": "units",
            "type": "STRING",
            "description": "Units of measurement. For temperature in Fahrenheit imperial; For temperature in Celsius - metric; for temperature in Kelvin - standart",
            "default": "standard"
          }
        ],
        "method": "GET",
        "template_response": {
          "cod": "str",
          "message": "str"
        }
      }
    ],
    "query": "My friends and I are planning a hiking trip to the Swiss Alps. Can you fetch the climate data for the location based on the given latitude and longitude coordinates? It would also be helpful to know the moonrise and moonset times during our trip.",
    "relevant APIs": [
      {
        "category_name": "Weather",
        "tool_name": "climate data",
        "api_name": "Get climate data by lat/lon or Key"
      },
      {
        "category_name": "Weather",
        "tool_name": "Stormglass Complete",
        "api_name": "GET Astronomy Data"
      },
      {
        "category_name": "Weather",
        "tool_name": "climate data",
        "api_name": "List of all Countries"
      }
    ],
    "query_id": 73991
  },
  {
    "api_list": [
      {
        "category_name": "News_Media",
        "tool_name": "Energy Price News",
        "api_name": "List of Sources",
        "api_description": "See which regions we have news sources from.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Energy Price News",
        "api_name": "All articles",
        "api_description": "Get all available articles from multiple sources",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Energy Price News",
        "api_name": "List of Regions",
        "api_description": "See which regions we have news sources from.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Greek News in English",
        "api_name": "Get All Sources",
        "api_description": "Get All Sources' names and ids",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "str",
          "name": "str"
        }
      },
      {
        "category_name": "News_Media",
        "tool_name": "Greek News in English",
        "api_name": "Get All News",
        "api_description": "This endpoint will return back all greek news from all the sources.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "description": "str",
          "image": "str",
          "site": "str"
        }
      },
      {
        "category_name": "News_Media",
        "tool_name": "Greek News in English",
        "api_name": "Get Articles From A Single Source",
        "api_description": "Get Greek News from a specific news source.",
        "required_parameters": [
          {
            "name": "siteId",
            "type": "string",
            "description": "",
            "default": "ktg"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "title": "str",
          "link": "str",
          "description": "str",
          "image": "str",
          "site": "str"
        }
      },
      {
        "category_name": "News_Media",
        "tool_name": "Live world futbol news",
        "api_name": "Get All World Footbol news live",
        "api_description": "This end point will return back all news about footbol.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Live world futbol news",
        "api_name": "Get Individual News Source",
        "api_description": "Get News about football news from a specific news resource.",
        "required_parameters": [
          {
            "name": "newspaperId",
            "type": "string",
            "description": "",
            "default": "eurosport"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a football enthusiast and I want to stay updated on the latest news. Fetch me all the available football news. Additionally, I'm interested in news related to Greece. Can you get me the latest Greek news articles from multiple sources?",
    "relevant APIs": [
      {
        "category_name": "News_Media",
        "tool_name": "Energy Price News",
        "api_name": "All articles"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Greek News in English",
        "api_name": "Get All News"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Greek News in English",
        "api_name": "Get All Sources"
      },
      {
        "category_name": "News_Media",
        "tool_name": "Live world futbol news",
        "api_name": "Get Individual News Source"
      }
    ],
    "query_id": 75279
  },
  {
    "api_list": [
      {
        "category_name": "Search",
        "tool_name": "Youtube Search_v3",
        "api_name": "searchChannel",
        "api_description": "Efficiently search for specific videos or playlists within a channel",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "(Required) Channel ID",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Search",
        "tool_name": "Youtube Search_v3",
        "api_name": "getPlaylist",
        "api_description": "The \"getPlaylistDetails\" endpoint provides detailed information and metadata about a specific playlist on YouTube.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "(Required) Playlist ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Search",
        "tool_name": "Youtube Search_v3",
        "api_name": "getVideoDetails",
        "api_description": "Retrieve comprehensive video details to enhance your application's functionality and provide users with valuable insights about the videos they are interacting with.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "(Required) Channel ID",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Search",
        "tool_name": "License Plate to VIN",
        "api_name": "License Plate to VIN",
        "api_description": "License Plate to VIN",
        "required_parameters": [
          {
            "name": "state_code",
            "type": "STRING",
            "description": "State Code\nAL,AK,AZ,AR,CA,CO,CT,DE,DC,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY",
            "default": "AL"
          },
          {
            "name": "license_plate",
            "type": "STRING",
            "description": "",
            "default": "S8TAN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "code": "str",
          "status": "str",
          "vin": "str"
        }
      },
      {
        "category_name": "Search",
        "tool_name": "Google Search_v3",
        "api_name": "Image Search",
        "api_description": "This endpoint is used for image searches",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "",
            "default": "Word Cup"
          }
        ],
        "optional_parameters": [
          {
            "name": "start",
            "type": "STRING",
            "description": "The index of the first result to return.",
            "default": "0"
          },
          {
            "name": "num",
            "type": "NUMBER",
            "description": "Number of search results to return.\nValid values are integers between 1 and 20, inclusive",
            "default": "10"
          },
          {
            "name": "gl",
            "type": "STRING",
            "description": "The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value.",
            "default": "us"
          },
          {
            "name": "lr",
            "type": "STRING",
            "description": "Restricts the search to documents written in a particular language",
            "default": "lang_en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Search",
        "tool_name": "Google Search_v3",
        "api_name": "Web Search",
        "api_description": "This endpoint is used for web searches",
        "required_parameters": [
          {
            "name": "q",
            "type": "STRING",
            "description": "Search query",
            "default": "word cup"
          }
        ],
        "optional_parameters": [
          {
            "name": "num",
            "type": "NUMBER",
            "description": "Number of search results to return.\nValid values are integers between 1 and 20, inclusive",
            "default": "10"
          },
          {
            "name": "start",
            "type": "STRING",
            "description": "The index of the first result to return.",
            "default": "0"
          },
          {
            "name": "gl",
            "type": "STRING",
            "description": "The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value.",
            "default": "us"
          },
          {
            "name": "lr",
            "type": "STRING",
            "description": "Restricts the search to documents written in a particular language",
            "default": "lang_en"
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Search",
        "tool_name": "Emplois OPT-NC",
        "api_name": "All",
        "api_description": "L'intégralité des [offres d'emploi](https://office.opt.nc/fr/emploi-et-carriere/postuler-lopt-nc/offres-emploi), sans pagination.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "nid": "str",
          "titre": "str",
          "intitule_poste": "str",
          "reference_se": "str",
          "niveau_diplome": "str",
          "mission": "str",
          "diplome_formation": "str",
          "experience": "str",
          "duree_contrat": "str",
          "date_mise_en_ligne": "str",
          "date_recrutement": "str",
          "direction": "str",
          "service": "str",
          "site": "str",
          "url_fiche_poste": "str",
          "lien": "str",
          "langcode": "str"
        }
      },
      {
        "category_name": "Search",
        "tool_name": "Bing Web Search",
        "api_name": "Supported Countries",
        "api_description": "You can search against these countries.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"Australia\": \"str\", \"Belgium\": \"str\", \"Brazil\": \"str\", \"Canada\": \"str\", \"China\": \"str\", \"France\": \"str\", \"Germany\": \"str\", \"India\": \"str\", \"Italy\": \"str\", \"Japan\": \"str\", \"Korea\": \"str\", \"Mexico\": \"str\", \"Netherlands\": \"str\", \"Poland\": \"str\", \"Russia\": \"str\", \"Spain\": \"str\", \"Sweden\": \"str\", \"Switzerland\": \"str\", \"United Kingdom\": \"str\", \"United States\": \"str\", \"Afghanistan\": \"str\", \"Albania\": \"str\", \"Algeria\": \"str\", \"American Samoa\": \"str\", \"Andorra\": \"str\", \"Angola\": \"str\", \"Anguilla\": \"str\", \"Antigua and Barbuda\": \"str\", \"Argentina\": \"str\", \"Armenia\": \"str\", \"Aruba\": \"str\", \"Austria\": \"str\", \"Azerbaijan\": \"str\", \"Bahamas\": \"str\", \"Bahrain\": \"str\", \"Bangladesh\": \"str\", \"Barbados\": \"str\", \"Belarus\": \"str\", \"Belize\": \"str\", \"Benin\": \"str\", \"Bermuda\": \"str\", \"Bhutan\": \"str\", \"Bolivia\": \"str\", \"Bosnia & Herzegovina\": \"str\", \"Botswana\": \"str\", \"British Virgin Islands\": \"str\", \"Brunei\": \"str\", \"Bulgaria\": \"str\", \"Burkina Faso\": \"str\", \"Burundi\": \"str\", \"Cabo Verde\": \"str\", \"Cambodia\": \"s"
      },
      {
        "category_name": "Search",
        "tool_name": "Bing Web Search",
        "api_name": "Supported Languages",
        "api_description": "These languages are supported for to search.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"Arabic\": \"str\", \"Chinese (Simplified)\": \"str\", \"Chinese (Traditional)\": \"str\", \"Czech\": \"str\", \"Dutch\": \"str\", \"English\": \"str\", \"Finnish\": \"str\", \"French\": \"str\", \"German\": \"str\", \"Italian\": \"str\", \"Japanese\": \"str\", \"Korean\": \"str\", \"Polish\": \"str\", \"Portuguese (Brazil)\": \"str\", \"Russian\": \"str\", \"Spanish\": \"str\", \"Swedish\": \"str\", \"Turkish\": \"str\", \"Afrikaans\": \"str\", \"Albanian\": \"str\", \"Amharic\": \"str\", \"Armenian\": \"str\", \"Assamese\": \"str\", \"Azerbaijani (Latin)\": \"str\", \"Bangla\": \"str\", \"Basque\": \"str\", \"Belarusian\": \"str\", \"Bosnian (Latin)\": \"str\", \"Bulgarian\": \"str\", \"Catalan\": \"str\", \"Central Kurdish\": \"str\", \"Cherokee (Cherokee)\": \"str\", \"Croatian\": \"str\", \"Danish\": \"str\", \"Dari\": \"str\", \"Estonian\": \"str\", \"Filipino\": \"str\", \"Galician\": \"str\", \"Georgian\": \"str\", \"Greek\": \"str\", \"Gujarati\": \"str\", \"Hausa (Latin)\": \"str\", \"Hebrew\": \"str\", \"Hindi\": \"str\", \"Hungarian\": \"str\", \"Icelandic\": \"str\", \"Igbo\": \"str\", \"Indonesian\": \"str\", \"Irish\": \"str\", \"isiXhosa\": \"str\", \"isiZulu\": \"st"
      }
    ],
    "query": "I want to surprise my mom with a special homemade dinner. Can you provide me with some recipe ideas for a three-course meal? Additionally, find me a YouTube playlist with relaxing music to play during the dinner.",
    "relevant APIs": [
      {
        "category_name": "Search",
        "tool_name": "Google Search_v3",
        "api_name": "Web Search"
      },
      {
        "category_name": "Search",
        "tool_name": "Youtube Search_v3",
        "api_name": "searchChannel"
      }
    ],
    "query_id": 79633
  },
  {
    "api_list": [
      {
        "category_name": "Energy",
        "tool_name": "Electricity Carbon Footprint Germany",
        "api_name": "CO2 Emission",
        "api_description": "The CO2 Emission endpoint will provide carbon emissions in grams per Kilo-Watt-Hour.  To latest and historical footprint information for electricity in Germany.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "date",
            "type": "STRING",
            "description": "Allows retrieving historical values (back to yr 2017) .\n\nAccepted formats:\n\n- YYYY-MM-DD\n- MM/DD/YYYY\n- Unix Timestamp (ms)",
            "default": "2022-08-20"
          }
        ],
        "method": "GET",
        "template_response": {
          "date": "str",
          "co2perKwh": "int",
          "trend": {
            "avg30": "int",
            "avg365": "int"
          }
        }
      },
      {
        "category_name": "Energy",
        "tool_name": "Europe Fuel Prices",
        "api_name": "Get specific country",
        "api_description": "Get fuel prices for a specific country",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "Germany"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": "str",
          "diesel_price": "float",
          "gasoline_price": "float"
        }
      },
      {
        "category_name": "Energy",
        "tool_name": "Europe Fuel Prices",
        "api_name": "All Countries",
        "api_description": "Get all of Europe countries Fuel prices",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": "str",
          "diesel_price": "float",
          "gasoline_price": "float"
        }
      },
      {
        "category_name": "Energy",
        "tool_name": "proclima",
        "api_name": "dolar",
        "api_description": "dolar",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Energy",
        "tool_name": "CO2 Offset",
        "api_name": "Retrieve Compensation",
        "api_description": "Response contains full compensation details (if exists, and owner is account).",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "",
            "default": "0xF0F2e446EeD32236EA0c78a6E4a91Ed712654799"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "err": "str"
        }
      },
      {
        "category_name": "Energy",
        "tool_name": "CO2 Offset",
        "api_name": "List existing Compensations",
        "api_description": "Returns a list of all existing co2offset certificates linked to account.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "messages": "str",
          "info": "str"
        }
      }
    ],
    "query": "I'm planning a sustainable wedding and I want to calculate the carbon footprint of our energy usage. Can you provide me with the CO2 emissions per kilowatt-hour for electricity in Germany? Additionally, I would like to know the fuel prices for diesel and gasoline in Germany to estimate the emissions from transportation.",
    "relevant APIs": [
      {
        "category_name": "Energy",
        "tool_name": "Electricity Carbon Footprint Germany",
        "api_name": "CO2 Emission"
      },
      {
        "category_name": "Energy",
        "tool_name": "Europe Fuel Prices",
        "api_name": "Get specific country"
      }
    ],
    "query_id": 84074
  },
  {
    "api_list": [
      {
        "category_name": "Energy",
        "tool_name": "Europe Fuel Prices",
        "api_name": "All Countries",
        "api_description": "Get all of Europe countries Fuel prices",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": "str",
          "diesel_price": "float",
          "gasoline_price": "float"
        }
      },
      {
        "category_name": "Energy",
        "tool_name": "Europe Fuel Prices",
        "api_name": "Get specific country",
        "api_description": "Get fuel prices for a specific country",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "Germany"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "country": "str",
          "diesel_price": "float",
          "gasoline_price": "float"
        }
      },
      {
        "category_name": "Energy",
        "tool_name": "Regionalkonzept Strom Herkunft",
        "api_name": "entnahme",
        "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein dürfen, die  für einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen dürfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler Ökostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
        "required_parameters": [
          {
            "name": "postleitzahl",
            "type": "STRING",
            "description": "Postleitzahl des Verbrauchers (Entnahmestelle)",
            "default": "09669"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Energy",
        "tool_name": "Regionalkonzept Strom Herkunft",
        "api_name": "erzeugung",
        "api_description": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein dürfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen dürfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler Ökostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
        "required_parameters": [
          {
            "name": "postleitzahl",
            "type": "STRING",
            "description": "Postleitzahl der Erzeugungsanlage, für die eine Liste der Postleitzahlen von Verbrauchergebiete einers regionalen Ökostrombezugs erstellt werden soll.",
            "default": "01609"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Energy",
        "tool_name": "Regionalkonzept Strom Herkunft",
        "api_name": "Strommix",
        "api_description": "Resultierender Strommix nach Anwendung der regionalen Ökostromerzeugung im Gebiet einer Postleitzahl.",
        "required_parameters": [
          {
            "name": "postleitzahl",
            "type": "STRING",
            "description": "",
            "default": "69168"
          }
        ],
        "optional_parameters": [],
        "method": "GET"
      }
    ],
    "query": "I'm a journalist working on an article about sustainable energy consumption. Can you fetch the fuel prices for Germany and the Strommix information for Berlin? Additionally, provide me with the list of postcodes where renewable energy can be generated in Berlin.",
    "relevant APIs": [
      {
        "category_name": "Energy",
        "tool_name": "Europe Fuel Prices",
        "api_name": "Get specific country"
      },
      {
        "category_name": "Energy",
        "tool_name": "Regionalkonzept Strom Herkunft",
        "api_name": "Strommix"
      },
      {
        "category_name": "Energy",
        "tool_name": "Regionalkonzept Strom Herkunft",
        "api_name": "entnahme"
      }
    ],
    "query_id": 84084
  },
  {
    "api_list": [
      {
        "category_name": "Medical",
        "tool_name": "Covid-19 by API-Ninjas",
        "api_name": "/v1/covid19",
        "api_description": "API Ninjas Covid19 API endpoint. Either **date** or **country** must be set.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "type",
            "type": "STRING",
            "description": "type of data to retrieve. Must be either cases or deaths. If not set, cases will be used by default.",
            "default": ""
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "country name (case insensitive).",
            "default": ""
          },
          {
            "name": "date",
            "type": "STRING",
            "description": "date to retrieve single-day snapshot. Must be in the form of YYYY-MM-DD (e.g. 2022-01-01)",
            "default": "2022-01-01"
          },
          {
            "name": "county",
            "type": "STRING",
            "description": "county name for US states (case insensitive). For United States data only. Must be used in conjunction with country (United States) and region (e.g. California).",
            "default": ""
          },
          {
            "name": "region",
            "type": "STRING",
            "description": "administrative region (also known as state or province in many countries) name (case insensitive). Must be used in conjunction with country. If not set, countries with data broken down by administrative regions will return separate data for each region.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Medical",
        "tool_name": "GetGuidelines",
        "api_name": "vac",
        "api_description": "Vaccinations only",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Medical",
        "tool_name": "GetGuidelines",
        "api_name": "all",
        "api_description": "All guidelines",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET"
      },
      {
        "category_name": "Medical",
        "tool_name": "Konviere DrugsAPI",
        "api_name": "Get Drug Info by Drug Name & Route",
        "api_description": "This web method will return all the dataset related to the drug information using the “drgNm” the drug name or brand name or drug product and “drgRte” drug route, these input parameters are required.  All web method requires the \"api_key\" as query parameter.",
        "required_parameters": [
          {
            "name": "drgRte",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "drgNm",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "api_key",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Medical",
        "tool_name": "Konviere DrugsAPI",
        "api_name": "Get Adverse Event Info by Reaction, Sex, Age Group & Drug Name",
        "api_description": "This web method will return a summary dataset related to the adverse events information using the “reaction” the reaction, “sex” the patient sex (0: unknown, 1: male, 2: female), “ageGrp” age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly) and “drgNm” the drug name or brand \nname, these input parameters are required.  All web method requires the \"api_key\" as query parameter.",
        "required_parameters": [
          {
            "name": "drgNm",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "sex",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "reaction",
            "type": "string",
            "description": "",
            "default": ""
          },
          {
            "name": "api_key",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "ageGrp",
            "type": "NUMBER",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Medical",
        "tool_name": "Konviere DrugsAPI",
        "api_name": "Get Adverse Event Info by Reaction, Sex & Age Group",
        "api_description": "This web method will return a summary dataset related to the adverse events information using the “reaction” the reaction, “sex” the patient sex (0: unknown, 1: male, 2: female) and “ageGrp” age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly), these input parameters are required.  All web method requires the \"api_key\" as query parameter.",
        "required_parameters": [
          {
            "name": "ageGrp",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "sex",
            "type": "NUMBER",
            "description": "",
            "default": ""
          },
          {
            "name": "api_key",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "reaction",
            "type": "string",
            "description": "",
            "default": ""
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm planning a family vacation and I need to gather information about the COVID-19 situation in Italy. Can you provide me with the COVID-19 cases and deaths data for Italy? Moreover, fetch the adverse event information by reaction, sex, and age group for Ibuprofen.",
    "relevant APIs": [
      {
        "category_name": "Medical",
        "tool_name": "Covid-19 by API-Ninjas",
        "api_name": "/v1/covid19"
      },
      {
        "category_name": "Medical",
        "tool_name": "Konviere DrugsAPI",
        "api_name": "Get Adverse Event Info by Reaction, Sex & Age Group"
      }
    ],
    "query_id": 84593
  },
  {
    "api_list": [
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetRelatedChannels",
        "api_description": "",
        "required_parameters": [
          {
            "name": "category",
            "type": "STRING",
            "description": "Category name",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "json or xml or php",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "SearchVideos",
        "api_description": "Search for videos.",
        "required_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "json/xml/php",
            "default": ""
          },
          {
            "name": "query",
            "type": "STRING",
            "description": "The search terms",
            "default": ""
          }
        ],
        "optional_parameters": [
          {
            "name": "user_id",
            "type": "STRING",
            "description": "The ID number or username of the user.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          },
          {
            "name": "summary_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back more information.",
            "default": ""
          },
          {
            "name": "full_response",
            "type": "BOOLEAN",
            "description": "Set this parameter to get back the full video information.",
            "default": ""
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetRelatedPeople",
        "api_description": "Get a list of related people for a category.",
        "required_parameters": [
          {
            "name": "category",
            "type": "STRING",
            "description": "The name of the category.",
            "default": ""
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "json or xml or php",
            "default": "json"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "The page number to show.",
            "default": ""
          },
          {
            "name": "per_page",
            "type": "NUMBER",
            "description": "Number of items to show on each page. Max 50.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "generated_in": "str",
          "stat": "str",
          "err": {
            "code": "str",
            "expl": "str",
            "msg": "str"
          }
        }
      },
      {
        "category_name": "Tools",
        "tool_name": "YTStream - Download YouTube Videos",
        "api_name": "Download/Stream",
        "api_description": "Stream or download info.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "Youtube Video Id.",
            "default": "UxxajLWwzqY"
          }
        ],
        "optional_parameters": [
          {
            "name": "cgeo",
            "type": "STRING",
            "description": "Country code in ISO 3166 format of the end user.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"status\": \"str\", \"id\": \"str\", \"title\": \"str\", \"lengthSeconds\": \"str\", \"keywords\": [\"list of str with length 18\"], \"channelTitle\": \"str\", \"channelId\": \"str\", \"description\": \"str\", \"thumbnail\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 4}], \"allowRatings\": \"bool\", \"viewCount\": \"NoneType\", \"isPrivate\": \"bool\", \"isUnpluggedCorpus\": \"bool\", \"isLiveContent\": \"bool\", \"storyboards\": [{\"width\": \"str\", \"height\": \"str\", \"thumbsCount\": \"str\", \"columns\": \"str\", \"rows\": \"str\", \"interval\": \"str\", \"storyboardCount\": \"int\", \"url\": [\"list of str with length 1\"], \"_list_length\": 3}], \"expiresInSeconds\": \"str\", \"formats\": [{\"itag\": \"int\", \"url\": \"str\", \"mimeType\": \"str\", \"bitrate\": \"int\", \"width\": \"int\", \"height\": \"int\", \"lastModified\": \"str\", \"contentLength\": \"str\", \"quality\": \"str\", \"fps\": \"int\", \"qualityLabel\": \"str\", \"projectionType\": \"str\", \"averageBitrate\": \"int\", \"audioQuality\": \"str\", \"approxDurationMs\": \"str\", \"audioSampleRate\": \"str\", \"audioChannels\": \"int\", \"_list_length"
      }
    ],
    "query": "I'm organizing a film festival and I'm looking for award-winning films. Can you search for videos related to 'award-winning' on Vimeo? Additionally, fetch the related people in the 'film festival' category to invite them as judges. Finally, provide me with a streaming link for a YouTube video with the ID 'UxxajLWwzqY'.",
    "relevant APIs": [
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "SearchVideos"
      },
      {
        "category_name": "Media",
        "tool_name": "Vimeo",
        "api_name": "GetRelatedPeople"
      },
      {
        "category_name": "Tools",
        "tool_name": "YTStream - Download YouTube Videos",
        "api_name": "Download/Stream"
      }
    ],
    "query_id": 460
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)",
        "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "Title to search for.",
            "default": "batman"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
            "default": "movie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Genres (FREE)",
        "api_description": "Get the id to name mapping of supported genres.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "result": {
            "1": "str",
            "10402": "str",
            "10749": "str",
            "10751": "str",
            "10752": "str",
            "10763": "str",
            "10764": "str",
            "10767": "str",
            "12": "str",
            "14": "str",
            "16": "str",
            "18": "str",
            "2": "str",
            "27": "str",
            "28": "str",
            "3": "str",
            "35": "str",
            "36": "str",
            "37": "str",
            "4": "str",
            "5": "str",
            "53": "str",
            "6": "str",
            "7": "str",
            "80": "str",
            "878": "str",
            "9648": "str",
            "99": "str"
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Seasons",
        "api_description": "Return all of the seasons for a TV show or mini-series.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "poster_url": "str",
          "name": "str",
          "overview": "NoneType",
          "number": "NoneType",
          "air_date": "str",
          "episode_count": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew",
        "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "person_id": "int",
          "type": "str",
          "full_name": "str",
          "headshot_url": "str",
          "role": "str",
          "episode_count": "int",
          "order": "NoneType"
        }
      }
    ],
    "query": "I'm hosting a company movie night and we want to watch a sci-fi movie. Can you suggest a popular sci-fi movie available for streaming in the US? Also, provide the streaming sources for the movie 'Inception'.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      }
    ],
    "query_id": 5863
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)",
        "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "Title to search for.",
            "default": "batman"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
            "default": "movie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Genres (FREE)",
        "api_description": "Get the id to name mapping of supported genres.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "result": {
            "1": "str",
            "10402": "str",
            "10749": "str",
            "10751": "str",
            "10752": "str",
            "10763": "str",
            "10764": "str",
            "10767": "str",
            "12": "str",
            "14": "str",
            "16": "str",
            "18": "str",
            "2": "str",
            "27": "str",
            "28": "str",
            "3": "str",
            "35": "str",
            "36": "str",
            "37": "str",
            "4": "str",
            "5": "str",
            "53": "str",
            "6": "str",
            "7": "str",
            "80": "str",
            "878": "str",
            "9648": "str",
            "99": "str"
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Seasons",
        "api_description": "Return all of the seasons for a TV show or mini-series.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "poster_url": "str",
          "name": "str",
          "overview": "NoneType",
          "number": "NoneType",
          "air_date": "str",
          "episode_count": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew",
        "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "person_id": "int",
          "type": "str",
          "full_name": "str",
          "headshot_url": "str",
          "role": "str",
          "episode_count": "int",
          "order": "NoneType"
        }
      }
    ],
    "query": "I want to watch a classic movie with my family. Can you suggest a popular classic movie available for streaming in the US? Also, provide the streaming sources for the movie 'Casablanca'.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      }
    ],
    "query_id": 5864
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)",
        "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "Title to search for.",
            "default": "batman"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
            "default": "movie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Genres (FREE)",
        "api_description": "Get the id to name mapping of supported genres.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "result": {
            "1": "str",
            "10402": "str",
            "10749": "str",
            "10751": "str",
            "10752": "str",
            "10763": "str",
            "10764": "str",
            "10767": "str",
            "12": "str",
            "14": "str",
            "16": "str",
            "18": "str",
            "2": "str",
            "27": "str",
            "28": "str",
            "3": "str",
            "35": "str",
            "36": "str",
            "37": "str",
            "4": "str",
            "5": "str",
            "53": "str",
            "6": "str",
            "7": "str",
            "80": "str",
            "878": "str",
            "9648": "str",
            "99": "str"
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Seasons",
        "api_description": "Return all of the seasons for a TV show or mini-series.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "poster_url": "str",
          "name": "str",
          "overview": "NoneType",
          "number": "NoneType",
          "air_date": "str",
          "episode_count": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew",
        "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "person_id": "int",
          "type": "str",
          "full_name": "str",
          "headshot_url": "str",
          "role": "str",
          "episode_count": "int",
          "order": "NoneType"
        }
      }
    ],
    "query": "I want to watch a documentary about nature. Can you suggest a popular nature documentary available for streaming in the US? Also, provide the streaming sources for the documentary 'Planet Earth'.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      }
    ],
    "query_id": 5865
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Networks",
        "api_description": "Return a listing of all TV networks that may be returned for a title in the /title endpoint.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "origin_country": "str",
          "tmdb_id": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew",
        "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "person_id": "int",
          "type": "str",
          "full_name": "str",
          "headshot_url": "str",
          "role": "str",
          "episode_count": "int",
          "order": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Basic (FREE)",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
            "default": "18"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I'm planning a movie night with my friends this weekend. Can you recommend some new titles that have been added to streaming platforms recently? Also, provide me with the basic details and streaming availability of the movie with IMDb ID tt9904802.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)"
      }
    ],
    "query_id": 8031
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Networks",
        "api_description": "Return a listing of all TV networks that may be returned for a title in the /title endpoint.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "origin_country": "str",
          "tmdb_id": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew",
        "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "person_id": "int",
          "type": "str",
          "full_name": "str",
          "headshot_url": "str",
          "role": "str",
          "episode_count": "int",
          "order": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Basic (FREE)",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
            "default": "18"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I want to explore different genres of movies and series available on streaming platforms. Can you provide me with the basic details and streaming availability of a movie or series with the keyword 'zombie' and released between the years 2000 and 2025? Also, fetch the details of the actors and crew associated with the title with Watchmode ID 3173903.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)"
      }
    ],
    "query_id": 8032
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Networks",
        "api_description": "Return a listing of all TV networks that may be returned for a title in the /title endpoint.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "origin_country": "str",
          "tmdb_id": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew",
        "api_description": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "person_id": "int",
          "type": "str",
          "full_name": "str",
          "headshot_url": "str",
          "role": "str",
          "episode_count": "int",
          "order": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Basic (FREE)",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
            "default": "18"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I'm a film critic and I need to gather information about a specific movie. Can you provide me with the basic details and streaming availability of the movie with IMDb ID tt1877830? Additionally, fetch the details of the actors and crew associated with the movie.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Cast & Crew"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)"
      }
    ],
    "query_id": 8034
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "bitly",
        "api_name": "shorten",
        "api_description": "Given a long URL, returns a bitly short URL.",
        "required_parameters": [
          {
            "name": "longUrl",
            "type": "STRING",
            "description": "a long URL to be shortened (example: http://betaworks.com/).",
            "default": "http://www.mashape.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status_code": "int",
          "status_txt": "str",
          "data": "empty list"
        }
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Create a new link",
        "api_description": "Create a new link",
        "required_parameters": [
          {
            "name": "destination",
            "type": "STRING",
            "description": "The destination URL you want your branded short link to point to",
            "default": "https://rapidapi.com/"
          }
        ],
        "optional_parameters": [
          {
            "name": "domain[id]",
            "type": "STRING",
            "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
            "default": ""
          },
          {
            "name": "slashtag",
            "type": "STRING",
            "description": "The keyword portion of your branded short link",
            "default": ""
          },
          {
            "name": "domain[fullName]",
            "type": "STRING",
            "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Get a list of domains",
        "api_description": "Get a list of domains",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "active",
            "type": "BOOLEAN",
            "description": "Filter branded domains depending on whether they can be used to brand short links or not",
            "default": ""
          },
          {
            "name": "orderBy",
            "type": "STRING",
            "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
            "default": "createdAt"
          },
          {
            "name": "last",
            "type": "STRING",
            "description": "The id of the last domain you fetched, see Infinite Scrolling section",
            "default": ""
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "How many branded domains to load",
            "default": "100"
          },
          {
            "name": "orderDir",
            "type": "STRING",
            "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
            "default": "desc"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
            "default": ""
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I'm planning a road trip with my friends and we want to share the itinerary details. Can you help us create a short URL for the trip plan? Also, suggest some domain options for the trip link. Furthermore, provide me with a list of available domains for branding the short link.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "bitly",
        "api_name": "shorten"
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Create a new link"
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Get a list of domains"
      }
    ],
    "query_id": 11645
  },
  {
    "api_list": [
      {
        "category_name": "Tools",
        "tool_name": "bitly",
        "api_name": "shorten",
        "api_description": "Given a long URL, returns a bitly short URL.",
        "required_parameters": [
          {
            "name": "longUrl",
            "type": "STRING",
            "description": "a long URL to be shortened (example: http://betaworks.com/).",
            "default": "http://www.mashape.com"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "status_code": "int",
          "status_txt": "str",
          "data": "empty list"
        }
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Create a new link",
        "api_description": "Create a new link",
        "required_parameters": [
          {
            "name": "destination",
            "type": "STRING",
            "description": "The destination URL you want your branded short link to point to",
            "default": "https://rapidapi.com/"
          }
        ],
        "optional_parameters": [
          {
            "name": "domain[id]",
            "type": "STRING",
            "description": "The unique id of the branded domain. If not specified, rebrand.ly is used",
            "default": ""
          },
          {
            "name": "slashtag",
            "type": "STRING",
            "description": "The keyword portion of your branded short link",
            "default": ""
          },
          {
            "name": "domain[fullName]",
            "type": "STRING",
            "description": "The unique name of the branded domain, to be used in place of domain[id] in special cases. Precedence will be given to domain[id] value.",
            "default": ""
          }
        ],
        "method": "GET"
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Get a list of domains",
        "api_description": "Get a list of domains",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "active",
            "type": "BOOLEAN",
            "description": "Filter branded domains depending on whether they can be used to brand short links or not",
            "default": ""
          },
          {
            "name": "orderBy",
            "type": "STRING",
            "description": "Sorting criteria to apply to your branded domains collection among createdAt, updatedAt and fullName.",
            "default": "createdAt"
          },
          {
            "name": "last",
            "type": "STRING",
            "description": "The id of the last domain you fetched, see Infinite Scrolling section",
            "default": ""
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "How many branded domains to load",
            "default": "100"
          },
          {
            "name": "orderDir",
            "type": "STRING",
            "description": "Sorting direction to apply to your branded short links collection among desc and asc.",
            "default": "desc"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Filter branded domains depending on their type (owned by user, user, or service domains like rebrand.ly, service)",
            "default": ""
          }
        ],
        "method": "GET"
      }
    ],
    "query": "I'm organizing a team building activity for my company. Can you help me create a short URL for the event details? Also, suggest some domain options for the team building link. Furthermore, provide me with a list of available domains for branding the short link.",
    "relevant APIs": [
      {
        "category_name": "Tools",
        "tool_name": "bitly",
        "api_name": "shorten"
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Create a new link"
      },
      {
        "category_name": "Advertising",
        "tool_name": "URL Link Shortener",
        "api_name": "Get a list of domains"
      }
    ],
    "query_id": 11649
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New People",
        "api_description": "Get a listing of the ids of new people added to Watchmode within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Seasons",
        "api_description": "Return all of the seasons for a TV show or mini-series.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "poster_url": "str",
          "name": "str",
          "overview": "NoneType",
          "number": "NoneType",
          "air_date": "str",
          "episode_count": "NoneType"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)",
        "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "Title to search for.",
            "default": "batman"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
            "default": "movie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm organizing a movie marathon for my company's team-building event. Could you suggest some action movies from the 90s that are available for streaming on Netflix, Prime Video, and Hulu? Please include the IMDb ratings and streaming links for each movie.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra"
      }
    ],
    "query_id": 13441
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New People",
        "api_description": "Get a listing of the ids of new people added to Watchmode within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Seasons",
        "api_description": "Return all of the seasons for a TV show or mini-series.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "poster_url": "str",
          "name": "str",
          "overview": "NoneType",
          "number": "NoneType",
          "air_date": "str",
          "episode_count": "NoneType"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_year",
            "type": "NUMBER",
            "description": "Enter any year between 1970 to 2020 to get results.",
            "default": "1970"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          },
          {
            "name": "max_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "7.8"
          },
          {
            "name": "type",
            "type": "STRING",
            "description": "Enter type 'movie' or 'show'",
            "default": "movie"
          },
          {
            "name": "sort",
            "type": "STRING",
            "description": "Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly .",
            "default": "latest"
          },
          {
            "name": "min_imdb",
            "type": "NUMBER",
            "description": "",
            "default": "6"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple genre eg : action,horror",
            "default": "action"
          },
          {
            "name": "language",
            "type": "STRING",
            "description": "use comma seperated values to enter multiple values , eg : english,german",
            "default": "english"
          },
          {
            "name": "end_year",
            "type": "NUMBER",
            "description": "Enter any year from 1970 to 2020 to  get results.",
            "default": "2020"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": [
            {
              "imageurl": [
                "list of str with length 1"
              ],
              "genre": [
                "list of str with length 3"
              ],
              "imdbid": "str",
              "title": "str",
              "imdbrating": "float",
              "released": "int",
              "synopsis": "str",
              "type": "str",
              "_list_length": 50
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search By Title (FREE)",
        "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "Title to search for.",
            "default": "batman"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.",
            "default": "movie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      }
    ],
    "query": "I'm planning a movie night with my family and we want to watch some animated movies. Can you recommend some animated movies suitable for kids and adults that are available for streaming on Netflix and Prime Video? Please provide the IMDb ratings and streaming links for each movie.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Advanced Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra"
      }
    ],
    "query_id": 13443
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Streaming Release Dates",
        "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220301"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many release dates to return, default is 500.",
            "default": "250"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220312"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I'm a huge fan of Leonardo DiCaprio and I want to know more about his career. Can you give me the basic information, including the birth year and known titles, of Leonardo DiCaprio? Also, provide me with the streaming sources for the movie 'The Wolf of Wall Street' and the latest arrivals on different platforms in the US.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)"
      }
    ],
    "query_id": 13773
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Streaming Release Dates",
        "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220301"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many release dates to return, default is 500.",
            "default": "250"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220312"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I'm organizing a movie marathon for my family and I need a list of family-friendly movies available on streaming platforms in the US. Can you provide me with the streaming sources for the movie 'Toy Story' and the basic information about the cast, including their names and professions? Also, give me the latest arrivals on different platforms in the US.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      }
    ],
    "query_id": 13774
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Streaming Release Dates",
        "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220301"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many release dates to return, default is 500.",
            "default": "250"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220312"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I'm a film critic and I need to gather information about the latest releases. Can you provide me with the list of recently released movies and TV shows available on streaming platforms in the US? Additionally, give me the streaming availability details for the show 'Breaking Bad' and the basic information about the cast, including their names and professions.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Streaming Release Dates"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      }
    ],
    "query_id": 13776
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Streaming Release Dates",
        "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220301"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many release dates to return, default is 500.",
            "default": "250"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220312"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I'm a movie enthusiast and I want to explore different genres. Can you help me find a list of titles in the horror and comedy genres available on streaming platforms in the US? Also, provide me with the streaming sources for the movie 'Get Out' and the basic information about the cast, including their names and professions.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra"
      }
    ],
    "query_id": 13777
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Streaming Release Dates",
        "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220301"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many release dates to return, default is 500.",
            "default": "250"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220312"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I'm a screenwriter looking for inspiration for my next project. Can you help me find a list of critically acclaimed movies available on streaming platforms in the US? Also, provide me with the streaming sources for the movie 'Citizen Kane' and the basic information about the cast, including their names and professions.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)"
      }
    ],
    "query_id": 13779
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles",
        "api_description": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "genres",
            "type": "STRING",
            "description": "Filter results to only include certain genre(s). Pass in a single genre id (which you would get from the /v1/genres/ endpoint, or multiple comma separated.",
            "default": "4,9"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "250"
          },
          {
            "name": "source_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a source (returned from the /sources/ endpoint) to filter the results to titles available on that source. Pass multiple values comma separated to return titles available on one of the sources you pass in.\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "23,206"
          },
          {
            "name": "source_types",
            "type": "STRING",
            "description": "Filter results to only include titles that are available on a specific type(s) of source (such a subscription, or TV Everywhere channel apps, etc). By default all are selected, pass one or multiple (comma delimited) of these values: sub, rent, buy, free, tve\nNote: If you populate this you can only set a single region, and if you set no region US will be set by default.",
            "default": "sub,free"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU\nNote: If you populate the source_ids or source_types you can only set a single region, and if you set no region US will be set by default. ",
            "default": "US"
          },
          {
            "name": "sort_by",
            "type": "STRING",
            "description": "Sort order of results, possible values: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default value is: relevance_desc.",
            "default": "relevance_desc"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "network_ids",
            "type": "STRING",
            "description": "Pass an individual ID for a TV network (returned from the /networks/ endpoint) to filter the results to titles the originally aired on that TV network. Pass multiple values comma separated to return titles that aired on one of the networks you passed in.",
            "default": "1,8,12"
          },
          {
            "name": "release_date_start",
            "type": "NUMBER",
            "description": "Set the start of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or after January 1, 2001 set this to 20010101",
            "default": "20010101"
          },
          {
            "name": "release_date_end",
            "type": "NUMBER",
            "description": "Set the end of a range for when the title was released (the initial release of the movie or show, not necessarily when it was released on a streaming service). For example, to only include releases on or before December 11, 2020 set this to 20201211",
            "default": "20201211"
          }
        ],
        "method": "GET",
        "template_response": {
          "titles": "empty list",
          "page": "int",
          "total_results": "int",
          "total_pages": "int"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources",
        "api_description": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "source_id": "int",
          "name": "str",
          "type": "str",
          "region": "str",
          "ios_url": "str",
          "android_url": "str",
          "web_url": "str",
          "format": "str",
          "price": "float",
          "seasons": "NoneType",
          "episodes": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Streaming Release Dates",
        "api_description": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a start date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220301"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many release dates to return, default is 500.",
            "default": "250"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, this endpoint will return release dates from the current date through the next 30 days. Populate this parameter to manually set a end date to include releases from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": "20220312"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "New Arrivals",
        "api_description": "Get the latest arrivals from different platforms .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.",
            "default": "US"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "page": "int",
          "results": "empty list"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Basic (FREE)",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": {\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_l"
      }
    ],
    "query": "I want to explore the world of independent cinema. Can you give me a list of independent movies available on streaming platforms in the US? Additionally, provide me with the streaming availability details for the movie 'Moonlight' and the basic information about the cast, including their names and professions.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "List Titles"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Streaming Sources"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra"
      }
    ],
    "query_id": 13780
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Sources",
        "api_description": "Get a listing of titles that have changed to their streaming sources within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass in the 2 character region code (eg US) for the country you want to get titles with changed sources from. There is a limit to 1 region on this endpoint, if you leave this field blank US changes will be returned only.",
            "default": "US,CA"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Seasons",
        "api_description": "Return all of the seasons for a TV show or mini-series.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "poster_url": "str",
          "name": "str",
          "overview": "NoneType",
          "number": "NoneType",
          "air_date": "str",
          "episode_count": "NoneType"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Person",
        "api_description": "Return details on a specific person (actor, director, etc).",
        "required_parameters": [
          {
            "name": "id",
            "type": "NUMBER",
            "description": "",
            "default": "7110004"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "full_name": "str",
          "first_name": "str",
          "last_name": "str",
          "tmdb_id": "int",
          "imdb_id": "str",
          "main_profession": "str",
          "secondary_profession": "str",
          "tertiary_profession": "str",
          "date_of_birth": "str",
          "date_of_death": "NoneType",
          "place_of_birth": "str",
          "gender": "str",
          "headshot_url": "str",
          "known_for": [
            "list of int with length 4"
          ],
          "relevance_percentile": "int"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Basic (FREE)",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genre",
            "type": "STRING",
            "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.",
            "default": "18"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Genres (FREE)",
        "api_description": "Get the id to name mapping of supported genres.",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "result": {
            "1": "str",
            "10402": "str",
            "10749": "str",
            "10751": "str",
            "10752": "str",
            "10763": "str",
            "10764": "str",
            "10767": "str",
            "12": "str",
            "14": "str",
            "16": "str",
            "18": "str",
            "2": "str",
            "27": "str",
            "28": "str",
            "3": "str",
            "35": "str",
            "36": "str",
            "37": "str",
            "4": "str",
            "5": "str",
            "53": "str",
            "6": "str",
            "7": "str",
            "80": "str",
            "878": "str",
            "9648": "str",
            "99": "str"
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I need information about a specific person. Can you provide me with details on the actor with the ID '7110004'? I want to know their full name, date of birth, place of birth, and main profession. Additionally, fetch the basic information about the cast member with the ID 'nm0000375' to learn more about their profession and known titles.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Person"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      }
    ],
    "query_id": 16184
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details",
        "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
            "default": "ES"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "title": "str",
          "original_title": "str",
          "plot_overview": "str",
          "type": "str",
          "runtime_minutes": "NoneType",
          "year": "int",
          "end_year": "int",
          "release_date": "str",
          "imdb_id": "str",
          "tmdb_id": "int",
          "tmdb_type": "str",
          "genres": [
            "list of int with length 3"
          ],
          "genre_names": [
            "list of str with length 3"
          ],
          "user_rating": "float",
          "critic_score": "int",
          "us_rating": "str",
          "poster": "str",
          "backdrop": "str",
          "original_language": "str",
          "english_title": "str",
          "similar_titles": [
            "list of int with length 25"
          ],
          "networks": [
            "list of int with length 1"
          ],
          "network_names": [
            "list of str with length 1"
          ],
          "relevance_percentile": "float",
          "trailer": "str",
          "trailer_thumbnail": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Episodes",
        "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "episode_number": "int",
          "season_number": "int",
          "season_id": "int",
          "tmdb_id": "int",
          "imdb_id": "str",
          "thumbnail_url": "str",
          "release_date": "str",
          "runtime_minutes": "int",
          "overview": "str",
          "sources": [
            {
              "source_id": "int",
              "name": "str",
              "type": "str",
              "region": "str",
              "ios_url": "str",
              "android_url": "str",
              "web_url": "str",
              "format": "str",
              "price": "NoneType",
              "_list_length": 7
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I'm planning a movie night with my friends and we want to watch a comedy film. Can you recommend some popular comedy movies available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      }
    ],
    "query_id": 18984
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details",
        "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
            "default": "ES"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "title": "str",
          "original_title": "str",
          "plot_overview": "str",
          "type": "str",
          "runtime_minutes": "NoneType",
          "year": "int",
          "end_year": "int",
          "release_date": "str",
          "imdb_id": "str",
          "tmdb_id": "int",
          "tmdb_type": "str",
          "genres": [
            "list of int with length 3"
          ],
          "genre_names": [
            "list of str with length 3"
          ],
          "user_rating": "float",
          "critic_score": "int",
          "us_rating": "str",
          "poster": "str",
          "backdrop": "str",
          "original_language": "str",
          "english_title": "str",
          "similar_titles": [
            "list of int with length 25"
          ],
          "networks": [
            "list of int with length 1"
          ],
          "network_names": [
            "list of str with length 1"
          ],
          "relevance_percentile": "float",
          "trailer": "str",
          "trailer_thumbnail": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Episodes",
        "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "episode_number": "int",
          "season_number": "int",
          "season_id": "int",
          "tmdb_id": "int",
          "imdb_id": "str",
          "thumbnail_url": "str",
          "release_date": "str",
          "runtime_minutes": "int",
          "overview": "str",
          "sources": [
            {
              "source_id": "int",
              "name": "str",
              "type": "str",
              "region": "str",
              "ios_url": "str",
              "android_url": "str",
              "web_url": "str",
              "format": "str",
              "price": "NoneType",
              "_list_length": 7
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I'm a movie enthusiast and I'm interested in watching critically acclaimed films. Can you suggest some award-winning movies with high IMDb ratings? Also, provide the streaming platforms where these movies are available in the US.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      }
    ],
    "query_id": 18987
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details",
        "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
            "default": "ES"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "title": "str",
          "original_title": "str",
          "plot_overview": "str",
          "type": "str",
          "runtime_minutes": "NoneType",
          "year": "int",
          "end_year": "int",
          "release_date": "str",
          "imdb_id": "str",
          "tmdb_id": "int",
          "tmdb_type": "str",
          "genres": [
            "list of int with length 3"
          ],
          "genre_names": [
            "list of str with length 3"
          ],
          "user_rating": "float",
          "critic_score": "int",
          "us_rating": "str",
          "poster": "str",
          "backdrop": "str",
          "original_language": "str",
          "english_title": "str",
          "similar_titles": [
            "list of int with length 25"
          ],
          "networks": [
            "list of int with length 1"
          ],
          "network_names": [
            "list of str with length 1"
          ],
          "relevance_percentile": "float",
          "trailer": "str",
          "trailer_thumbnail": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Episodes",
        "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "episode_number": "int",
          "season_number": "int",
          "season_id": "int",
          "tmdb_id": "int",
          "imdb_id": "str",
          "thumbnail_url": "str",
          "release_date": "str",
          "runtime_minutes": "int",
          "overview": "str",
          "sources": [
            {
              "source_id": "int",
              "name": "str",
              "type": "str",
              "region": "str",
              "ios_url": "str",
              "android_url": "str",
              "web_url": "str",
              "format": "str",
              "price": "NoneType",
              "_list_length": 7
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I'm planning a movie night with my friends and we want to watch a horror film. Can you recommend some popular horror movies available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      }
    ],
    "query_id": 18988
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details",
        "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
            "default": "ES"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "title": "str",
          "original_title": "str",
          "plot_overview": "str",
          "type": "str",
          "runtime_minutes": "NoneType",
          "year": "int",
          "end_year": "int",
          "release_date": "str",
          "imdb_id": "str",
          "tmdb_id": "int",
          "tmdb_type": "str",
          "genres": [
            "list of int with length 3"
          ],
          "genre_names": [
            "list of str with length 3"
          ],
          "user_rating": "float",
          "critic_score": "int",
          "us_rating": "str",
          "poster": "str",
          "backdrop": "str",
          "original_language": "str",
          "english_title": "str",
          "similar_titles": [
            "list of int with length 25"
          ],
          "networks": [
            "list of int with length 1"
          ],
          "network_names": [
            "list of str with length 1"
          ],
          "relevance_percentile": "float",
          "trailer": "str",
          "trailer_thumbnail": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Episodes",
        "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "episode_number": "int",
          "season_number": "int",
          "season_id": "int",
          "tmdb_id": "int",
          "imdb_id": "str",
          "thumbnail_url": "str",
          "release_date": "str",
          "runtime_minutes": "int",
          "overview": "str",
          "sources": [
            {
              "source_id": "int",
              "name": "str",
              "type": "str",
              "region": "str",
              "ios_url": "str",
              "android_url": "str",
              "web_url": "str",
              "format": "str",
              "price": "NoneType",
              "_list_length": 7
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I'm a history buff and I'm interested in watching historical films. Can you recommend some acclaimed historical movies available on streaming platforms in the US? Also, provide the runtime and IMDb ratings for these movies.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      }
    ],
    "query_id": 18992
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Services (FREE)",
        "api_description": "Get the list of supported services and details about them",
        "required_parameters": [],
        "optional_parameters": [],
        "method": "GET",
        "template_response": "{\"result\": {\"all4\": {\"id\": \"str\", \"countries\": {\"gb\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}, \"ie\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {}}}}, \"apple\": {\"id\": \"str\", \"countries\": {\"ae\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000234\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.1000358\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}, \"tvs.sbd.3000\": {\"id\": \"str\", \"displayName\": \"str\", \"homePage\": \"str\", \"themeColorCode\": \"str\", \"image\": \"str\"}}}, \"ar\": {\"supportedStreamingTypes\": {\"addon\": \"bool\", \"buy\": \"bool\", \"free\": \"bool\", \"rent\": \"bool\", \"subscription\": \"bool\"}, \"addOns\": {\"tvs.sbd.1000212\":"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details",
        "api_description": "Get the details for a specific title, using the Watchmode universal ID.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [
          {
            "name": "language",
            "type": "STRING",
            "description": "Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n",
            "default": "ES"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "title": "str",
          "original_title": "str",
          "plot_overview": "str",
          "type": "str",
          "runtime_minutes": "NoneType",
          "year": "int",
          "end_year": "int",
          "release_date": "str",
          "imdb_id": "str",
          "tmdb_id": "int",
          "tmdb_type": "str",
          "genres": [
            "list of int with length 3"
          ],
          "genre_names": [
            "list of str with length 3"
          ],
          "user_rating": "float",
          "critic_score": "int",
          "us_rating": "str",
          "poster": "str",
          "backdrop": "str",
          "original_language": "str",
          "english_title": "str",
          "similar_titles": [
            "list of int with length 25"
          ],
          "networks": [
            "list of int with length 1"
          ],
          "network_names": [
            "list of str with length 1"
          ],
          "relevance_percentile": "float",
          "trailer": "str",
          "trailer_thumbnail": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Episodes",
        "api_description": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
        "required_parameters": [
          {
            "name": "id",
            "type": "STRING",
            "description": "This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. ",
            "default": "3173903"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "episode_number": "int",
          "season_number": "int",
          "season_id": "int",
          "tmdb_id": "int",
          "imdb_id": "str",
          "thumbnail_url": "str",
          "release_date": "str",
          "runtime_minutes": "int",
          "overview": "str",
          "sources": [
            {
              "source_id": "int",
              "name": "str",
              "type": "str",
              "region": "str",
              "ios_url": "str",
              "android_url": "str",
              "web_url": "str",
              "format": "str",
              "price": "NoneType",
              "_list_length": 7
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Additional Title Details",
        "api_description": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt7286456"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imdbid": "str",
          "title": "str",
          "people": [
            {
              "peopleid": "str",
              "characters": "NoneType",
              "category": "str",
              "job": "str",
              "_list_length": 10
            }
          ],
          "numVotes": "int",
          "trailerUrl": [
            "list of str with length 3"
          ],
          "plotSummary": "str",
          "quotes": [
            "list of str with length 5"
          ],
          "reviews": [
            "list of str with length 5"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      }
    ],
    "query": "I'm organizing a movie night for my company's team-building event. Can you suggest some motivational movies with positive messages? Also, provide the streaming platforms where these movies are available in the US.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      }
    ],
    "query_id": 18993
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources",
        "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
            "default": "US,CA"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
            "default": "sub,free"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "type": "str",
          "logo_100px": "str",
          "ios_appstore_url": "str",
          "android_playstore_url": "str",
          "android_scheme": "str",
          "ios_scheme": "str",
          "regions": [
            "list of str with length 51"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Episodes",
        "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      }
    ],
    "query": "I want to explore new movies and TV series added to Watchmode recently. Can you provide me with a list of new titles added between June 1, 2022, and June 30, 2022? Additionally, fetch the basic information about the cast member with the peopleid 'nm0000375'.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      }
    ],
    "query_id": 19274
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources",
        "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
            "default": "US,CA"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
            "default": "sub,free"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "type": "str",
          "logo_100px": "str",
          "ios_appstore_url": "str",
          "android_playstore_url": "str",
          "android_scheme": "str",
          "ios_scheme": "str",
          "regions": [
            "list of str with length 51"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Episodes",
        "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      }
    ],
    "query": "My family and I are planning a movie marathon and we need some movie recommendations. Could you search for movies based on the genre 'action' and language 'Spanish'? Also, provide us with the streaming sources available in the US and Canada where we can watch these movies.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources"
      }
    ],
    "query_id": 19275
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources",
        "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
            "default": "US,CA"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
            "default": "sub,free"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "type": "str",
          "logo_100px": "str",
          "ios_appstore_url": "str",
          "android_playstore_url": "str",
          "android_scheme": "str",
          "ios_scheme": "str",
          "regions": [
            "list of str with length 51"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Episodes",
        "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      }
    ],
    "query": "I'm planning a movie-themed birthday party for my niece and I need some suggestions for movies suitable for kids. Can you search for movies based on the genre 'animation' and language 'English'? Also, provide the streaming sources available in the US and Canada where we can watch these movies.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources"
      }
    ],
    "query_id": 19277
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources",
        "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
            "default": "US,CA"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
            "default": "sub,free"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "type": "str",
          "logo_100px": "str",
          "ios_appstore_url": "str",
          "android_playstore_url": "str",
          "android_scheme": "str",
          "ios_scheme": "str",
          "regions": [
            "list of str with length 51"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Episodes",
        "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      }
    ],
    "query": "I'm organizing a movie-themed event for my company and I need some information about the cast member with the peopleid 'nm0000375'. Can you fetch the name, profession, birth year, and best titles associated with this cast member? Also, provide the streaming sources available in the US and Canada for these titles.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources"
      }
    ],
    "query_id": 19281
  },
  {
    "api_list": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search",
        "api_description": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
        "required_parameters": [
          {
            "name": "title",
            "type": "STRING",
            "description": "",
            "default": "Endgame"
          }
        ],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "*Maximum number of pages returned is 10 ",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params",
        "api_description": "Get array of values that can be used as params in Advanced Search .",
        "required_parameters": [
          {
            "name": "param",
            "type": "STRING",
            "description": "input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .",
            "default": "genre"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {}
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources",
        "api_description": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "regions",
            "type": "STRING",
            "description": "Pass one of the region values (eg. US), or multiple regions comma delimited to only return sources active in those regions. Currently supported regions: US, GB, CA, AU",
            "default": "US,CA"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Pass one of the following values, or multiple comma separated values to only return certain types of streaming sources:\nsub, free, purchase, tve. \\\\\\\"sub\\\\\\\" means the service is a subscription service, \\\\\\\"tve\\\\\\\" means the service is a TV channel app.",
            "default": "sub,free"
          }
        ],
        "method": "GET",
        "template_response": {
          "id": "int",
          "name": "str",
          "type": "str",
          "logo_100px": "str",
          "ios_appstore_url": "str",
          "android_playstore_url": "str",
          "android_scheme": "str",
          "ios_scheme": "str",
          "regions": [
            "list of str with length 51"
          ]
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "New Titles",
        "api_description": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "page",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "1"
          },
          {
            "name": "types",
            "type": "STRING",
            "description": "Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film",
            "default": "movie,tv_series"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set how many titles to return per page, default and maximum is 250.",
            "default": "50"
          },
          {
            "name": "end_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": ""
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Episodes",
        "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      }
    ],
    "query": "I'm planning a movie night with my family and we want to watch some horror movies. Can you search for movies based on the genre 'horror' and language 'English'? Also, provide the streaming sources available in the US and Canada where we can watch these movies.",
    "relevant APIs": [
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Params"
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Sources"
      }
    ],
    "query_id": 19282
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Episodes",
        "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Search",
        "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
        "required_parameters": [
          {
            "name": "search_field",
            "type": "STRING",
            "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
            "default": "name"
          },
          {
            "name": "search_value",
            "type": "STRING",
            "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
            "default": "Breaking Bad"
          }
        ],
        "optional_parameters": [
          {
            "name": "types",
            "type": "STRING",
            "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
            "default": "tv"
          }
        ],
        "method": "GET",
        "template_response": {
          "title_results": [
            {
              "resultType": "str",
              "id": "int",
              "name": "str",
              "type": "str",
              "year": "int",
              "imdb_id": "str",
              "tmdb_id": "int",
              "tmdb_type": "str",
              "_list_length": 3
            }
          ],
          "people_results": "empty list"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Autocomplete Search",
        "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
        "required_parameters": [
          {
            "name": "search_value",
            "type": "STRING",
            "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
            "default": "Breaking Bad"
          }
        ],
        "optional_parameters": [
          {
            "name": "search_type",
            "type": "NUMBER",
            "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "results": [
            {
              "name": "str",
              "relevance": "float",
              "type": "str",
              "id": "int",
              "year": "int",
              "result_type": "str",
              "tmdb_id": "int",
              "tmdb_type": "str",
              "image_url": "str",
              "_list_length": 9
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      }
    ],
    "query": "I'm planning a movie night with my friends this weekend. Can you suggest some popular movies released in the last year? Also, provide the streaming availability for these movies on different platforms like Netflix, Prime Video, and Hulu.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers"
      }
    ],
    "query_id": 25160
  },
  {
    "api_list": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Titles with Changed Episodes",
        "api_description": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "end_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "start_date",
            "type": "STRING",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021), or for more granular results down to the second YYYYMMDDHHMMSS (eg 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24 hour format and in Eastern Standard Time. Month, day, hour, minutes and seconds use leading zeros for single digit values.",
            "default": ""
          },
          {
            "name": "page",
            "type": "NUMBER",
            "description": "By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).",
            "default": "1"
          },
          {
            "name": "limit",
            "type": "NUMBER",
            "description": "Set the page of results you want to return, if this isn't set you will always get page 1 returned.",
            "default": "50"
          }
        ],
        "method": "GET",
        "template_response": {
          "success": "bool",
          "statusCode": "int",
          "statusMessage": "str"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Search",
        "api_description": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
        "required_parameters": [
          {
            "name": "search_field",
            "type": "STRING",
            "description": "The field for us to search in, either a 3rd party ID or \\\\\\\"name\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.",
            "default": "name"
          },
          {
            "name": "search_value",
            "type": "STRING",
            "description": "The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.",
            "default": "Breaking Bad"
          }
        ],
        "optional_parameters": [
          {
            "name": "types",
            "type": "STRING",
            "description": "Pass one of the following values, or multiple comma separated values to only return certain types:\ntv, movie, person.",
            "default": "tv"
          }
        ],
        "method": "GET",
        "template_response": {
          "title_results": [
            {
              "resultType": "str",
              "id": "int",
              "name": "str",
              "type": "str",
              "year": "int",
              "imdb_id": "str",
              "tmdb_id": "int",
              "tmdb_type": "str",
              "_list_length": 3
            }
          ],
          "people_results": "empty list"
        }
      },
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Autocomplete Search",
        "api_description": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
        "required_parameters": [
          {
            "name": "search_value",
            "type": "STRING",
            "description": "The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\"The sha\\\" will find the movie \\\"The Shawshank Redemption\\\".",
            "default": "Breaking Bad"
          }
        ],
        "optional_parameters": [
          {
            "name": "search_type",
            "type": "NUMBER",
            "description": "Set this to 1 to include titles and people in results. Set this to 2 to include titles only. Set this to 3 to include movies only. Set this to 4 to include TV only. Set this to 5 to include people only. By default this is set to 1.",
            "default": "1"
          }
        ],
        "method": "GET",
        "template_response": {
          "results": [
            {
              "name": "str",
              "relevance": "float",
              "type": "str",
              "id": "int",
              "year": "int",
              "result_type": "str",
              "tmdb_id": "int",
              "tmdb_type": "str",
              "image_url": "str",
              "_list_length": 9
            }
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Get Ultra",
        "api_description": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
        "required_parameters": [],
        "optional_parameters": [
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "tmdb_id",
            "type": "STRING",
            "description": "",
            "default": ""
          },
          {
            "name": "imdb_id",
            "type": "STRING",
            "description": "",
            "default": "tt1877830"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Pro",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          },
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          }
        ],
        "optional_parameters": [
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": "zombie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "Streaming Availability",
        "api_name": "Search Ultra",
        "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
        "required_parameters": [
          {
            "name": "services",
            "type": "STRING",
            "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.",
            "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"
          },
          {
            "name": "country",
            "type": "STRING",
            "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.",
            "default": "us"
          }
        ],
        "optional_parameters": [
          {
            "name": "max_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "1000000"
          },
          {
            "name": "order_by",
            "type": "STRING",
            "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`",
            "default": "year"
          },
          {
            "name": "max_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "90"
          },
          {
            "name": "min_imdb_rating",
            "type": "NUMBER",
            "description": "Out of 100",
            "default": "70"
          },
          {
            "name": "desc",
            "type": "BOOLEAN",
            "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.",
            "default": "true"
          },
          {
            "name": "keyword",
            "type": "STRING",
            "description": "A keyword to only search within the shows have that keyword in their overview or title.",
            "default": ""
          },
          {
            "name": "cursor",
            "type": "STRING",
            "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.",
            "default": ""
          },
          {
            "name": "year_max",
            "type": "NUMBER",
            "description": "Maximum release/air year of the show.",
            "default": "2025"
          },
          {
            "name": "min_imdb_vote_count",
            "type": "NUMBER",
            "description": "",
            "default": "10000"
          },
          {
            "name": "year_min",
            "type": "NUMBER",
            "description": "Minimum release/air year of the show.",
            "default": "2000"
          },
          {
            "name": "show_original_language",
            "type": "STRING",
            "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.",
            "default": "en"
          },
          {
            "name": "genres_relation",
            "type": "STRING",
            "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.",
            "default": "or"
          },
          {
            "name": "genres",
            "type": "STRING",
            "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres",
            "default": "18,80"
          },
          {
            "name": "output_language",
            "type": "STRING",
            "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.",
            "default": "en"
          },
          {
            "name": "show_type",
            "type": "STRING",
            "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.",
            "default": "movie"
          }
        ],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Basic Info",
        "api_description": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
        "required_parameters": [
          {
            "name": "peopleid",
            "type": "STRING",
            "description": "",
            "default": "nm0000375"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "peopleid": "str",
          "name": "str",
          "profession": [
            "list of str with length 3"
          ],
          "knownForTitles": [
            "list of str with length 4"
          ],
          "birthYear": "str",
          "deathYear": "str",
          "bio": "str",
          "born": "str",
          "birthName": "str",
          "poster": [
            "list of str with length 1"
          ]
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers",
        "api_description": "Get  information on OTT platforms we suuport .",
        "required_parameters": [
          {
            "name": "region",
            "type": "STRING",
            "description": "currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.",
            "default": "IN"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "message": "str"
        }
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details",
        "api_description": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
        "required_parameters": [
          {
            "name": "imdbid",
            "type": "STRING",
            "description": "",
            "default": "tt9904802"
          }
        ],
        "optional_parameters": [],
        "method": "GET",
        "template_response": {
          "imageurl": [
            "list of str with length 1"
          ],
          "genre": [
            "list of str with length 1"
          ],
          "imdbid": "str",
          "title": "str",
          "runtime": "str",
          "imdbrating": "float",
          "released": "int",
          "synopsis": "str",
          "type": "str",
          "language": [
            "list of str with length 4"
          ],
          "streamingAvailability": {
            "country": {
              "US": [
                {
                  "url": "str",
                  "platform": "str",
                  "_list_length": 9
                }
              ]
            }
          }
        }
      }
    ],
    "query": "I'm planning a romantic date night with my partner and I want to watch a romantic movie. Can you suggest some romantic movies and provide the streaming availability on platforms like Netflix and Prime Video? Also, suggest some romantic dinner recipes.",
    "relevant APIs": [
      {
        "category_name": "Entertainment",
        "tool_name": "Watchmode",
        "api_name": "Search"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "Title Details"
      },
      {
        "category_name": "Movies",
        "tool_name": "OTT details",
        "api_name": "OTT Providers"
      }
    ],
    "query_id": 25163
  }
]